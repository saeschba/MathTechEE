(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    250120,       6035]
NotebookOptionsPosition[    236227,       5621]
NotebookOutlinePosition[    238509,       5685]
CellTagsIndexPosition[    238429,       5680]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 TogglerBox[2, {1->
  OverlayBox[{
   TagBox[GridBox[{
      {
       GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahIzkCEFxAJADBL8//8/
Qfzo0SP2GzduCF29elXs/Pnz0sgYn747d+5wA9VoArE/EB8B4uPoGJu+Fy9e
MF+4cEENKB8AxBeB+AMQ/wXif+gYi1tBdvoB8QUg/ghV9x8XRtb7/PlzFqje
t1D7cOrDpv/ixYvqUHuJ0ousHxpWAVA3E6UXWT80nC8S8i82/Q8ePOAgx26Y
/uvXrwsD2UdJ8Tey/kuXLolD0wNJbofpB6YVSUr0n4ek5QHTT6n7KQ0/SuOP
0vRDafqlRv6BxgPZ+Ret/HhHrBl4yi9QWHwiFB7Yyk+QO6B+CTxPYvmJjG/f
vs17nozyG1f9cR6t7gBhAPeiQ4A=
         "], {{0, 26}, {16, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{16, 26},
        PlotRange->{{0, 16}, {0, 26}}], 
       GraphicsBox[RasterBox[CompressedData["
1:eJzt2d9OVFcUB2DSNmkfQRFEiRQ1gCK1vW4fwT6BJu1tE9uk8fUUERE9aECC
qLGYEmKkErWxtont2mGdcDLVOpNgZijfJB9hzp+99j6zb9b5Hb3ww7nvP+rr
6/vxs/hz7vzPX1+8eP7St5/El28u/fTdhY/jn/6w8GlfXzlYVdWhDgyEwXT4
HQYbBho6qQMAAOxt/Q0HWxxo0TzX3xij7juGwpFwNAyHY2EkfB6OhxPhZBgL
42EinAqnw2SYSl+Es+HL9FWb6uvP5hj1eJNZ41TWHM85nMw5Hc85juSch3MN
R3JNdf/UfGbtPqf6WdW6/XsDAADsV7vd/7b2vqPV2/veuuc9k6Za1Mfr3vVt
feto9e+eVb9KL2tmz81M+n25dadZ9bU2zYXbYSmshNXwoOF+uJfn7obFcKfa
/twMN8L1MNtBTQAAYO+ZSVfTdLqSLreoj0/n9eXe0jeUHmQ+3AoL1XZ/UfqR
5Wq77yg9yMPwS3gcfg0b4Ul4Gn4LW+F5eBl+D6/CH+F1+DP99Q71+dd5z6sc
42WOuZU1nmbNjZzD45zTw5zjSs55KdewkGuazzXONp5Xu8+pflb185rpgd8d
AABgv/kQ/W/J4krGVvrIkruVDO5RWAvr1U7fuxmeVTt9b/Ei1d+38prNaqdv
Xc+xHuXY97LWYtbWr9Jryj4sGXPJmkvmXD7l/UrZsyWTLu9dyj4u72Ca2fVq
nivvY8renuug5ps2/b2L2q0JAADwX3azT/kQuv18AAAA2Pv0rOxn3djz3X6f
BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAADsHW/a1I2aAAAAAAAAsJ91OyOEburGnr/W
prlwOyyFlbAaHjTcD/fy3N2wGO5U25+b4Ua4HmY7qAkAAAAAAAC9aCZdTdPp
Srrcoj4+ndeXe0tuVjK4+XCr2s7iSsa2XG3nbiWDexTWwnrYCE/CZngWtsLz
9CLV37fyms28ZyPHWMsxH2SN5ax5O+cwn3Oabayv3XXVa6vXN9MDvxN7W9mH
JWMuWXPJnMunZNBlz5ZMumTTZR+XrLqZXa/muZJtl70910HNQx0YCIPp8DsM
Ngw0dFIHAAAAAAAAel1/w8EWB1o0z/U3xqhzt6FwNAyHY2EkjIYT4WQYC+Nh
IpwOk+FMmmpRH5/Mayfy3rEc60SOPZK1hrP2ULWT9zXX2O666rXVuv378P/S
zJ6bmfT7cuuOsup/AFmW9vs=
         "], {{0, 26}, {2000, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{2000, 26},
        PlotRange->{{0, 2000}, {0, 26}}], 
       GraphicsBox[RasterBox[CompressedData["
1:eJy9lstOwkAUhhthQUJcuUBl5cr4GPoABvEJINGtCZoYng4Il4Z7gXAJYUHY
QAi3GlYQPZ5/4pCm0pYC2uSDaXvmn5lzzpzpVfQl/HyiKMqrj3/CkffbWCwS
f/TyzV387Snq4cYlc87gYbVaDbpB07SLRqMR6Pf7PiJSnOA+6h7kmBBz0+12
Tx30v/bgk9GZOvPAa7oejUYeC306AIz1wWjM/WAw8B9ZX4L1TDHGcDj02ulX
KpUNbt79jKHBV1b66Fcul3fCYgzEJNTr9fxmfaldKpWoUChQPp8X/8ViUWB8
BhuLMRCPGvJqmz76QWOxWFCtVqNsNku5XE6AdqfToclkImxga7cGuT/M+uw/
ms/ntF6vqdlsUjKZFKCNC/pynTZxyLbb7bNt/sHcMpkMzWYzoVev1wW4xuOx
WAdsbGIAH6ncJ7BNH/6FRjqdJl3XSV7T6VSsA76CDWxt9oSKOmLOH/RBLKEP
LVVVN/qJRGKjDxsnfSZoN3/4CPNfrVa/5n+IvtH/iDHu9/G/2T/G/JT5A41U
KiXm3Wq1xBhcx5zy0zK+Mj+Xy6XIf5n7EuQ/9sYh+Wneqy73r+3+2rX2OPh+
a31wqpHG5xbatvXtCDjW5wO1Z9UdzheXyPMRPrc6H49yvpvn/Y/fJ3/6ffUN
AyH/6w==
         "], {{0, 26}, {24, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{24, 26},
        PlotRange->{{0, 24}, {0, 26}}]}
     },
     AutoDelete->False,
     GridBoxItemSize->{"Columns" -> {Automatic, 
         Scaled[0.6], Automatic}},
     GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
    "Grid"], 
   PaneBox[
    StyleBox[
     RowBox[{
     "Background", " ", "images", " ", "and", " ", "text", " ", "colors", " ",
       "have", " ", "been", " ", "adjusted", " ", "for", " ", "editing", " ", 
      
      RowBox[{"purposes", "."}]}],
     LineBreakWithin->False,
     FontFamily->"Helvetica",
     FontSize->12,
     FontColor->GrayLevel[0.4]],
    Alignment->Center,
    ImageSize->Scaled[0.5],
    ScrollPosition->{0., 0.}]},
   Alignment->{Center, Center}], 2->""}, "1"]], "SlideShowNavigationBar", \
"FirstSlide",
 CellMargins->{{0, 0}, {0, 0}},
 CellFrameLabelMargins->2,
 CellSize->{Inherited, 30},
 CellChangeTimes->{3.63611411702881*^9},
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.636114599213521*^9}],

Cell["Mathematical Techniques in Evolution and Ecology", "Subsubtitle",
 CellChangeTimes->{{3.6361140738110437`*^9, 3.636114105202126*^9}, {
  3.636114292374742*^9, 3.636114292919485*^9}, {3.636114430585359*^9, 
  3.636114430808786*^9}, {3.636114503998451*^9, 3.636114519333572*^9}},
 TextAlignment->Center],

Cell[CellGroupData[{

Cell["\<\
Some classic models in
evolution and ecology\
\>", "Title",
 CellChangeTimes->{
  3.559948400406288*^9, {3.636114041492673*^9, 3.636114071360457*^9}, 
   3.6361143314213037`*^9, 3.636114611686428*^9, {3.6361146855231953`*^9, 
   3.636114706235161*^9}, {3.637404947653048*^9, 3.6374049502815857`*^9}, {
   3.63740501133258*^9, 3.637405025808597*^9}, {3.637460441988028*^9, 
   3.637460444607782*^9}},
 TextAlignment->Center],

Cell["Based on chapter 3 in Otto and Day (2007)", "Subsubtitle",
 CellChangeTimes->{{3.6361140738110437`*^9, 3.636114105202126*^9}, {
  3.636114292374742*^9, 3.636114292919485*^9}, {3.636114430585359*^9, 
  3.636114430808786*^9}, {3.636114503998451*^9, 3.636114519333572*^9}, {
  3.636114746487883*^9, 3.636114771516698*^9}, {3.636857110980406*^9, 
  3.636857112831702*^9}, {3.637405036623555*^9, 3.637405036943508*^9}},
 TextAlignment->Center],

Cell["", "Subsubtitle",
 CellChangeTimes->{
  3.636114639569048*^9, {3.6361147219781303`*^9, 3.636114742854782*^9}}],

Cell["\<\
Spring Quarter 2015
Simon Aeschbacher
saeschbacher@ucdavis.edu\
\>", "Subsubtitle",
 CellChangeTimes->{{3.636114263144814*^9, 3.636114285607094*^9}},
 TextAlignment->Center]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Outline", "Section",
 CellChangeTimes->{{3.636114858795425*^9, 3.636114888142228*^9}}],

Cell[CellGroupData[{

Cell["Goals", "Subsection",
 CellChangeTimes->{{3.636114896869628*^9, 3.6361149212213917`*^9}}],

Cell[CellGroupData[{

Cell["\<\
To introduce/revisit some classic models in evolution and ecology\
\>", "Item",
 CellChangeTimes->{{3.636114980168631*^9, 3.636114992282305*^9}, {
  3.6374050626541033`*^9, 3.637405075966322*^9}}],

Cell["\<\
To derive dynamical equations, some of which will be analysed in later units\
\>", "Item",
 CellChangeTimes->{{3.636114980168631*^9, 3.6361150081986637`*^9}, {
  3.6374050823425913`*^9, 3.637405112263372*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Concepts", "Subsection",
 CellChangeTimes->{{3.6361149300211782`*^9, 3.636114933406128*^9}}],

Cell[CellGroupData[{

Cell["Exponential growth", "Item",
 CellChangeTimes->{{3.636115030088249*^9, 3.6361150401357803`*^9}, {
  3.637406039565957*^9, 3.637406043570958*^9}}],

Cell["Logistic growth", "Item",
 CellChangeTimes->{{3.636115030088249*^9, 3.636115045103869*^9}, {
  3.6374060472836237`*^9, 3.637406049347752*^9}}],

Cell["Linear and non-linear models", "Item",
 CellChangeTimes->{{3.636115030088249*^9, 3.636115059839525*^9}, {
  3.637406053371892*^9, 3.637406058091694*^9}}],

Cell["Symmetric models", "Item",
 CellChangeTimes->{{3.636115030088249*^9, 3.636115063127789*^9}, {
  3.637406067003765*^9, 3.6374060714513607`*^9}}],

Cell["Normalisation", "Item",
 CellChangeTimes->{{3.636115030088249*^9, 3.636115069156454*^9}, {
  3.6374060770117617`*^9, 3.6374060787558126`*^9}}],

Cell["Competition models", "Item",
 CellChangeTimes->{{3.636115030088249*^9, 3.636115072359952*^9}, {
  3.637406082556238*^9, 3.637406085844111*^9}}]
}, Open  ]],

Cell["", "PageBreak",
 PageBreakBelow->True],

Cell["Not discussed, but in the book:", "Text",
 CellChangeTimes->{{3.637406089716155*^9, 3.637406094540288*^9}}],

Cell[CellGroupData[{

Cell["Consumer\[Dash]resource models (e.g. predator\[Dash]prey models)", \
"Item",
 CellChangeTimes->{{3.636115030088249*^9, 3.6361150751282387`*^9}, {
  3.6374060990047197`*^9, 3.637406137792389*^9}}],

Cell["SIR epidemiological models", "Item",
 CellChangeTimes->{{3.636115030088249*^9, 3.6361150751282387`*^9}, {
  3.6374060990047197`*^9, 3.637406147937113*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Exponential and logistic models of population growth", "Section",
 CellChangeTimes->{{3.63611520840694*^9, 3.6361152099721193`*^9}, {
  3.637406164710917*^9, 3.6374061948287487`*^9}}],

Cell["Common assumptions:", "Text",
 CellChangeTimes->{{3.636115242270652*^9, 3.636115317200636*^9}, {
  3.636115350554655*^9, 3.636115358506082*^9}, {3.636115420984268*^9, 
  3.636115427799919*^9}, {3.63611565670411*^9, 3.636115663156169*^9}, {
  3.636116060439621*^9, 3.636116061012479*^9}, {3.637406204061928*^9, 
  3.637406205445161*^9}, {3.637406277924766*^9, 3.637406281252676*^9}}],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Constant environment",
 FontSlant->"Italic"]], "Item",
 CellChangeTimes->{{3.636115367451468*^9, 3.636115374251664*^9}, {
  3.636115472206657*^9, 3.636115472216873*^9}, {3.6374062103818893`*^9, 
  3.6374062148935623`*^9}}],

Cell[TextData[{
 StyleBox["No interaction",
  FontSlant->"Italic"],
 " with other species (no competition, predation etc.)"
}], "Item",
 CellChangeTimes->{{3.636115367451468*^9, 3.636115374251664*^9}, {
  3.636115472206657*^9, 3.6361154802805347`*^9}, {3.6361982728729753`*^9, 
  3.6361982758758717`*^9}, {3.637406222266458*^9, 3.6374062559108753`*^9}, {
  3.637406375889337*^9, 3.6374063759689093`*^9}}]
}, Open  ]],

Cell["Specific assumptions:", "Text",
 CellChangeTimes->{{3.6374062866598883`*^9, 3.6374062884613237`*^9}, {
  3.637406389241766*^9, 3.63740639402536*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Exponential growth: ",
 StyleBox["constant",
  FontSlant->"Italic"],
 " amount of resources"
}], "Item",
 CellChangeTimes->{{3.636115367451468*^9, 3.636115374251664*^9}, {
  3.636115472206657*^9, 3.6361155278312473`*^9}, {3.6374062929340277`*^9, 
  3.637406317968203*^9}}],

Cell[TextData[{
 "Logistic growth: amount of resources ",
 StyleBox["decreases",
  FontSlant->"Italic"],
 " with ",
 StyleBox["increasing population size",
  FontSlant->"Italic"]
}], "Item",
 CellChangeTimes->{{3.636115367451468*^9, 3.636115374251664*^9}, {
  3.636115472206657*^9, 3.6361155278312473`*^9}, {3.6374062929340277`*^9, 
  3.63740637091236*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Exponential population growth", "Subsection",
 CellChangeTimes->{{3.636194857130598*^9, 3.6361948719635468`*^9}, {
  3.637406429150359*^9, 3.637406433899312*^9}}],

Cell[TextData[{
 "Assumes that the variable changes at a ",
 StyleBox["rate proportional to its current value",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.63740749523663*^9, 3.637407513362979*^9}}],

Cell[CellGroupData[{

Cell["\<\
All individuals reproduce (we can choose to model only the females)\
\>", "Item",
 CellChangeTimes->{{3.636115367451468*^9, 3.636115374251664*^9}, {
  3.636115472206657*^9, 3.636115472216873*^9}, {3.636193117696052*^9, 
  3.6361931358541193`*^9}, {3.6361937593517237`*^9, 3.636193760744718*^9}, {
  3.6374064982728643`*^9, 3.6374065461060677`*^9}}],

Cell[TextData[{
 "Do not keep track of age ",
 Cell[BoxData[
  FormBox["\[Rule]", TraditionalForm]]],
 " can account for nonoverlapping and overlapping generations"
}], "Item",
 CellChangeTimes->{{3.636115367451468*^9, 3.636115374251664*^9}, {
  3.636115472206657*^9, 3.636115472216873*^9}, {3.636193117696052*^9, 
  3.6361931358541193`*^9}, {3.6361937593517237`*^9, 3.636193760744718*^9}, {
  3.6374064982728643`*^9, 3.63740651817962*^9}, {3.6374066049287357`*^9, 
  3.637406656260372*^9}, {3.6374067287410927`*^9, 3.637406728753018*^9}}],

Cell[TextData[{
 "Variable: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "(", "t", ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " for the # of indiv. at time ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Item",
 CellChangeTimes->{{3.636115367451468*^9, 3.636115374251664*^9}, {
  3.636115472206657*^9, 3.636115472216873*^9}, {3.636193117696052*^9, 
  3.6361931358541193`*^9}, {3.6361937593517237`*^9, 3.636193760744718*^9}, {
  3.6374064982728643`*^9, 3.63740651817962*^9}, {3.6374066049287357`*^9, 
  3.637406656260372*^9}, {3.6374067287410927`*^9, 3.637406814306037*^9}}],

Cell[TextData[{
 "Parameters: ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", per capita # of births (continuous time: birth rate); ",
 Cell[BoxData[
  FormBox["d", TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", fraction of population dying (death rate)"
}], "Item",
 CellChangeTimes->{{3.636115367451468*^9, 3.636115374251664*^9}, {
  3.636115472206657*^9, 3.636115472216873*^9}, {3.636193117696052*^9, 
  3.6361931358541193`*^9}, {3.6361937593517237`*^9, 3.636193760744718*^9}, {
  3.6374064982728643`*^9, 3.63740651817962*^9}, {3.6374066049287357`*^9, 
  3.637406656260372*^9}, {3.6374067287410927`*^9, 3.637406788758746*^9}, {
  3.637406819399494*^9, 3.637406904619*^9}}],

Cell["Life-cycle and flow diagram:", "Item",
 CellChangeTimes->{{3.636115367451468*^9, 3.636115374251664*^9}, {
  3.636115472206657*^9, 3.636115472216873*^9}, {3.636193117696052*^9, 
  3.6361931358541193`*^9}, {3.6361937593517237`*^9, 3.636193760744718*^9}, {
  3.6374064982728643`*^9, 3.63740651817962*^9}, {3.6374066049287357`*^9, 
  3.637406656260372*^9}, {3.6374067287410927`*^9, 3.637406788758746*^9}, {
  3.637406819399494*^9, 3.637406919754373*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.63740739357506*^9, 3.6374073948147707`*^9}, {
  3.637640570934223*^9, 3.6376405714696627`*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
NTS5g+zHtxzLdoNvrdOO2m2FhYV08OBBevfu3TePCXbG6VOm8BrhtXVr2WOw
PV66dKlGeVn4LNczr7MdOOv69UqfAy18t6SE5s+dS/YL7OhsWPg3j73i59iz
y099Dlv+bn8UrEvVHqKF2EsF4buA/epseDi10NHlnqORZyO55oUg/Ajeq3Vw
/px5ZNBGn9q0bEVzZ8+WOFNB+Arw4yNGEbndiINZvcqVa2R+D+V9FdB8Hz78
xQf+H3oVf69M+5b9XR1LFi+mRQsXlulSALsmDs1rNb+XPvZX2fM076d5DOet
7D3xOF6L93z+7BmtXLac5s2ew7pP87fy5/3nsc/Pg3PgwN/Lxy+Eq/2yw5Kl
n+lSnON9uddUF5z7VHAwTRw/gf/NJL5UEL4d3DvLlixhe1bfXoZ05/btuh6S
8IsRFhpKE8eNJ+0/G1Hfnr1FlwrCV0DeU+THvCfMzcuXLqO8nLxvOhfsdogr
jY6KKtOmqNuWnpZGV9PTqaSkhHv6nY+Jpfzc/E9eCxsFbK2BR49S8MmTXFuj
oi5Nu5KmzpXOr4WWS0lOocSEREpJSaHrmZn8HPjkMq9d4/fEY9Bx0NnIY8it
4J9Db5fEhAR+zxPHj5Pd/AW0yM6eTgQe555XSYlJ6j2vsHbE+DSP3bh+o+zz
aWIAgtTrjx05Qgnx8XxeDWFV6NIbN27w5zx+7BjFX46nB+o1b6qhL3FuxMo2
0dKWfHxB+A44ZuhWMem3bM17ct8d3mIrFX44r1+9ou1e26iDvgG10WtJe/fs
qeshCUK9B/WkRw4fTjqNtcllpfM31UeBbx0xAPCFDzcZxnYH1GxD/yjE1yx3
cKAd27azPXb61Gk0fuw41lhYGzKuZlDA/gO0zm0t5eXlUdyFi2TUtx+NG2vF
uhS6ELEBxv2MyNnRia6kXGE9eOH8eTJV77V82TKKjY3hceB8+/39WSdCc17L
uEbWM2bQOEtL1p9Ak1uFPvNHDx9mvXpBaeX+ffuTzfQZHGP7/PlzOrB/Pw0b
OpS1Nc77RGneDe7uNG/OXHr08CHdV3r3clwc+2auX7/OGnPFsuU0Y9r0ss9W
mS5FnWXkc6UmJVNWVpb6TCspNSWVHj78eq4FNDbGjT2E1C8VhG8HGhS5jo3/
+JP0mjWnC7EXJFZb+CnAx4UYZvQRmzdnTl0PRxDqPS/V/GwxxoyaKl1qN28+
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
auwUHlCDBg7UPBx6G7A/zLJYMH++1rnOnTNH4ynvmy/BceNaUfJavh7rXsRb
ELd53/gJXou5UPCHepsmNW3w4Hh9Jhwhn4Mxo0brPROzp9FPTAj5eOB+An/E
lH0p4uqMHoNa2uuK2Q/m7jFX79U7d/Qe+3qP0+u/R34zLydPYzwfs640PS1N
Ro8cVVZHBG2KWBXqH5DXRz1CYNt2qk2ta1tK/Tp1NTbENSMx8Wdp7Ql6VqHZ
UEuN3j/9r7HB26G8ZsP3B1oOs3izL17UfJrpe4160OuFhfLg3n2NQWIfNwqL
dH8A73W98JUWNPmTQhvjvaHdTF7Z+Bm1Mvg96mFuGu+BawCO7WPOKP7QfB5q
GrDO+ys9aqrta+rnX+aHSsjnAOcXZuEijoO1JvzWCCEfF9z3MKPoYMpBadOq
tWotOysbqePpJUOHDNGcurlqRspyBW/Re69yCx/nXmqqHxg2dKj41PcWJzs7
sSqtITqwd5/2H5piyLjvI/4UFhIq7q5uYvl1bdWmiFVxDhv5p2hOrTRf9jrv
+/O7YMrzVRVKdEZOl7/Vpajv8zTOPczRYU0b+VxgPWiajUtdSsinQ2OPd+9p
3TP8Dr0NjYUYYZPGjSV+8hTt70EPb03UXNCaD+7fl5xL2dof3cK/mdgbn93b
WBNjptvM+BlaG1g+Hou46arlK6Rn1+7i4equcVPEmU+fPEWvDEI+EPRftA8M
rLym9KtaOofA9DO8mFNPnWINDflsoIcPuhTfQ8wXpi4l5NOzMClJeyjqenip
HxL0KerSMEciOztb8301YdYYYizIjaIO7tjRo7JYPTFaqG8P/LxjoqLVqx/1
fW/7vKgzgG9PeEho2bxE+JYfP35c+1gYxyHk/cDM0uFDhkpQ23YS2Kat1vEh
Nor/NvJuIMHtgqSd8Ti2sKAQSdm/n15t5LOBnISbk7PWkeD+gDozQsinJ//q
VfUogxeSi72TzgJED7qnq7t6dWONiLquVz191Uuj/qd0HiJmdWsvSUyMNCz1
/YBvVr06ddVH8uiRI++0P/wdMD8V9aYOtnbaq+Hf2E/7p+GRU93+PoSYE9QV
FFwr0A21MuEhYeJgrBXbtGqleVM8ZtrwnMelMzoI+Rwgj+/l5iEO1jbyw5p1
9Akk5DMBLQXvo7QzaTJ+3HjxrldP7GxsVHNh1gVqLidPniy7d+2WooIicx/u
O4Oa9cs5ObJj+3bpHN3JuL64i5ONvaG9HY3PVFf9G9NSz2pfyfv4z0CfX7ly
RTU7tDt8txDfie4QpXOqqE0J+TDgyYH5b/Cx+37VKnMfDvmC0RmFDx6oR5SX
h6f6zxNCPi8vf3+p/b7Qp4sWLlSPbifjnERs0cPFTRp5N5SggEBZvGiR+iVW
Rc8W6Mtr+dfk2LFjOucKXuaeLq46yxDXF3ymxQsXqVckYi8fWqsG7Ykah3lz
EiU8OFRsrWzE1cFZ51BiFgD7hgl5f5DTaNrYT2f/xnSMNvfhkC8Y3N8WJi80
rutOUoe6lBCz8nPJz+ppCh/rieMmSGhwiLg5umjeGjXgEWFhMmTQYI1nYB4Z
Zp3pTEMzxAmxpr19+7acOXNG9u3dq71c0yZPUZ/+pn5+4uLkpLWgAa3byoRx
4/UzwZscn/FjAM/z+fPmS2R4hHobeLq563x0HE9N7Bsj5FNi0qWo3e5gnFOE
mAvUf02Pj9d6L8ZLCakaIPYIL1HoLvh+e9etK46lNZW4bzRv2lS6d+0qsRMn
aq4cc1uQ90BNDvoYP0U+W+tFjX1jbg1iu6jp3Ltnr8TFxqqneEDbtuLp7qEz
tVEThHlNjeo3lCmTJ+tstU8xL+bixYuStCBJZ7yih7iZv7/MSUiQq1euMqdP
yHtw8fwFaR/waiYpdSkxJ9Cl8dOmqS6dEjdJfYYJIVUH+Hnu2bVL/eY9Xdw0
J46ZSNYWFtonhV5+9CqEBgerTkVcskhnwDzRnDY2xA+RG8F8M2z/qcR/0TT/
zLRhfjdeh9ejDhT7xL5RZzBm9Gh9T8vS94d3k42ltaGd7cXT2VXnLKKH8vDB
g598ZgB8pJKTksu0aT2vOtpjBa/0quQXSUhVBud6j27dNTcT2DZA8q+y/5mY
B/h8+/n4ql918oIk+gESUsUweX9DH8IrIysjSyaMHStdDe3VsnlzjZ9Cn6Iu
zLa0lhN96m1bt5HgwPYSEhSsfUHwWUKuDtry6pUrFd7n6tWr+jvTNmrECOnW
uYu+Hvtp6tdE942+LOhiq1JvK39fP+kQHqlzyDdv3CgXLlxQHYs178eca/NX
vK5NcS2DPoY2PXXyVJWsxSWkKtK3dx9xsneQZk38NRdCiDnA/cPkn7t08WLN
BRJCqiamuUuIQd756SfJN/TluXPndH71N/36S9MmTcp0KmKY1hZWWuNpa2kj
bs4uGm/F7JYmvo0lqF2gBAUGSmRImPpr4zH8zrShbgDzqGxK94F9Yt+YSdi7
Zy/1ZzqUclCuXM6T27duqx/i81+f68x7c/D0yVNJSkqSsNBQqfWvr+Trr76S
BnXry4plyyU3J8csx0RIdWLooCHi6eahfZY4bwgxB48ePdJ7DfoGtm/bZtY5
3YSQdwf6D7l29KZDd6UcSNF7yZRJk2Vy3CQZP2achIeGSUj7YO2fateqjfj5
+oq9oVFRA4q4COKf6JnXOKi1oUFrWWqsMTiovXptBxt6NSIsXHp07SaTYuMk
fuo0WbVipezbu0+OHD4s9+/d1/nfn6J29ENArHbt6jUyZOAgsbG21hhypw5R
smzxErmSl2fuwyOkSrN86TLjvA+Qel51JTEhwdyHQ75AEHfJPJehuhSxFMxU
IYRUX1AjhvmCqMcpLCiURYsWybx58yRpwQJDU07VGGfLZs3Ft6GPetz71G8g
fo189b++DXzE37ex5v/nJibKjPh47SGCN9WObdv1+qB9VVV85svPP/8s6Wnp
+jlsLF7VvXbpFCNrVq+WX+khRchbOWCsNztFR4u1paXWCdFHn3xu4H0dPzVe
e3wxp5t++oTUfHDeQ1/+1VbdQb0D+rQCDG1qa2klNrUtpJ6Hl854pTYlpHJS
T5+Wbwd8o3Xj6DspfvjQ3IdEvjCQwx86ZKh+B4cPGaI/E0JITQDzlaFNgwOD
Svuhakk9zzryw5o19Dcl5C3MnztPNUFddy9ZzhpT8pmBJxS+f8jjJ85J1L4B
QgipKSBumnf5ssRPmaI5IWhTd2cXWf3996w3JaQSVq/6Xny8G2rN+bSp08x9
OOQLAtfrC+fPqy7Fdtm4dv9RiachIYRUZ+CvdfzYMZkcF6e9xhaGNu0UFaV9
HadOnKjy9bKEfE5Onz4tgwcNVn/9Zk2amvtwyBcErtVz587V2lLo0sc1oKaM
EEIqA54FmA0VGRoubi6uYmVoU/R/jR09WooKCrgmJ6QUxKhmz5olNhbI5XvK
vbv3zH1I5Avh8aPHWlPqYGMnPbt1U68XQgipqcDL6nJ2rsyfP18a1KmnMwhs
LK0kIixMCvLzqU0JMSgpKZFtW7eKraW1uNo7ybEjR819SOQLAV4yQW0DxNHQ
pfCPYS6LEFLTQf0SrnXwwQoOCtLaettSbVpYUCC/vXhh7kMkxOxkpJ8TNydn
XbvNmDbd3IdDvgAw+zrn0iWta7a3sZWtxtqIc6QJIR8T+Ijm5uTK6tWr1e8f
s0I/lJzsHLl04aLkX736xmMF1wqkuLi4wvMxe/TC+Qty79491aLlwZy7vXv2
yHcDB5Zp05ioKJ2j+tT43bsCf8eHDx9W+h6EVFcu5+ZKeEiIWNaqrfOHP9c8
YfLlgljp4uRkjdN7uXmonyEhhHxMMJP0emGRTJ86TebMTjCuM++u914H8c3k
pGRD266QwwcPqQbEfKvMjEy5XnRda+XLozn73Mty5NBhzUtCp5bn5o0bsnf3
HuP+G6Zzoep4euos1y2bNr1T/giaFNobXjr0MiE1iUfG93rD+vW6ZtO+6Oxc
rr3IJ6Xg2jXp36ePxuhjoqPNfTiEkBoKNOHwIUMlaf6C94pDlmFoP/RkduoY
pbO7N27cKI8fPZLNGzfJ+azzusZ+HcR1sEFX3r59W+O0Fy9c0JhqZbNrEMNd
uCBJ6nh4qYdUXU8v7dW/XlioM17/CmhfeJrAux9xWUJqEvCRROyq1r++ko2G
RmVOlXwqUNufdvaseLp7iKujkyQlJZn7kAghNRDoumtX8yUyPFxOHj9Zaczy
74CWhObrHB0j8xPnyaULl2T1ypWybOmyCnUBiOdczsnV/D3qB/Azcv2TYmNl
544dGgOqDBzXsiVLDW3qqXFTrNejOnSQ/fv2q5b+z1v6oRArHThggDjbOcit
mzc5s5HUKOBhETtxovzP//yP+DX0kWf/oA6HkL8i+9IlmTplisbnfbwbmPtw
CCE1DNMs0zs/3Za01DTpGBmpdaDv0u9ueq2p/wjaMvtStiTMni17du+WnJwc
jWdmpGe8Eb/B8wryC2TY0KGycvkKfT/T42NGjZJ5iYly8sSJt77v77/9LguT
kiUsJFSvjda1LdV/f+3qNXL1ypVKX4N4LDQpng/dXVJc8j5/JkKqNMg5pOxP
0Xgp5qVdyDyvOQJCPjavZjk00JhAvz59zH04hJAaAuKjB/bvlwP79sl+Y4PO
GzZkqAwfMuyNGlCtyywp0b6jvr37yPJlywztd1VSUlJk/LhxMmrkSDl48KA+
F7oSv7uQdUFST6fKju3bVef+8ui/fsu4VyI+OvCbbyWwTYCMHT1G9u/dV/b7
JQsXyaQJsTJ92l/PrkGNaG5urmzcsEHzSfZWNlLPw1PrEA4ax/Y6qIVav25d
2by8OXPmSFZW1sf4MxJSJcC5d72oSHP5OBdGDR/JWeXko3P7p9saK3WwsxNH
R0c5cey4uQ+JEFIDgMfSwf0HZNePP0pudo5kZWTIvMS5EtOpk87bfqOPyNCl
yAkeO3pEQgPbS/yUaXIuLV216NyEOdKtSxfZumVL6VP/1Dhk8cNindmUaOi/
Xt27vzHfHvfPn27ekj69e8u3/QfI6pWr3pgxunnTJhltaN0+PXtV2iP1Ojiu
a/nXZNLEOPH2qqv+pi2aNpURhjZF3NTU+3HI0Kl4L+T9oUtHDB8hx4zjI6Qm
gfMF6zLUXrdp3lKKCgvfWtdCyIeQevq09pvaWFpK40a+8uD+fXMfEiGkmvPc
0Ij7du+W2AkT5MihQxq/vH/vvvbQhwaHGFp1Z4WeCeT04ZEYFtRe4sZPMDTq
Uck4lyFbN22WroYu3bRxY4X3OXjggAwbMkQGfzeowhwQ6NT+ffvKwoULK8Qt
Dxl6F/n9gLYBct+45v1dHSiOH3WpnSI7iIONreb063p4ydo1a+SXR4/08y42
3qdBnbqqSbF17hSjn5OQmgTOhUMpB/U77ursLAf27v2w/kVCKkG9VuYvkLYt
W2ndFK7t9NInhPxTtm7aJHNnz5aEWTPLHsvLzZOEmbMlqkNHrfss7zGDXqPF
ixZL15jOMjN+utZ+og5gUtwkmTF9upw+darC++zauVPz/iNHjJAXz//bK499
o+8IPoupJ1Mr1HlmZWbJuDFjpVXzFu+kSwGec9PYZ3hIqHi4uOncUjdHZ1m5
YoVs2rBB+vXqrflNky51cnCUpAUL6KVDahSarygp0R5pzCyPi42VG9dv8HtO
Pgq3btyQbp276PerhX8z2fnjj+Y+JEJIDQAeTvFTp6lnkomEWbM0ftm/X79K
72GIb/bq0UMG9B8gu3ft1njqndu3JSIkXPbs3iM3b9ys8Bro0j6GHhw88Ls3
4qXQuCdPnJTAtu3k7p07FXTnh+hS8Cf6+S/lyLTJU6RBvfqqPxE/jQwLk8Y+
PmWa1OTxON54j7zLeX+/Y0KqGb169hQbC0vje99IcyKMmZJ/Cq7DG35YL34+
vtpX179PX36vCCH/COjNosIiaWJcV+YnJhra8nfNz1+8cFF6dusm333zjSxK
Sq78dUXG6xr5yilDT6J2FNry9KnTEhQQKHm5l9+oHzWB+tIJ48ZJD2Pf9+7e
LdOX8DedNDFWJk6YoHWm5fNAyOOPHTNGOkZ2eC9dCuCFin2ijwu9UBZf19Ke
UVNdqWlD7LR7126yadOm9/sjElINOJd+Tuq4eYidlY1Mjo19Yw1KyIdQUlws
UZEdxcHWTvNq27duM/chEUKqOdB3d27fkcYNG8noEaO0PhSzQqEfO0d30lqh
71d+X0EnQoNCj4YFh0hhYaH+DB26ZvUajb1mpKdrv355zmdlSXJSks4CeT0u
Cl3b3dCqSfPm63zl8q9F39OEsePkuwHfftAsVHjyozY/oE1bsapV+w09atqg
U5v6+8uI4cPfe/+EVHXg3YZ+RDtjTdaooY/6/dLPlPwTtm7eLB4urnr9RD6r
shwZIYS8L5hhHNwuUPPrixYtku3btsrhw4elb69exrVmjGzcuKHCnGPk4H/c
vk3rRH8u9bqHh/fsmTMNLfud5uTv3rlb4b0QY/1xxw71ibp981ZZfQBmPnUI
j5B1a9ZIelp6hdcuTl4ok2LjZNaMmRX2+VegtgBe/NC6O4y1fFRUlFiXi5O+
vtlb22itwK9/0/NPSHXk8KFD4oWcgbE262uc78ePHjX3IZFqCtY5HcIj1e+k
ZfPm6s3HmmVCyMcCPUvr1q7VXvic7Gy9vuzbs0eOHjkieZcvV3g+9B5mgyK+
apoBhZ4neITu3rWrQq+9CcRdiwoKtNYtI+1cWY8/Yq3btmyRlAMHKswORV3B
2NGjZeniJVpf8HcgBovXIK569sxZ+e7bb6WFf9M3epzetlnXspB6nnU4s5HU
SDDrAjXhzg6OWm89ZtRo1gOS9wYeD4gvuDo6ay/dgnnzy+agEELIxwDXGegw
6Mb//OeVtyF+xuOmn8uDx8vPf8LzX/6NnsN7HD50WOYmJmqM1YTp/V4H+0fP
05yEBEnZv18ev4MnOOpP4d8/oF8/cXdx1fW85Vty95VtqJWCl9XbtDUh1Rl4
nrds1lysjDVYq+YtdS1IyLuic6Xv3pXQ9sFa+9Q+KEhrld9lFiAhhFRVEB/d
s2eP1gsgt18ZiNliTujq1asl/+pV1bB/1++Umpoqs2bOlBDjmom++3fVouXr
TFu3aKneAu/TX0VIdQB5hKHGuquOp6c4Gmuw6MiOcuvmLXMfFqkmPHnyRGbE
Tze+O/biZqz7N67fUFbLRQgh1RVozoKCAklLS5Pr169X6sP8x8s/tKcKtQK4
Fr7LXG9o3IMpByV5QZLOHzFtvXv0lOgOUeLtVU+9n21rW+n8m8p0Kfr163p6
Scr+A/SHJjUS5GC7d+mquYE67p6ybfMWcx8SqQb8YVyD8/PzpU2LVnqtjI6K
kvwr+ep5QgghNQH4e9+7c7fSGjfoUHhYvW8t/e+Glix++FCOHj1atu3ZvVtW
r/peenbvLhEhoeo/gPuxi4OT9ieX79HHY5j3DP+q8jFTHA+ODXW1lW24RiO2
i96pF8+f62OsVSVVCdMstyaNG2vM9Jt+/fScYX6AvA18N/AdQe29jYWV2Fpa
yaKFC/92LjQhhJC3g2srev/PZ53XmFHinETpEhMjzZr4i4ujk3o72tS2Ekdr
W/HxbiC52dlv9Oaj5vTGjRuSmZkpRw4fkaNHjsqxo8dU+x45ckT/nX42XeKn
TZOVy5fLju3b9TlpZ85qzBcalXVYpCqQnp4uY0ePEWdbB52Dtub71WU9jISU
B55i6INt5u+v9frwLUGuiz34hBDyzzD162uf14vftN4O+f8Tx09IwqzZ0iE8
XOp4eGoMNWF2gmpQvOb+vXsyasQICQ8JE9+GPuJoZ6+z96I6djR0bRPxrlNX
vNzcpYlvY2nbqo1EdeggLZs2E09XN2loaNzOnTrJ2tWrJcvYX3nfLULMQW5O
jgQHBoqDsQ5r7t9Mbt7gfFJSEVz/cN3C3BPkk7CGh4cL19iEEPJpwL0YsaKn
T55qjvNcerrETpyos1lXr1ol2zZvlrD2wTrDcdyYcbJq5SqtY4VPK/QqvLVG
jxyp+f9oQ6dmX7wkhdeuyfnMLDly6LB8b+wjIjRUGtbzljYtW0n/vv3U84rX
dWJO4G8Bb3S7Ug+1VStW0LuXVKCkpEQmT5qkNfku9o46n4EQQsjnAbEB1JVi
PtTOH3+UxIQE6du7j/g1aiQTxo3X/H1ebp7cM/RoSXGJPh81VjOmTxdneweZ
NnWq/GLc7+EV+eSXJ/Lg/gPJy8uTNatXy/ChwyQ8OFSaNm4ik2Mn6fsQYjaM
7y5mSY4ZPVr+93//V+ysbfR7WlLJrDbyZYL8PWYBNqrfQBys7aR506Zay0QI
IeTzg5ms48eOFQ83dwkNDlFvgLf1MGGuY6vmzbXHqjLvAOTuTxtad+KEieLr
00jz/tmXLmmPKyHmAt/VS8b3sEljP60bDGwbIKdOnmKvHlEOHDggrZu31FoP
9IvCQ5+1HoQQ8vnBtXdKXJx0jIiQ4KD2kpOd85fXY8Q+b926pfP5/oo7t+/I
/r37xMPFTbrGxEhxcfHHPnRC3gvE+5ca6ypne0dxtLHTWuhr+dfMfVjEzJxL
S5OunTqrF3TrFi1k9sxZlc6XJoQQ8mlRf9X8Amnq6ycD+w+Q/fv3/32M4M8/
5c93iCMg7//o0SOZHj9dPA1tijmvv5WbvUrI5wTf7Wv5+dK7Zy9xsrMXN2dX
Wbd2nc61IF8m6AdFfT3mMrs6O8vwYcPk7Nmz5j4sQgj5IoGf/qzpM7TPaUrc
ZLmad+Wj7h/xqRXLlqs/z5xZsyUzI/Oj7p+QD2H37t3i5+Mr1rUtpXv37rJr
5056R3yhnDp5Ulq3bKU1x52iomTb1q1vzI0mhBDy+Xjx4oV6O6IONH7KNCm4
VvDG7589eyo/3fpJzqSeKduQw//v759JRkaGPo4YA/x4Xo+34vo+dfIUnbcT
FxunzyOkKgAfCp/6DdUnrXN0jOw0tClrTb8ckM/BtS0oIECsLSzFx7uhnDx+
Qr2bCSGEmIcXz1/IyOEjxN/XT+ImxKp3n4nHjx5Ldna2xpLiJsaWbZhbCp8p
3MMvXrwoM6fP0MenxE2S5cuWSfHD4rJ5Ouh37t2jl9gY1/1Y4zmpp1PN9VEJ
eQPUO48eOUpnoXm4uknvnr3lSt4Vzpr8AsD16eGDhzLJuCah1tjJWDfjOvbw
wQNzHxohhHzRmHRpl04xmsMa/N13+vhLQ3OOHztOWjRr9sbcUmwRoWGyMClZ
rl27Js4Ojm/8ztbKWibFxuk1/4+Xf+jMqaCAQHE1rv1jx4xRj2pCqgpnTp+W
gNZtNF6GmH5kaIT67XJOac3FpEknG+to+NnCm2HYkCFyvajI3IdGCCFfPCZd
unzJUtm0YYOkHDigfjr79+2Tel519ZpdXpe6OjpLaFBwpboUG2acTp8aL+lp
aWXzUHv16CFxsbHUpaTKcfjQIenZvbt+dzEPPTiwvXr2UpvWTJC7n2ysnU0z
FjD/69rVfM7+IISQKgBqqQZ/N0h+WLdOLl28aOjU53Lv7l3pHN1JY5/lNaeN
cS3vGBEpC5Mrj5eaNmcHJ60rvXH9hva7Nm3sp/6o1KWkqoF1WNrZszJm1OjS
7/grbcqZ6DWPrMwsrVdytnPUNbdq0nxqUkIIqSpAlw4bMlQ149EjRzR/n5WR
Ib4NfSqNlVrVtpAe3brJls2bVZfW8fAUi69rVXiedS0LiR03QW4UXVdd6tfI
V8ZRl5IqCmqlC4zvc3x8fFncFL7q+O6SmkH+1XyZaFyTMKsO9e5tW7eR7EvZ
1KSEEFKFQD8+4kTBgYE6lxH34f379qq3Y2VxUCcHRxk6eLBqWMST2pXW5lUW
V0Wd6a2bt7Qn39+vCeOlpEpj0qYTxo+X//u//5OG9bzV4wy1iKR6Ax/liRMm
iK+Pj/pBBQa0k7QzZ+m/QAghVQz4lyYtWCDe9eqrX1R6WrqcSU2V+p513oiD
4t/I68ca1/bjx47J819/Vb154thx8a5bX30gyz8ffVP5V/IlLzdPGnp7a88+
5pMSUlX5/fff5eTx4+Lp4aHf4ZCg9rJyxUrJzcmlf1A1JTMzUxJmzTbWxn7i
4epqrMGDZMMP6/XaRwghpGqB3g74kTbzbyqBAQEyftw4uXf3jowZOVLcnV21
NwDzohvW99Y8fNqZNI0h9enVS3uZVixdZrxmvESGR4inu0eZLnVxcpKZM2ZI
QUGB3hPsbWzl8MHDcv/efXN/ZELeCs6H4ocPZcSwYTprAvnewLYBkjB7tuob
xteqF5iFPHHiRHGydxAHW1vNCyXPny+/Pntm7kMjhBDyFtDbceTQYa0zRV0p
8l35V65I6qnTcvBAis64z750SXNhXWO6SIO69cXe2trYbKSuu5ds27JVjh89
rrHTXTt36bZs6VJZvny5zDfuAd5e9WTE8OGaD/3PH+wjIVUbk4fE0iVLxN+3
idhaWqm/aa+eveRybi57oaoJ8FhGvTDyPOhlCw0O1v5OXMcIIYRUbe7euSsr
V6yQDhEREtimrfywdq0UFhTK7Vu3NeZg6v9o3byl1me93geFHqjLObny4P4D
9SVftmSpDOz/jfTo2k2iO0ZJ25atZc/u3VrLSkh1Yse27dKuVVuxt7JRfdqm
VWu5efMmPaSqOLheJc5JfHWNqlVbgoOC5NSpUzqfjhBCSPUAfqMz4qdLo/oN
JKZTJzmflSWPfv75jXtw+4BA8XBxFWc7B3F1chYnWwfZsGG9FBRc0xzn5exs
6dWrl3i5umsstZlfUxk7erShWe/zXk6qJfv27DXWWN21Rx8b1lr377MepaqC
OKlJk2ILaNNGcozrEmswCCGkeoE+AOhHzB2FrxM8TBE3RRzUxL49e2ThggUy
OS5Oli5Zqr386JO6XlgoV/LyNC6BGGpYSIgsXbxEigqKzPeBCPlIpKenyxhj
fWVraa3aNKB1W1mYvFD7pEjVADHS06dOSWR4eJkmbd8uUIoKi1h7QQgh1Rj0
HUOPNqxbX9q0bGVoz1Hyy+PH+jvEHKBfseGejHlRf/zxUnJzsmXZkiWqSXE/
mDJ5ipw5c4b3A1IjgMfljRs3JGHmLGng3UC9fVHPkpyULEVFRYzFmZk8Y008
Z1aCtPBvLjbGNcjJ1l59lqFJ6U9KCCHVG2jJnEvZ4t/YT/x8fKVLpxg5ceKE
zsV5G+izhx9gXFycONs7yp6du3XeHyE1BZwXj4312bGjx8TPt/GrmbxOzhIR
Gi6pp1Pl119/NfchfpFs27bN+H8Qpv4hVrUtxcXRSeYkJEhJcTHXxYQQUgNA
HWhJcYm0axugPVBDBw1SvyfTNf7Zs6far/w6z399Lrd/ui0//PCDziZNOZAi
9+7eM8fhE/JJQf1iSkqKjBo1Svu8HWzsJDw0VGsaMzMyzH14XwR6jSopkWlT
p0pAyzbiaGsvbs4u6le3ZfMW7eMkhBBSs+gQHikxHaMk3rj2P3v6TH30n/zy
RC5fviynTp7U/Nj9e/fkP8Z/kfu/d/eu7N2zVxzt7OXggYPUpaRGAk2EuClq
Tnv37CX1PLx0LdamRSsZPXyE7N61i33fnxDUTJzPzNSYqH/jxuoD5ePdQAYO
+Ea2bNpcYc1MCCGkZtA5Okb9SieMGSsrli+XmfEzJDFhjnTt3EVaNW8hhQUF
0rZlK9Wju3fukm/699fZo3bGfeL4seNS/LDY3B+BkE8K/H2HfTdIZ5baWdmI
i6OzREZEyKFDh7SO5a9qX8j78Yfxt4QPQoaxHpgUGyvurm7qAdWwfgMZPXKk
HDb+5lg7E0IIqZn07NFDBvTrp3Ob1q9ZJ3MTEyV5QbLGiJDjLyos1N5X9PDv
27tXhgwaItPj48XL3VNOHD9BXUq+CIqLi2Xi+AnSsllzcXFwElsLS/Hy8NS5
u3m5l+nb+w9BfBp9ltevXzeuPwukbevW6ovgYGMrPvUbysLkZPp2EULIFwB0
JWq4EIPA3D7k8FFbh9pTaFHk8R8+eKB1p+jLf/TzI/nl8S9y984d+e3Fb5zt
RL4Ynj19KlmZmZI0b540b+Iv1oY2RV8UNNS+vfs070//3vfnZWmMdNePP+oa
2dbCSr0Q0Ns0aOBAybmUw5g0IYQQQkgloPYx7/Jl9SiCLrWztNYNsyUww/Q3
xk7fi6NHj0pAy9ZiXeuV/xxmbjX3bypbN28296ERQgghhFR5kD+A3++qFSuk
kXcDsfi6lthYWYuHs4t079xF1q9fL09YB/lWkIc5eeKEdOvSRXvsUUMKX2Tf
Bj5a546eMvrFEkIIIYS8O6h9QU/g6FGjpY6nl9hb26qfkYeru7Rt1VoWL1ok
WZlZ9H03+P233yT/6lWZNXOmNGnUWOq4e2gfGepIO3XsKIuSkyUrI5M+B4QQ
Qggh/wDMiYKmWrxwoXSNiRF3Zxf5+l9f6axff39/GTd2rJxLP/dF+vJDux8+
eEgmTYyT0KAQ9Xuy/LqWONjZS8fIDrJ61fdy8fwFrWdHzTohhBBCCPnnPPr5
Zym4dk09pEaPGiUe6nNkoT08rZo1l6GDB0vygiRJPZWq89NqIiY//Mu5l2XZ
kqXSp2cvadG0mbg5uYh1bUv9m3Tr0lW2bdkqV/KuaJ8lZzYRQgghhHwaECPM
OHdOFiUvVF3m5eYull/Xlvp16kpA69bSv29fmT51mmzftk3z/DUhd/37779L
YWGh/Lh9u/rhjxg6TL3mMI8As1wbN2wk0ZGRMmPadJ0VBy8Q+hcQQgghhHwe
4G8EL/jB3w7UetNG3g3F08VdZ5tiZlpQYKCMGzdODqakaI8/5vzCb+rFi+dV
3hsJs4qfPHki14uK9NjPpp6R5KQkCQ0JUT98GwtLcbJzED+fRtK9S1edx7Fl
0yb9jIQQQgghxDygN//06dMyd06iDPzmW2ndopV4urmLvbWN1lrW8fCU6Oho
mRQXJ9u2bpXU1FS5cuWKFD98qHluxCLNGVvEe6M/Ht73JcXF6ml8xNDbu3ft
lqFDhur8q5bNmmkPk62Ftbg7u0oTXz/tt9+wfr3cvHFDX0sIIYQQQqoO8Dct
KiiU3bt3S9/evcXT2U08DB1nY2Gl9ZcWX9VSzQrt2ikqSubNnaczf+/cvi3P
nj6TX5/9qjoVOhExVWx/fqT6TMwBxfbS2PfzX59rnxbeD7Wwp06ekgP7D0j3
rl0lLCREHG3sxOrr2sYxW4iD8W8Xe0f1fIoMi5B1a9bK+azz9HoihBBCCKkm
vPz3S8nLzZOzZ87KtwMGSLfOnTXWCH95bBalvv2Yf9SyWQsJatdO2rcLlHmJ
c2XHtm06G/jQwYPqB/BPgV4+duSIbqgRhXdTeGiYhAYHS4umTTUWajou0+bT
oKHERHfSGa1r1qyRzIxM9XUlhBBCCCHVD/Siw9/0+fPnGqOETt2+dbtMmTRZ
OkdHa47fpE3R2+9gbSuu9k7a3+7m6CRO9g7ia+jDjpGREhIUrFuHiAhDT4aq
Zhw/ZozWrx7Yv18WJiVLRGi4/h7PxxZhaE+8pl2bAHG0tdMNc+kRu4XXPd4T
MVHoUvzcJSZGEuckSvrZdLmWf620HvaFxkbp00oIIYQQUnP44+Uf8uL5C3ny
yxP19Lxw/rycOHZcc/lTJ0+R/n37aY9/x4hI8fP11bglNCvmd6IWAJvp39CS
TnZ2UsfNQxp41RVXR2edP+9sa1/qaf/quZaG9vzX//tX6RxQa+netZv0Nt4D
2+xZs2Tv3r16DCdPnNT6UtS8ItZLfydCCCGEkC+Hf5fWemJDL3vBtQKNU168
cFFnee7Zs+eNDR5NfXr1kl49e0rPHj20HhRbz27dKvx7eny87Ny5U1+3a9cu
/S9qA65euarvge3unbvy9OnTsmMghBBCCCHkdZAzR/4c3qevb1evXJFjhw/L
EWODR9WhlJS3brk5Oer1VH4fhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEKqLv8fCBehMQ==
    "], {{0, 262}, {678, 
    0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJyVlnk41F8XwO/MMPZhLNnCIIx9GWSrLEN2E7LvYxnZZyZjqaxZskUqWbKk
CBHJErLUj/JT9iWhokillGjP+530Pv3xvr/nfd7zPPfez73P+d7vOfee554j
7hNm6w8HAFCYoc7Wm2ZAJntH2zFAE8Noqp8PDIIeNqgDbD3e4eHBdNWQUCrZ
9qAhxsnZBcP0BDAAVmhRAeh4EynhBgSCJfhH2ZoC9A3BuCJ9r3/W+6/C4etH
IQIAw0CcTAwnUyGuhFiSRg2n8z2IecmQURDP0Tlgh9fp7POL4Qy/dOxtjSAW
gBjls8NYOgfssBadI4kB0J5wUwCQ3KG+gaEAMLsBgEARSd6+0FnQbVcICQmj
cwHE2B3bfgnKKCw4jIyxNMJj8Boq/7YeBYxAGAiGGhlggCU0w0MjHmgAlX/+
6P8Tql8UlT4ahYVHkwMDSFSMAXTKfhizUKKSAkZNRVUDAPqd7WhvTfy+C4M/
a2GFABhkA8BK+LPm3wVA3Qrk4uyfNUwcAOgMAMoQxKPkyN+/h8GGAfhf851z
/S0IyAAooOBhDBnISuYm1mL2JJQblxx6i+c2XxS/lMCIUORuAZEmMUPMiISn
5IKUq/QU1kz2lrycQq7iJ2V3lVY1NI6k3qbJutdRq0L7ta6yXuS+m/s/6qsZ
BBtWGc0b85mYHjxuet3smQW3paHVUesKmzHCtq2Cnb199OFCh1bHcadXLjBX
bjdJdxUPPU9jL2tvex9noruvu5+nv3uAB8kl0OmIXRAh2DzEJFQ/TDd8b4Qq
WYkiS5U+KhYpROON4oxmiUHEfI/9eGzt+NKJx3Ej8QMJHYkNSRXJ+SdTUo6m
+qfZpRucUswQyERkvsoaz27PuXg6Kdc/z+KMUj46f/Ps9LmO8yUF8Re8C/FF
0sVMxa9KBi/WlWaVhZTbVChf4rz0rvLh5formVVB1eZXsTVMNc9r++rKrh2r
d2nQuM59fa3xftPlG3HNLjfVW1Atq619bUXt1FuWHVId3zsnuupuJ3a79Cj3
MvbO9tXfSbrr8JfcXz/7hwfK71HuGw3yDb74++bQyQf2DyUfvh/uHskedR3D
jm2N903kTLpOyUxtTHfPnHrkMIuZff24ZS5+3nyBd2HhydWn5Gd6i8jF4aWC
5z4v5F9sLt9eSX15aFVwdfFV7WvKG701hrWht/nvXNcl1lff13+gbuhs/Px4
ZzN1y/wTx6eRz7lf7L7yfB37lved8AP1Y+hn6rbR9jYUGCsID4Y3SBrTT5YA
1n52WY4M1BwXDp3JPckryue/6wr/qqC8EFG4ZPe4KKOYNsZPPF+iW3JFCi2t
JuOIpcmel2uRH1NYV0Iqi6loqJqruePC1ZM1zmhW7m3U6tUe0nmku6T3dt/n
A3B9NgNeQxEjSby8sZIJ7iDOVNNM3VzDQsVSyQprvcdGiMB7iMUW2G7YvbSf
PfzAocux3qnEOdMl2tXfzc79gIeCp4AXo9d77wWfQWKbb4Vfjn90gC/JOlD7
iEQQe9Bm8HxIf2hdWH54TIQ3GU+Ro7JT14+ORjbR8qLI0YdilGLZY1eO9R0v
PhEZR4iXTUAkPE68mZSVHHDyQAp/ynrqQFpZOu2UTYZ0xo/Miaya7IQcx9OK
uYjcmbz6M4n5TmcVzoFzk+erC45dsCmULNwsuldcWBJ8cX8pZ+nTssbyhArb
S+KX3lf2XM654lGlUPWt+t7VszU+tcq13+oGrp2p92iQbfh4vasxtYlwQ/DG
YnPNTUqLTius9X5bTrvDrd23FjuqO0O61Lo+3e7oju/B9zL3DvXl3LG7y3f3
0V9F/e4DmIHFe5X3/QdlBlf/rhkKeqD4YO1hw3D4iOrIh9GmMco4bnxjonmS
MoWDIqdpJuKR8qO12brHgXPSc0vzpQuuT/ifjD7NemayCBbblyKeyz5/+uL8
stUKfKX1Jf0lxYIMmDisAPYGbg3vRgggghH3GRQZTjLMMqoznmF8gzREFiO/
MNkz1TIjmX2Ze1mEWGgs06yarPmsH9kc2drZhdnj2Vc4rDhaUOKoLNRXzkDO
x1zWXHfQOugmbkXuGh4sTxUvlvcqnzxf/S7lXU386vxtAvsE+gRNBUeFXIRe
CEcIb+/OFhEVuS6KF50VI2PYMdXixuLLEmmSCpKje6KlJKUGpSkygjLdWF9Z
ZtlrctZy7+XzFHAKE4pUJV6lZmV75Y8qZ1U1VKfUaDgBXIe6uwZM44qmpebG
3iItE60P2mU6BF2EbrseeZ/yvrf7Gw6E6SvprxnUGQYayRgt4cuM3UwETSYO
njY1N0Oa9ZjHWmhYrFtetfK1FrGescklWB5iPNRjG22nbvfWvvow0UHU4ZFj
vpONM5vzgEuyq4HrT7dO9xgPLY9Pnq1eNG8t7y8+ncQTvoZ+SL8h/9wAJ5IY
aSWw4UhUkEEwa/BkSGloUJhmOCJ8JKKEfISiTWWmTh+tiqTRTKMEo15Hd8Xk
xPoc0zjOcnz+RFNcarxbgmoiMnEu6UZy+knPFM1UjtTnabfSc0+RMvZn8kJv
Wk92fk7g6f25PLkreZ1ncvP9z+qeQ59bOX+74OyF4ELjItGiz8XjJQ0Xs0qD
yizKFSvQFVuX5isHLt+4Ul6VV516Na4mBoCd/PorISABKPADwPkkAHZQfs6Y
BUAGykl8XgAQOACw1wZw0iaAG/oDmBsWIEAUPX9AjQXwAkmwF9hAGTYbNIOn
MDTsICwJdhfODneGX0MwIwIRowz6DC1QRN1CmiLnmWKZMcwPWZJZjdhY2GbY
6zmyUGROTy47tB23F08MbznfFL+AQIBgn7D87lJRMbEa8QMS83uSpFVlXsnW
ytMUrZVVVEVw/Bqie3HaDrrp+4b0MYaJ+HcHA8xeW0bb8Bxqsyc57nFec+v1
LPfJ8kshZQZdDO2KWD0qERUY2xUnlng6BZ1enmV4+kN+Y0F8sUeZZaVptW1d
0PW85oF2li6n3uZ+4cHsYc7xkhnduVfPapfjXpPWSZvxX5vo7yXkNwcQAThA
AFRwEQzDkDA87BRsCi4LT4YvIwiIXgYdhg5GPOMkMpSJk6mdOYhFmuUlazNb
KjuRwxSlzonl2oOW5dbiOcRL4SvbNS0gKOgn1LlbRCRdDGASJdglS6V0pOex
p+T05bcV7ykXqUbjvDUO7z2s7aMbu6/iwLShIN7PpMNMyCLZ6jMh0nb7cJ6T
ssuMe4aXGZHbb5nUH9QYWh1RQ22nTcR8O6GUEJbcmcafEZ+9lRd9jvVCdYld
OXvlaHVlXdL1sGZSW0hnXE/J3f57Xx5oj56cXJg1Wehawq/MvUl5j9/i/7r9
y19hEAhewQrhVASFIZexnwnF7M3SwSbATuOY5TTh6uM25ZngI+7aFEgTEhKu
FdEW7cfYir+UzJI6IAOwQ3KXFdKUKCoBal7qHpruWm46TnrW+/X0RQx+GC0b
Tx8cM5u0eGq1QUDZqti7OGQ49bkCd7xnjvcTX3X/bNJaECGkJVycnE39SQuP
fn7M+cRwgklSd4pOWluGVtat0/vz7p61Oj9d6Fu8UZpcwV95rcr46tO64w0i
jb3NAa3o9u7O8G7p3md3KwaODGo9YBteGuuevDgT95i4YPpM4Tl6+ePqxJvG
d+kf3Daxn9a+Vv9wpvtL8cep7VRMgF6vwqFD+P4rysH2L/ldPdHnKzs1KF2Q
XAAUx9PpjtTqf9SG/wJeBnZt
      "], "RGB", "XYZ"], Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSizeRaw->{678, 262},
  PlotRange->{{0, 678}, {0, 262}}]], "Input",
 CellChangeTimes->{{3.6376405827597847`*^9, 3.637640584000781*^9}, {
  3.6376408229992723`*^9, 3.637640836843954*^9}}],

Cell["", "PageBreak",
 PageBreakBelow->True],

Cell[CellGroupData[{

Cell["Discrete-time version", "Subsubsection",
 CellChangeTimes->{{3.637406682398019*^9, 3.637406712291272*^9}}],

Cell["Recursion equation (from the life-cycle diagram):", "Text",
 CellChangeTimes->{{3.637407532414616*^9, 3.6374075347429323`*^9}, {
  3.637408267216373*^9, 3.637408273440772*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"n", " ", 
    RowBox[{"(", 
     RowBox[{"t", "+", "1"}], ")"}]}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "b"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", "d"}], ")"}], " ", "n", " ", "t"}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.637407540591054*^9, 3.6374075808021927`*^9}, {
   3.6374078051443872`*^9, 3.637407809711874*^9}, 3.6374087911263657`*^9}],

Cell["\<\
In this case, it does not matter whether births or deaths happen first. But \
recall the squirrel example, which included an immigration event!\
\>", "Text",
 CellChangeTimes->{{3.637407921449244*^9, 3.6374079355010853`*^9}, {
  3.6374079713135147`*^9, 3.637407992137848*^9}, {3.6376393163087053`*^9, 
  3.637639334050331*^9}}],

Cell[TextData[{
 "Define the compound parameter ",
 Cell[BoxData[
  FormBox[
   RowBox[{"R", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "d"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "+", "b"}], ")"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " as the number of surviving individuals per parent, or the ",
 StyleBox["reproductive factor",
  FontWeight->"Bold"],
 ". Hence"
}], "Text",
 CellChangeTimes->{{3.637407590228771*^9, 3.637407676308113*^9}, {
  3.637407706705673*^9, 3.637407746312941*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"n", " ", 
    RowBox[{"(", 
     RowBox[{"t", "+", "1"}], ")"}]}], "=", 
   RowBox[{"R", " ", "n", " ", 
    RowBox[{"(", "t", ")"}], " "}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.637407540591054*^9, 3.6374075808021927`*^9}, {
   3.637407684261462*^9, 3.637407685550441*^9}, {3.637407806840374*^9, 
   3.6374078080715923`*^9}, 3.637408801218996*^9, {3.6376393640800953`*^9, 
   3.637639373359879*^9}}],

Cell["Difference equation:", "Text",
 CellChangeTimes->{{3.637407769671256*^9, 3.6374077720793133`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"\[CapitalDelta]n", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"n", " ", 
      RowBox[{"(", 
       RowBox[{"t", "+", "1"}], ")"}]}], "-", 
     RowBox[{"n", " ", "t"}]}], "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"R", "-", "1"}], ")"}], " ", 
     RowBox[{"n", "(", "t", ")"}]}]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.637407540591054*^9, 3.6374075808021927`*^9}, {
   3.6374077799925947`*^9, 3.6374077945619907`*^9}, 3.637408803775064*^9, {
   3.637639384732041*^9, 3.637639406515682*^9}}],

Cell[TextData[{
 "Define the ",
 StyleBox["discrete-time growth rate",
  FontWeight->"Bold"],
 " (per capita change in # of individuals) as ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["r", "d"], "=", 
    RowBox[{
     RowBox[{"R", "-", "1"}], "=", 
     RowBox[{"b", "-", "d", "-", 
      RowBox[{"b", " ", "d"}]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.637408029727038*^9, 3.63740808244516*^9}}],

Cell["", "PageBreak",
 PageBreakBelow->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Continuous-time version", "Subsubsection",
 CellChangeTimes->{{3.637406682398019*^9, 3.637406712291272*^9}, {
  3.6374081021107883`*^9, 3.637408103363418*^9}}],

Cell[TextData[{
 "Now, ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox["d", TraditionalForm]]],
 " denote the ",
 StyleBox["per capita rate of growth ",
  FontWeight->"Bold"],
 "and",
 StyleBox[" death",
  FontWeight->"Bold"],
 ", respectively. Multiplied by a small amount of time ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"\[CapitalDelta]", "t"}]], TraditionalForm]]],
 ", they give the # of births and deaths per individual in this time interval."
}], "Text",
 CellChangeTimes->{{3.637408137513453*^9, 3.637408257336488*^9}}],

Cell["Differential equation (from the flow diagram):", "Text",
 CellChangeTimes->{{3.637408261208427*^9, 3.637408280993071*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"\[DifferentialD]", " ", "n"}], 
     RowBox[{"\[DifferentialD]", "t"}]], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"b", " ", 
       RowBox[{"n", "(", "t", ")"}]}], "-", 
      RowBox[{"d", " ", 
       RowBox[{"n", "(", "t", ")"}]}]}], "=", 
     RowBox[{
      SubscriptBox["r", "c"], 
      RowBox[{"n", "(", "t", ")"}]}]}]}], ","}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.637408607329226*^9, 3.63740864802149*^9}, {
   3.637408684996038*^9, 3.637408705885038*^9}, 3.637408779062326*^9, {
   3.637408832463814*^9, 3.637408858959922*^9}}],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["r", "c"], "=", 
    RowBox[{"b", "-", "d"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is the per capita rate of change in the # of individuals."
}], "Text",
 CellChangeTimes->{{3.637408860781543*^9, 3.637408895742161*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Logistic population growth", "Subsection",
 CellChangeTimes->{{3.637409225560587*^9, 3.637409230190292*^9}}],

Cell[TextData[{
 "Many factors may ",
 StyleBox["slow the rate of growth",
  FontSlant->"Italic"],
 ", e.g. declining resource availability, increased predation risk, higher \
incidence of disease, etc. The ",
 StyleBox["logistic model",
  FontWeight->"Bold"],
 " describes this processes ",
 StyleBox["indirectly",
  FontSlant->"Italic"],
 ", and there are many ways of modeling the effect."
}], "Text",
 CellChangeTimes->{{3.637409246023499*^9, 3.6374093367701073`*^9}, {
  3.6374095829864893`*^9, 3.637409712043407*^9}, {3.637409889477519*^9, 
  3.637409964614414*^9}, {3.637410026012978*^9, 3.637410082255947*^9}}],

Cell[CellGroupData[{

Cell["Discrete-time version", "Subsubsection",
 CellChangeTimes->{{3.637410073049736*^9, 3.6374100758952227`*^9}}],

Cell[TextData[{
 "The ",
 StyleBox["standard logistic model ",
  FontWeight->"Bold"],
 "in discrete time assumes that the ",
 StyleBox["number of surviving individuals per parent",
  FontSlant->"Italic"],
 " ",
 StyleBox["declines linearly with population size.",
  FontSlant->"Italic"],
 " That is, the reproductive factor is modelled as"
}], "Text",
 CellChangeTimes->{3.637410064388238*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"R", "(", "n", ")"}], "=", 
    RowBox[{
     RowBox[{"intercept", "+", 
      RowBox[{"slope", " ", "*", " ", 
       RowBox[{"n", "(", "t", ")"}]}]}], " ", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SubscriptBox["r", "d"]}], ")"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"-", 
         FractionBox[
          SubscriptBox["r", "d"], "K"]}], ")"}], 
       RowBox[{"n", "(", "t", ")"}]}]}]}]}], ","}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.637409972754224*^9, 3.6374100047439623`*^9}, {
  3.637410093266336*^9, 3.637410168969493*^9}, {3.637460489104022*^9, 
  3.6374605262496367`*^9}}],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox["K", TraditionalForm]]],
 " is the ",
 StyleBox["carrying capacity",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.6374101710947247`*^9, 3.637410181919029*^9}, {
  3.637410246064212*^9, 3.637410288383819*^9}, {3.63741032574404*^9, 
  3.637410416448729*^9}, {3.637639480190838*^9, 3.637639500792039*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "The population grows, i.e. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"R", "(", "n", ")"}], ">", "1"}], TraditionalForm]]],
 ", if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"n", "(", "t", ")"}], "<", "K"}], TraditionalForm]]],
 "."
}], "Item",
 CellChangeTimes->{{3.637639508555394*^9, 3.6376395343906937`*^9}}],

Cell[TextData[{
 "The population shrinks, i.e. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"R", "(", "n", ")"}], "<", "1"}], TraditionalForm]]],
 ", if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"n", "(", "t", ")"}], ">", "K"}], TraditionalForm]]],
 "."
}], "Item",
 CellChangeTimes->{{3.637639508555394*^9, 3.637639536375163*^9}}],

Cell[TextData[{
 "No change occurs if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"n", "(", "t", ")"}], "=", "K"}], TraditionalForm]]],
 "."
}], "Item",
 CellChangeTimes->{{3.637639508555394*^9, 3.6376395227904663`*^9}}]
}, Open  ]],

Cell["", "PageBreak",
 PageBreakBelow->True],

Cell[CellGroupData[{

Cell[BoxData["logGrowthReproFactorPlot"], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.637410738448616*^9, 3.637410740440503*^9}, 
   3.637461627783414*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{K$$ = 154.5, $CellContext`rd$$ = 0.675, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`rd$$], 1}, 0, 2}, {{
       Hold[K$$], 100}, 10, 200}}, Typeset`size$$ = {270., {93., 94.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`rd$780$$ = 0, K$785$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {K$$ = 100, $CellContext`rd$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`rd$$, $CellContext`rd$780$$, 0], 
        Hold[K$$, K$785$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        $CellContext`logGrowthReproFactor[$CellContext`n, $CellContext`rd$$, 
         K$$], {$CellContext`n, 0, 2 K$$}, 
        PlotRange -> {{0, 2 K$$}, {0, 1.05 (1 + $CellContext`rd$$)}}, Frame -> 
        True, FrameLabel -> {{
          "Reproductive factor, \!\(\*\nStyleBox[\"R\",\n\
FontSlant->\"Italic\"]\)(\!\(\*\nStyleBox[\"n\",\nFontSlant->\"Italic\"]\))", 
           ""}, {"Population size, \!\(\*\nStyleBox[\"n\",\n\
FontSlant->\"Italic\"]\)(\!\(\*\nStyleBox[\"t\",\nFontSlant->\"Italic\"]\))", 
           
           StringJoin[
           "\!\(\*\nStyleBox[\"K\",\nFontSlant->\"Italic\"]\) = ", 
            ToString[
             Round[K$$]], 
            "; \!\(\*SubscriptBox[\n StyleBox[\"r\",\nFontSlant->\"Italic\"], \
\n StyleBox[\"d\",\nFontSlant->\"Italic\"]]\) = ", 
            ToString[
             Round[$CellContext`rd$$, 0.01]]]}}, LabelStyle -> 
        Directive[FontFamily -> "Helvetica", FontSize -> 14], 
        GridLines -> {{K$$}, {1}}], 
      "Specifications" :> {{{$CellContext`rd$$, 1}, 0, 2}, {{K$$, 100}, 10, 
         200}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{305., {138., 142.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.637461633602097*^9, {3.637494965333083*^9, 3.637494974877226*^9}, {
   3.637497486905939*^9, 3.637497489918324*^9}, {3.6375787479597588`*^9, 
   3.6375787553294687`*^9}, {3.6376324335548573`*^9, 3.637632444948235*^9}, 
   3.6376353564321012`*^9, {3.637639996517439*^9, 3.637639999383585*^9}, {
   3.63767386105385*^9, 3.637673871139962*^9}}]
}, Open  ]],

Cell["Recursion equation:", "Text",
 CellChangeTimes->{{3.637461723553927*^9, 3.637461727815539*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"n", "(", 
    RowBox[{"t", "+", "1"}], ")"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"R", "(", "n", ")"}], " ", 
     RowBox[{"n", "(", "t", ")"}]}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SubscriptBox["r", "d"]}], ")"}], "-", 
        RowBox[{
         FractionBox[
          SubscriptBox["r", "d"], "K"], 
         RowBox[{"n", "(", "t", ")"}]}]}], "]"}], 
      RowBox[{"n", "(", "t", ")"}]}], "=", 
     RowBox[{
      RowBox[{"n", "(", "t", ")"}], "+", 
      RowBox[{
       SubscriptBox["r", "d"], 
       RowBox[{"n", "(", "t", ")"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"n", "(", "t", ")"}], "K"]}], ")"}], "."}]}]}]}]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.637461734619032*^9, 3.637461819333362*^9}, {
  3.6374618563920116`*^9, 3.6374619121783953`*^9}}],

Cell["Difference equation:", "Text",
 CellChangeTimes->{{3.6374619155568857`*^9, 3.637461924821039*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox[
    RowBox[{"\[CapitalDelta]", "n"}]], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"n", "(", 
      RowBox[{"t", "+", "1"}], ")"}], "-", 
     RowBox[{"n", "(", "t", ")"}]}], "=", 
    RowBox[{
     SubscriptBox["r", "d"], 
     RowBox[{"n", "(", "t", ")"}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        FractionBox[
         RowBox[{"n", "(", "t", ")"}], "K"]}], ")"}], "."}]}]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.637461734619032*^9, 3.637461819333362*^9}, {
  3.6374618563920116`*^9, 3.637461955273117*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Continuous-time version", "Subsubsection",
 CellChangeTimes->{{3.637461676946419*^9, 3.6374616803200827`*^9}}],

Cell["\<\
We leave the derivation of the differential equation as homework (Problem 2).\
\
\>", "Text",
 CellChangeTimes->{{3.637462338671689*^9, 3.637462359955346*^9}}],

Cell["", "PageBreak",
 PageBreakBelow->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Illustration: Discrete-time version of logistic growth model", \
"Subsubsection",
 CellChangeTimes->{{3.6374974705872717`*^9, 3.637497480111504*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotLogGrowth", "[", 
  RowBox[{"(*", " ", 
   RowBox[{"K", ":"}], " ", "*)"}], 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["10", "6"], ",", 
     SuperscriptBox["10", "6"], ",", 
     RowBox[{"5", " ", 
      SuperscriptBox["10", "5"]}], ",", 
     RowBox[{"5", " ", 
      SuperscriptBox["10", "5"]}], ",", 
     RowBox[{"7.5", " ", 
      SuperscriptBox["10", "5"]}]}], "}"}], ",", 
   RowBox[{"(*", " ", 
    RowBox[{"r", ":"}], " ", "*)"}], 
   RowBox[{"{", 
    RowBox[{"0.5", ",", "0.25", ",", "0.5", ",", "0.25", ",", "1.9"}], "}"}], 
   ",", 
   RowBox[{"(*", " ", 
    RowBox[{"tMax", ":"}], " ", "*)"}], 
   RowBox[{"{", 
    RowBox[{"100", ",", "100", ",", "100", ",", "100", ",", "100"}], "}"}], 
   ",", 
   RowBox[{"(*", " ", 
    RowBox[{"Style", ":"}], " ", "*)"}], 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "Blue", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", "Dashed"}], "}"}], ",", 
     RowBox[{"{", "Red", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Red", ",", "Dashed"}], "}"}], ",", 
     RowBox[{"{", "Orange", "}"}]}], "}"}]}], "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.637496706630926*^9, 3.637496764310809*^9}, {
  3.63749697069836*^9, 3.637497070484995*^9}, {3.637497117218444*^9, 
  3.637497245869808*^9}, {3.637497291710047*^9, 3.6374973225061274`*^9}, {
  3.637497382560639*^9, 3.6374974110843573`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0, 0, 1], PointSize[0.008333333333333333], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1:eJxdzXtMU2ccxvHjAk5EI2hJWKdoG6PYAaF1rqBgH1quBQR6GaggjEuU6WYw
higoHF1X3FQCRiMao3hL1OiWgFsw8VK1ao0aSawK0z+MYci0GhexqFCOGn49
5/S8ycmbz/nmyasoX2uq+oJhmMpP3+d77LzWfdC7NnLckI5+IM5WGMRx4zDG
CXhuua7xcRPJYThvfbJyRCcjyxAU/kg3VBpFjoQ2uObE2xtzyNNh2zToexOh
Js+C+7F8TV97IlmJ9e7Y5vYEA3k2Th3rPdjjziHPgaYhcmHTISs5Gnc2zb9h
15aRVajOGEkMNq8ix+DRxawV3uR15Dj0GO0RhuJ6cjzCYsdP+9lmI6vR0M+c
feFsJmuwrGRitSN8L3k+3t3t0yuzD5O/xbaiZ8F3XpwkL0C/Wv5n0epO8ncY
Lh5sOym7QNbCV2GcdezyNXICPG3Zq7tSusmJeJn4wP1a10NeiHsHj1z5MeQp
eRFqk3IHHnY9JyehNKnrVsiZN+RkxOxWFe7pGiEvxq+e5VM1HUEpY9Zhg0J+
O9o4mQwc6D+ufLhANmYW2N+vVqreyamnYMaz6a01OgX1FBTuuLKzmptNXQ/n
hcGz99Oiqeuh+yvUue+yiroBRzY0hf69Moa6AVtSd9VVVMRST8W5i6fT216R
2VT8G+ryfp0QRz0Nef+ZSl+VkNk0/N5Y1R1V4+/pmFn8P27W+Xs6VNs7ZUcb
/T0DIbXz5oZv9fcMlF1y1GX+4u+ZKKtQafv8ZjMxsOtLucbm71m4VdI+aanf
bBY2m7X2NXw3wr0uwlDLdyP++OY3RT3fs7FK42zZzPdsFDHlrga+5+Dt+/jK
Rr7n4Kf6yA7eTC7MyZN6hZ6L1ii7R+hLoJ9i8Ap9CdqbFMNCz0P31Raf0PMw
8INrVOj5GIyv5HgjH3WRHYLZfHx6XrAjHzPtHsFMAcIMXtG+ANsUw6J9AZwt
PtG+AOWuUdHeBHUlJ9qb8FWHyKwJk3tFdpjQ5BGZMSPVK96boRwW781o9Yn3
ZtwcFe8tqOLEews6xWYt+EdshwUvxWasGArYWzESsLdiNGBvBRew/z7QkJiV
2CExUyjZS8xK7JCYKZLsJWYldkjMLOX9EZJ55SA=
      "]]}, 
    {RGBColor[0, 0, 1], PointSize[0.008333333333333333], AbsoluteThickness[
     1.6], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJw11HlMk3ccx/EKGTCUc4raAcoxcAUK7ZAioP2U+yhQKKUFskEGLCAGWWA4
MpFDNiwDYSKZwVEv5qpY3ByTbeBSmKJjyDwiDMguYZKBXCILorRj6fd5kidP
Xs/79/nrSR6nt/cnZhuxWKystfv/p+GaF5Y6TXTr9YtCeoH506IQvX6ZbIYT
ZoEFOqGebA3OE9ePdNXGMHgj5sTt6au5ZuQteMeFXfZBlSXZHlyVOHDA9hXy
dhTbqwdKhzeTndH83s3p1NsOZFcomjvWyU87k92Q2vnxVG6kO3kH+mJkT8vY
XmQOahtqy2t9+GRPTL/6xPditx+ZC+f80aiBvCCyD8QajnXKjyIyD7/lZay6
+oaT+dj3J3uTY08M+Q3kS8Xc84oEsi+kDp3ruttl5J14a6WFL2ankf2wz+rb
Ovl8BlmAs+HHHkR4ZpP9Mfr5l2bbDuwl78LVrMJDYTUF5AAUbb3qVn+piBwI
J9f5ieDhEnIQfn/IjuK7lZN3Y1Z0f5ufdxV5D+K7TC25AUqyEN/8kj6ZV11P
Bpr4ghHV140GlwNDHaZ1c6oT1EVgT5UNel9XURfB5NTNZo3/OerB8BCueN8z
VlMPRnPeJ2EWrHbqIbAcimtQdF+hHoLIfmVme3Yn9VBUVO+fdPK7Rj0Urz26
0zYc0Es9DOPmt+5d+KGPehj8fY63Zrw5QD0cEzODD7w0d6mHr32vCke98RD1
CExWXuQHZo9Rj4CaZxuqMfmLeiRSRieOpTj/TT0S6aJnvVk+U9SjcOa+h5WY
N089Cpd61dzx5UXq0Ti8tP7fmqPL1KPxxWVd05aNOuoxGLli5LQiMxIZegw+
FPAEvoEmBrPEEHRxnj7sM6cuhtnYtjMKljX1WKR8Kv1qcdGWeixueUnGw/3t
qMehdmY6p1W7lXoczkrCFNklDtTjsXvBqD6ndTv1eNwoeslCc8SZugT/5L7Y
W5zqajAkWK8qtJFscKPzEkiE0ZyZRneDtRI8rnvsYTu9g/YJ+L4yN11jxaF9
AhraUmVBxh60T8DmspeN+n8iaxNQpEnj/5rjSftE5C7F5hQ8IiMRAza6Owci
vWifiD/Ova6JOE7WJsJeKTcrHSSzpCgKV2TOrpAhxabxmp5Oey7tpTB1DG1K
8CNrpVjYU+rQFkVmJSG0qvZ5iIKMJESf4i0FZzL7JAxFP+Mo85h9Ep5HhNzo
eZfZy5Cu31mYX8zs1/4D15IECyXMXoZdF7r1jQeZvQwvjvAOHj3E7JPh8pl1
o3k5s0/GXOnJ6+4VzD4ZJ/t1XauMtclYGPlZqKpk9nJkqfPUdoeZvRxsJ5eV
Asblcoy14LsOxtq180styknGLAW4G94/b1HF7BWwmc4P4jAuV+D2rJ1GyFir
gFHc5Z54xqwUKHN97qat+T+eV65H
      "]]}, 
    {RGBColor[1, 0, 0], PointSize[0.008333333333333333], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1:eJxdzQlIk3EcxvFXY+la6CBlFmZllx2slU6zMp/NK/Oac6ssowMDoTCLiA7S
16V2oWRFroNaaEViBRWh0rEJYWmUlmBJhRXZ1MoOM1m4tfC3ve/eF/68fN7v
/+Gdtnm7dos3wzC5zvP/Pfp8j/1devyX3fEnlj6gIvCmr93hhVH64pVP+Rab
YxxZigvHLc+HYwPIAUh/01D0bUMIOQhDil5Nf/MscjCS/Yb+fg5cSJ6KszG5
rx6bosmhkL+tCy5eHEeegZ1lrcsrO1LJs9DzQbo78qKeHIamW8bKeVEbyXOR
7/+iMEqbR54P65ShCr+YnWQ53r2LE0ev3U9WYKY14lCooYS8EMhWPrQ8rCAv
QkDC6e4fkipyOMosMJyLv0SOQOj5K33T314jK3GitFr5ae1tciSCX/Y2tQzc
I0fhQX21KM/4iLwYUp2+/f6ENnI0noR3dHW97iQvwbkuf98O43vyUiiqVnl9
auolLwO+9qWE1/wkx2D8jRpp/xEbeTmaxcNB8t3eqlHH4kTtXXVhjy8ZEDUm
zmkIlY6aBeovnz/j/30CdRWsOSern+bKqDv9JVncOmUSdTXSBrZqFV7B1NW4
M195dV3YZOpxcAT6jat7RmbjIPbZunrP7BDq8fjc0rEhX09m43Fzx+GPL7a5
egJKAo1q0x5XT8CmUwPt5YWungjj0eu6smJXT0SjRSkac9DVk3CsTbPX4jKb
hIhafePUEldfAX3I6RyNy+wKVHbPlOe5ezJKa8SyXe6ejPQig2Sfu69EX61Z
dMDdVyJR0W0odPcUdPoVqIrcPQUTRfUmt5lUDHvltHE9FZ2M3Mr1NGxmZINc
T8MCVmLjejpkZtEI19Mh6TbYuZ4BUYHKwfUMeNebODMaOH/PGU7Lrbz7TssG
OZs1KJbYePtMWEQjvH0m3hvsvH0mdqgcvH0mGkw8M1qsb+MZWiyw8sxqETTI
32sx3sbfZ2HsCH+fhYN2/j4Lagd/n4VLfDM6tPMNHXr5ZnX47bHX4a/HXg+7
x14Ph8deYLPAzCpPQ2BWYLPAzGrBXmBWYLPAzBrBXmBWYLPATLbb/wABF+HG

      "]]}, 
    {RGBColor[1, 0, 0], PointSize[0.008333333333333333], AbsoluteThickness[
     1.6], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJw9ywlQlGUcx/ENtBZGGC7ljiOOhDWQcwOM3y43y7G7sIBo5nAoxzZoyQIO
MsshCMpACwKVYzkQ5AHNYIUg6kJaJObEJAJatBWjxAAt4BBQC9Hs/+Wdeead
z/N9fg5peeJMHRaLlbF5/v9rP3XwGn+oaGNjKZgucCiivHJ9Y4XMRpq7TPVv
8AbZCFGG0Ts0VbrQ2gz39N++s5bNJlsgI9V3XVZhSLbBjcKPZEMmpmR7jC6I
PywYMyc7IvN245jwB1uyEy7E5f0R96kj2QUKXae5g5Gu5NfxRcDd8FyrPWQ3
eOguWRd7epE52Gl7RlDf70d+A3bJ0++25gaRPdHW+HSa+w2PvBfy4uv5i97h
ZC9ctCm8+1ApIHujN12hOZoiIvtg0mOgNrVLQvZFVm1s43XLA2Q/bOOvWqn+
Okz2h3/Pl/Pn3DPJXPRZqzvX8nPIb0Lf5dqzw9XHyAFQWdoN7L56ghyImfZB
rtloETkIZ+dNvjrlJCfvQ/Tnq1NnORXkt6BoKbHe5ldNDobbbf6VGXkdGYh7
2iyu6WrQWg6Yd0ycZjW3UOdBlFXe9KDnInUeeEbOx3Q8WqnzoZZdKrn5ooM6
H+y6tNjy6U7qIQgyTHddv9xNPQTq0vJa06ge6qEwFrayG/VuUQ9Fv8csi2Mx
SD0MTr72OoNnvqUehilBsddVvQfUw9HUFdsQKR2hHo7m7MnZ+k9GqUdAtpri
zbn/hHoEpr00Q+I6FfVIhCt5gtDcKeqRaGGbhn5v8Sf1KByJctT7tXeeehQK
FoxWpDcWqUdjKC/NfLhrmXo0jkQWXr4V8w91AfQrfx9pjmHxtF2AhpNNgZwo
Xa1ZMdBZaKo8cf5l6jFInlKodZ30qcei7bGk8JTKgHos/B75fxY/bkQ9Dr+M
a54Jb5pQj8Mhn6pLsTVm1OPR/opByC7uLurxWGnf6XCvz5y6EPlHq3MVOyy1
hhBJE4HOY+5W9F6Ic2VzH6RbWWutFCK7OjCn4GcyS4SRO2qfzgIb2ovgW7oi
N14ky0Xw+TpHWiKypb0IYe8/7w74mMwSo8TNg/fwJzLEeL6xNLe2TpaLceWl
LNf7dq/SXowZrn5VG5fMSoCvrYInFZCRgKAqs9Km/WR5ArK6dId5Gcw+Ad1/
6z2KlDL7RNTYR4yI3mP2idCwhzueyJh9InbXSwr4J5l9IjKdz2t+LGb2EmSt
vcPvL2H2Enx3wHyWI2f2EswETFTzSpm9BNv3iIyNy5h9EnS2K5TXGCMJlezj
1Q7lzD4Jyy0urxUxViZh37TLeB9jVjKcBibtZxkjGWXqJXPjCmafjBlPxQiH
sTIZ3ssvLvAYs1IQ/rjZV8QYm16wmz64tU9B0KRBV+bWPgW/9VbwpVv7/fBJ
Ve09vun/AMmKrBw=
      "]]}, 
    {RGBColor[1, 0.5, 0], PointSize[0.008333333333333333], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1:eJw9yw1Q03Ucx/GBIQjUJSH2hGJuQ5HbOYgEhvFhPMNggz1h4kOAV1ORqSCX
hE3U2En5GF0ENu0K0sZT2IHhBYRFBJkEgonyoMRTyK2bUUOl6Px/f/+73/3v
83v93ivSspK32fN4vIz58///8WcJLSoUDYr9HcFdoF/S0DrW5cVtJ8weH1cc
Tg/k9tOweOc4Z1clcdsd2kCUWz/VcftZVEf1lcUWF3D7RYx6Wjvypj/mthdc
7e7tth2o4/ZL8JdNRaQKOrnNx5xZOLhcOMJtIV7wKvjiy9UPub0KJ3ao8mNT
3cIebx8YgwsUWWdXctsXraWhMVcsq7gtgusvceoFtXxur0XizvtvW/eRi3Fw
yXSRNlzAbT80ld2+X7mC3B+iayccXD8jfxlPBM6mXRz25nYAOq3rpwwT5K+g
x7hPv6CGfB1Em7T2Jk8htwNxUy/2MRvJg2B77lFMUyR5MByLS4dEOnIJPlD2
JfK3kYfAoMrTdMnJ12PLe+4fzuSTv4rLijNFcgl5KAQLs+ounSQHLr5hqvjK
h3MDENmomzaeIw/DhsHur4M8ycMwNSLcE1RFLsV3zwynx7uRS/FPg4mX1UAe
jsG98rM7F5GHY1yxKex8M3kEHMali4LtySNwp9e5RdZGHomqllmP9IfcNkSi
wkkVe76TPAqVIdLt5X+TR2GsJN8wd408GjV6y+hVK3k03rQb2vxOD3kM/PoL
Mmot5DHwfbfyV1UfeSwSMg93+UyTx0LulN1h+o08DvUbfWuXTZHHIXfOv2d/
P3k8LEsFwzmT5PE4PRytfXCLXIaT0vISzwlyGVr/aDf5DZAnIM5mK1s4Tp4A
/x+erBANkiciebH5ff4YeSJWnw64NMtcDuewmIzMUXI5PI9stJmGyBW48NPN
uRu/cxsKSJ4a6xAM03sF9ibkfL+VvFmBAy7BvqfIeUmYvXx9y78j1CdhscvP
f06wPgk6sf1bNeTNSXD3eOAovkN9Mj6vxzE96+d39pLS7eSGZHhLZG0hrE9G
xKHukBLWK+FR79Lrxnol8r5pt2tivRItA2m3LHepV0K/K7TkNutVWFs4o7lO
DhXWzORunWG9Co33/nJpYr0KOm3iHmfaPDXUtcJHZtarYXe0r+552gY1xG3F
qZ+wXg3tlbIBb9ZrcHRz5qFTrNcg+7W7Rj/Wa9DYXjhpZL0G5nWv+0pYr0Xu
8h38g6zXovvqhTVS1mtREKC7sZ/1WkxUf9QbzfoULD1i/jaH9Smodu/LlLE+
BSudHM7sZn0KlMt+FChYvwGT5xQRu+b3f6AzuF4=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Population size\"", TraditionalForm], None}, {
     FormBox["\"Time\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->{FontFamily -> "Helvetica", FontSize -> 14},
  Method->{},
  PlotRange->{{0., 100.}, {0, 999999.9999999999}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.637497172429716*^9, 3.637497246430852*^9}, {
   3.6374972921797533`*^9, 3.637497322900161*^9}, 3.637497411725046*^9, {
   3.637497487602543*^9, 3.63749749059918*^9}, 3.6375015288575153`*^9, {
   3.637578748369851*^9, 3.637578755962078*^9}, {3.637632437677348*^9, 
   3.637632445572247*^9}, {3.637639997008613*^9, 3.6376399996056337`*^9}, {
   3.637673861579459*^9, 3.637673873099004*^9}}]
}, Open  ]],

Cell[TextData[{
 "Notice the cyclic behaviour, eventually converging to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"K", "=", "750000"}], TraditionalForm]]],
 ", of the orange line. This occurs if ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["r", "d"], TraditionalForm]]],
 " is above a critical value, such that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "(", "t", ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " can overshoot ",
 Cell[BoxData[
  FormBox["K", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and, hence, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"R", "(", "n", ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " becomes negative. This behaviour is obseverd only in the discrete-time \
model."
}], "Text",
 CellChangeTimes->{{3.637497585591866*^9, 3.6374976365837107`*^9}, 
   3.637497684301249*^9, {3.637578787001698*^9, 3.637578791960803*^9}, {
   3.637578858393055*^9, 3.637578911472116*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Linear and nonlinear models", "Section",
 CellChangeTimes->{{3.637497718249133*^9, 3.637497727870504*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Linear models:", "Item",
  FontWeight->"Bold"],
 StyleBox[" The change per unit time is a ", "Item"],
 StyleBox["linear function of the variable(s)", "Item",
  FontSlant->"Italic"]
}], "Item",
 CellChangeTimes->{{3.637497755312199*^9, 3.63749777792986*^9}, {
  3.637497813011104*^9, 3.637497813018154*^9}}],

Cell[TextData[{
 StyleBox["Example: Exponential growth model, ", "Item",
  FontColor->RGBColor[0.2, 0.6, 0.4]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox[
     RowBox[{"\[CapitalDelta]", "n"}]], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"R", "-", "1"}], ")"}], " ", 
      RowBox[{"n", "(", "t", ")"}]}], "=", 
     RowBox[{
      SubscriptBox["r", "d"], 
      RowBox[{"n", "(", "t", ")"}]}]}]}], TraditionalForm]],
  FontColor->RGBColor[0.2, 0.6, 0.4]],
 StyleBox[".",
  FontColor->RGBColor[0.2, 0.6, 0.4]]
}], "Subitem",
 CellChangeTimes->{{3.637497755312199*^9, 3.63749777792986*^9}, {
  3.637497813011104*^9, 3.637497882124763*^9}, {3.637498013525659*^9, 
  3.637498013537339*^9}}],

Cell[TextData[{
 StyleBox["Nonlinear models:", "Item",
  FontWeight->"Bold"],
 StyleBox[" The change per unit time is a \[OpenCurlyQuote]more complicated\
\[CloseCurlyQuote], ", "Item"],
 StyleBox["non-linear function of the variable(s)", "Item",
  FontSlant->"Italic"]
}], "Item",
 CellChangeTimes->{{3.637497755312199*^9, 3.637497810698916*^9}, {
  3.637497885364592*^9, 3.6374978853764553`*^9}, {3.6374981657282*^9, 
  3.637498169336931*^9}}],

Cell[TextData[{
 StyleBox["Example: Logistic growth model, ", "Item",
  FontColor->RGBColor[0.2, 0.6, 0.4]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox[
     RowBox[{"\[CapitalDelta]", "n"}]], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["r", "d"], 
      RowBox[{"n", "(", "t", ")"}], 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        FractionBox[
         RowBox[{"n", "(", "t", ")"}], "K"]}], ")"}]}], "=", 
     RowBox[{
      RowBox[{
       SubscriptBox["r", "d"], 
       RowBox[{"n", "(", "t", ")"}]}], "-", 
      RowBox[{
       SubscriptBox["r", "d"], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"n", "(", "t", ")"}], "2"], "/", "K"}]}]}]}]}], 
   TraditionalForm]],
  FontColor->RGBColor[0.2, 0.6, 0.4]],
 StyleBox[".",
  FontColor->RGBColor[0.2, 0.6, 0.4]]
}], "Subitem",
 CellChangeTimes->{{3.637497755312199*^9, 3.637497810698916*^9}, {
  3.637497885364592*^9, 3.637497994721053*^9}, {3.637498025608676*^9, 
  3.6374980256191072`*^9}}],

Cell[TextData[{
 "It is straightforward to obtain the ",
 StyleBox["general solution",
  FontWeight->"Bold"],
 " of linear models, i.e. there is an ",
 StyleBox["explicit solution",
  FontSlant->"Italic"],
 " predicting what the value of the variable will be at any future point in \
time (See unit 6 / chapter 6)."
}], "Item",
 CellChangeTimes->{{3.637497755312199*^9, 3.637497810698916*^9}, {
  3.637497885364592*^9, 3.637497994721053*^9}, {3.637498025608676*^9, 
  3.637498142711474*^9}, {3.637498236030799*^9, 3.6374982360408163`*^9}}],

Cell["\<\
However, for non-linear models, this can be difficult or even impossible. In \
biology, most models are non-linear, as they often involve interactions.\
\>", "Item",
 CellChangeTimes->{{3.637497755312199*^9, 3.637497810698916*^9}, {
  3.637497885364592*^9, 3.637497994721053*^9}, {3.637498025608676*^9, 
  3.637498142711474*^9}, {3.637498236030799*^9, 3.637498295877926*^9}, {
  3.637498335607996*^9, 3.6374983356174917`*^9}}],

Cell[TextData[{
 StyleBox["Remark:",
  FontWeight->"Bold"],
 " Recursion, difference, and differential equations are ",
 StyleBox["implicit descriptions",
  FontSlant->"Italic"],
 "."
}], "Item",
 CellChangeTimes->{{3.637497755312199*^9, 3.637497810698916*^9}, {
  3.637497885364592*^9, 3.637497994721053*^9}, {3.637498025608676*^9, 
  3.637498142711474*^9}, {3.637498236030799*^9, 3.637498295877926*^9}, {
  3.637498335607996*^9, 3.637498383502861*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Haploid and diploid models of natural selection", "Section",
 CellChangeTimes->{{3.637500496490353*^9, 3.637500505647908*^9}}],

Cell[TextData[{
 "We will study two basic, but very important deterministic ",
 StyleBox["population-genetic models",
  FontWeight->"Bold"],
 ". Population-genetic models describe ",
 StyleBox["how the frequency of alleles changes over time",
  FontSlant->"Italic"],
 ". We consider one locus with two alleles called ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", where one allele is favoured over the other by natural selection.\nSexual \
organisms go through a ",
 StyleBox["haploid",
  FontWeight->"Bold"],
 " and a ",
 StyleBox["diploid phase",
  FontWeight->"Bold"],
 " in their life cycle. Whether the haploid or diploid model of selection is \
appropriate depends on when selection acts:"
}], "Text",
 CellChangeTimes->{{3.637500521453072*^9, 3.6375007242254047`*^9}, {
  3.637500814506769*^9, 3.6375008238575172`*^9}, {3.637500920291171*^9, 
  3.637501006348609*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvfVX1ev6733G85wfnn/ijLNX6LJbaQsQVDpUFAtsUARBwCTElpBGSkIx
UezCFlsxsLDAFrt17e/13O9LJxvdoLAU5pxwvcaYe8PMz3Le3Pf76t88fJzG
/D//63/9ryn/n/ofp5GBvfz8RgY7/2/1S+9g/9Ee/6/64Zm6TVTPwZ0kCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCFrm77//po8fP1b+/L3nvXv3jv7n
f/7nH3/Wp0+f6M2b1//49YIgCIIg/Bic2W/fvq32MZz53zvvBd3j3//+Nz18
8ICuXb1Kpdeu0fVrpXT75s1qn4vvFs85fOgwvX///qc+r+jIkZ+4akEQBEEQ
vgfO6Rul16m8vLzaxx8/fky3btz4x+e50PA8e/aM4mPjqKCggA4fPkxRi5fQ
xvz8ap/7+tUrykhLp9DZIfy62vJJafmnT5+yfw6a7c6dO7Rxw4Zf9Z8gCIIg
CEIVPn38ROfPnaPNBZu+ul8TTwM40/fs3k2nT5/ms1nQbRDfvH7tGg0eNIhu
3bzJMcub6v/3Fhby4/huHz18SGVlZfTixQu+b8/OnRQWEsqaDdr8aUUFazBo
MvjhcHupnnv/3n26f/8+vVJr4vr165SZnkGnT53m1zxRr7l79y6/Hz6zQmn9
B/cf0L179/g++HFxPXhP2ADwy8l6EgRBEITa8Vyd0Uujl/KZDnCGPn3ylM/r
x48eVZ6p8LUtmDePXr+WfCVdB5oN2mi0pydNCwqm0qvX6NXLV/RQ6TRQWlrK
/rC42KW0ZdNm1nD79u6juXMiWLNduXyFdm7fQUmJiZS/bp3SYk+U/qqgI4cO
04rcFZSTla1+PkRbNm8mFydnys3O4fWyefMmtZai+fNv37pFmzcV0NrVaygh
IUHpvZes8aYFBdHuXbto0YIFlJqyjF6+fKnlfy1BEIQfg33tzZs39EzZnIKg
DaDHrly6RMOHDft8h1qTDx48oOCpgXTm9GlyGzSIysvKKvPSR40aRSdPnPzK
ByfoJvhu4UeDbrPt14+SEhLpTnk5f5dzwsJYYxUXF5OLgyPdu3uXdm3fzrHR
J0+eUOSSSDp+/DidUDc/Pz86VnSUNqzPp4ING9nHduTIEVqemUkXzl8gf/X4
jRs3eE0c3L+fvL29OVYaET6HLpWU8LXEKB23YO48/tl98GAqVJoN7+Pk4MR6
8mfqHgThe2jydF+/fsV/D1Xzcr+XwysI34JYwoEDByg+Pp5OHDtGZ8+epeul
1zlmIb4MoSH4+OED7du7l8aOHs2/4+xEHGt13ip6++YteYwYQfvV439/+sSP
+/n60trVq9Vjb7R52UItwHf5QX2/iFGuXbOG+llZU1hICL14/pyGDXGn06dO
sS5HzcBTpdP2qu95XsRcunblKk3196fNmzbx46dOnqQSpb2yl2fR1s1bKvUV
NOH5c+f5uXfK7/DnHD16lLy9vDlu2sfcnN8XHFf7m5O9Pf/sMXIkXVJ2Avy7
zo7OotmEegN2BGLwt2/fZvshODCI178G5HxcuXKFY/qyBoUfgZjA4oWL6I9/
/UYtmjUnU0MjGjl8BM2bO5dyc3J5nyu5eJH3Q+x9n76cm4Lwq8CZjjiV1wSv
yvuQs7ROnfG7duygCePG04H9+yttU2i2lbm57B8WdBecP7D9Cnfv4X0D39/e
PXvIbcBA/n7tbGzpRmkpvVJ70L07d/kcK1SPIzYKfTZm1CjOX0QMAHUpiGnG
Lo3lmoZHjx7R86efY+ewNQOmTOH6FfjWjhYdZf0Pm9PV0Yn9c+D4seM0ytOT
fx45YiT793BN0GzXoNkkp034xcCmuHjhAu3Yvv3z34Nat/2s+/JarxonuHH9
Bq1RdqjsacK3YN1wbu+Tz7kh99Sel5mezpqtuttffzajfv36qT3Rn6Kjo2nX
zp10TNmxsAse3L/P7yExKuFnwHl+7OgxGj50eOXvW7dsoYg5c1jPTZ7kQ4cO
HqzUbL6TJ/PjOJ8F3QV7zY3rpeQxYjjvFziPENtEfBSEzp5NQ93dKScri+/D
d72loIDCQz/XIISHhdGkiRMpMjKS0tLSOI65YcMGGjt2LOehrV61ig7s20dX
1XsHBQaq915P165dU5qtiLy9vHifS01NpYjwcN6j8DNsA1wXfLfFxWd5H3Qb
6EYX1LkqfWSEX827t+9obkREZZ4utJqDrR3nB1y8cJHrYzS5urBVLl++LH6R
JgrWAfYsxI+eq3WC3G3UWiHnAzkiuTk5lJmRQZmZmRQ4dWqNmq26G/xx2GuR
55uh9tLiM2c4Ro/arIqKCraLX796zZ8vvl7hR/DZXlpK3hMmcPwTZ+fhQ4c4
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
f6CbN26Qva09tW3VmuOmV69eFZ+bIDQyDh44QJ4jPcjP1492bNv+lV4DqCnP
UnYbYhnwoR1Qz3cbMJD7JkGvvXz5kmcko65044aNotkEQagEewb89saGRmRm
YkoxUdE8y0L49cCXid52M6ZNo26dOpO1hSXb0ZKvIgiNB8Q7U1NS2SaDPvsW
zKya6h9AXdUeAB9cX8s+5Ghvzz0fX36ZGYNZfR3btqNdam9uCj0vBUH4MahJ
j46Opvat21B/K2sqUrYd/EFC/QKNhvpbe1tb6tKhE9fzP3/2TNuXJQjCLwA9
dR8/flyj1nr65CmNGzOW++pa9jYn2/796eTx4189P1/ZctBsx9X94osXhKYN
9gbkwnuMGMH+ePR+fKD0m9hzDQfiHWW3y8h/yhSuzZ08cRKd+tLLSRCExotG
s7Vs3pwsevTk3Lb3X+oTNGzMz6dOal+4deuWzAoShCYMdNmpkyfJ2cmJc2Ax
w/iR1IVqBezF8LnNCQsjg05duMYMvTdFtwlC4wU+ODfXgWTZ24Jyc3Lo7p07
dPv27a+eExMVxbNVNLFSQRCaJsixQK1BDxNTSk5OplcvX4kdp2XQ9251Xh7Z
9utPdv1tadeuXZLjJgiNlMePHtOIESMob8VKriG9ceMGzZo+nfvtYu4VfG4T
vb2pc8dOan/+rNmQB4sapps3b8o8Y0FoAqCu4MSJE+Q+xJ0sevWijLR03gcE
3eDd23e0bcsW6mtpRb2696D01FR6+vSpti9LEIRfDOoS9ii7TBMPfab+zkeN
9KDePXrQVH9/SklIpAFOztzrY+fOnbQidwVFLl5CQYGBdGD/funXJgiNHNh1
0ZFRZNm7NznaO9CO7dvpzWupDdU13r97T2fPnKFRnqPIzNiEUpKS6HppqbYv
SxCEegS5rXl5edS2ZWuem4KZVri1aNacvCZMoF49e7F+G+jiSsXFxZJ3LAjV
gJ46uGnihvBRa+6r698M4lzf5it8C+Jjjx7991xKfB785f80fon3jFyyhEyN
jMnRwZGOHDpU2Y9b0D2wttAPffQIDzIxMKRpQUGi2wShkQPf2ygPT9Zs396a
/fY7WZlb0JnTp0WvCUI1vH71ijZt2kTBQcH8dwI76HrpdYqYM4eWZ2ZSGXpX
1/JvB/5v9N3x8Z5Iz2ro54Ba7pKLJbQyd8V/PYbriFu69B/5w/GaTRs3cu+f
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
t1fd5s2bx/Gqd9/krd24foOmTPYlG2W/oBeroH8g9ogZo8hLzMrKovi4OM73
ePz4MecpTvT2prVr1lBiQgKvJYDZGKtWreL5Vrm5uay1oO+wr2A+AvwimCeK
nrrQ9elpabRjx47vzj5GHBaz5rubmpGrs/NXNoogoM+Ms6MTz/M7cviIti9H
0CMePXjAfbzRNwj9wfURnMeoRRg6ZIjUUGuRNatXk6mBEW3atKnauCjme84I
nsazvDVANxUWFnI+JXQY5pAuWrSILiv7YfHCRbR+3Tq6qfa3vn2sqKKigs9B
9NaCH+zihYv8vYN1Sp9t2byFY63BQUF83h45dJjnr2H2Aj4TOXOIxy5euJDW
r1//X9eI36E3LXv35hxhQT9BTQl02swZM6i4uJgiwsMpNCSkUrOtU5oN68TR
3pH12s7t2yklJYV77g5ycWUbAn0fofueKK0H/Y48uLyVK9n/C5/vvIgI1m81
gbUUGhJK7Vq1ZltCfGxCVaDpYXMOcHbhfe57+l8QqrJv3z4+D9PTq88/+hXU
d94tznn4Ck0NjdhXImiHqf7+HGO/qc63f1fzncPPNmvmLFqWsuyrHDNotWFD
hlJZWRmfq6hN2IMZQbNmU25OLucE4XzV9EyAZgPlZeWVP8N/B7/ahXPn6ezZ
szxf8shhpdmCg1mzhYeGUv76fDqj3hu97eHTq07fr87LYx04xddX5gPqKegH
iNqk6Kioz7Pbd+6iwYMH8+wgn4kT2aeLPQlrB32zMP8WvljMEu2n9kLYgPDt
jhk1ihLjE+ic+hn3LY2JYb2GHKRtW7fS5UuXqv18nMeYvWDZ24JcXVx0sp+0
oH0wkwM25YjhwzlfQxBqA3qcof4A59u35yzOSNSpQxPBB/ftGYbfYZPev3e/
Rv8W8pHO17E+BvYubOUP72tXR4jPWJ6ZSUbdDGjr5s11+izh14Dv312di76T
fWucUQU9hlqDsJBQPhM1ug1xTOxbWGNXL18hP6WX8HNUZBRlZWQqDXiDbNUa
1Wi2PhaW/DrMAdJoNvQXj42O4dy3O+V3OM/t2NEi8p8yhd8rJjKS4uPjeYYR
9No9pemqW7Pwqfj7TeGcPMlp008QX8d+gPgntBn8u8OGDuMcRp9Jkyrz2ext
bHkNHTt2jFYo2+DB/QfkYGfPeZPQd0fVWkDfmpCQENq6ZQvNCQ/ndYv9Brqw
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
NuLviC197uvyqbJPB3q84GfN7HgNVfPl8Dh+/1TlPrwfbrivrrl1mEM6Wdkc
qK15XY/+QqHxgHWL/iF9razIa8w4bV+OoKe8e/uOZ7X07tFDZucJNYLZ2vZK
1y9asKBOPWx1CdSqTpo4kazMLbR9KU2a1GUp3NcYcz6x//wIzTzv3Tt3cU7j
7Zs3uQ/MubPF3J8BdSrog4W+gPD1onYFMdiszEz26/Ic7vMXeGZVfn4+vXrx
8nMO5ZEjrN3h40WvtZcva9fzCGcv+j/37tGLe00LQlU+ffpIb9+84dg/fLDo
e4Qb+oVkL88mMyMTio+NoycVFfwcPLemfpJC0wZ7zccvfUcRo8CaqVDn7/59
+8hC7T8Bfn6V6wuPIXcIN5lbK8CXgL5rgwcO4lwyfeTkiePUR+k1zBkXtAd6
xqOv7vx582qsQ/4WxAMSExJp7eo1/HNyYjLHxZFfOcTNjXKU5kINIPQ4+v8h
ZmBiYMhxdtSdhIWG8fts2riR/Cb7stYLnx1C04ODOUY1Yfx43gdr40Muu11G
gf4BZG3Rh2P3QtMG5yPmKDx/9pwePXzEtgBmYi1auJDrDIYPHUqeI0Zwbgn2
H4MuXcnF0ZFGDh9OSxYtooz0dF67yC+HjaHpEy40TXgWpNJo0PuoDUWOOOqd
YB+OHDmSBg0cyHteDxMz6mlq+nltDXEnT/VYSmIiz/a4ovZYjYaTnLemC2zD
nmY9uOe3vtU7vX79inLVud6rew8+3wXtAXsRfY29J3hxLmJtwHmG2QXQbOjr
nJGaThlp6WxfYp43/G/oe+Xk4MQ6DTZGb7Pu7E9bMH8+rVq5kt8Hv+PcRN0x
8ifR8w++DjwHfWqqzuKoiX1796kz15ncBgyUWaNNGJytr16+4jW8bs0aCg4M
JGcnZ55nbGpoTJbm5mTTtx95enjQ7FmzeI3hFhYaSuPGjSMb635k1acPmRkZ
Uef2HclZ6Th/Pz/ud1969Zr4S5oY0FbYn9AjC7WhXmqNmBkb89robmJCfa2s
eT0NcRvMc/Mil0TyegoPCyN3pdnQaxczlk0NjKhrp05sKyQrDYfZMLAlxBZo
emAWI/LHF8ybx3019AnEdkd7evI5+0hPY7uNCZxb8IPBt4XY549A7lv6srRK
Pxt6S0J7f9Zs3uxv+0qzqZ8xFx6vw1mK5wPsic5Kb8EPlxAXT3m5K/hsrItm
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
evke8KfFLo2lwwcO0fniYo6jTvHx5R6nWEuhoaG0Zs0ajnVi5i3q8pZGRXM9
FWoMCjYWcL07bAHoOZ+JE3kfLDp8mCZPmkQpSSm0MX+Deu59ul5aynHX42oN
ogch+ngsS0qmdevWsa+tuhxO9NQaM2o0z6N5+kR7cwQF3SZGrfO2LVpVnr2+
Eyd97pUlCDUAmxO5H83/+KMyLtqntwXXVgnCj8C8lh6mpuQ/ZUqNzyk+c4ZM
jUw4H7yqXwT5tk6OjpSckMQ5QNX5xF6/fsXn4uU6+r5Q94xzsy41EUkJiWRv
a8v1WkLDw7mRSjOhl2TBxo0/fD7Wz7Gjx+jU8ROs2Y4qjY45ebAFkI+Gfe34
8eMcg0JtKG4HDxxgfxnqCVD7iRpU2AS7d+1inzF8Hzt37KDM9IxK7Y73Q4+j
SxdLWNtDL2YtX05F6v1qinui32nQ1EDynuBFV65c+aX/TkLjATYKZmf8+UWz
dWzfnv234msTauLZ02fct0+j81s0a85zQgWhNkCzoY/Q9/wiL54/p4kTvMlZ
6bOq2mz1yjxydnKi1atWcf4Qzj/0V0C+EPxkuA95Q+h3BM3G/Y+ePuWz+tSp
U5UxTOgy5JtfLrnEZzHOWOg1jWZDjBTPhb8POUo17Ye4jhFDh3HdoNDw4PvH
/ACjbt34O64t7N/9xT2r3v/A1/H+B33Dnz97TnPnRNCokZ68VgWhOpATMtDF
lf76408+f5v99jvlZmdLrZ9QLRyLUOeaibFJpWbDfO8t4mcQagk0Wx8Li+/G
0qHZUpKSadyYsZSbk8O+XczF3bplK3l6etLaNWtYn506eZL9LOiXGh8Xx49j
faJOLysrS+m3Cp5jhPgU+kQnqOdcKrnIPuEctc8hLlaQv4HPU+Qxoe4ZOmD9
unUc84JPBvHSmnwj27dt53w20WzaAX42fLeoZ6mLZtNF8N+SFJ9AE8aOp9Oi
2YTvgP66ndq1/5xL/mczsra2ZttVeucK34I4QnhYWKVea660vvvgwdq+LEGP
gGZDb2bMmK0JaLasjOW0akUeeU2YwDEo6KOSiyU0bty4Ss2G3CPEm+BTg96C
DsN8orwVKyguNpZjWBHhETyPA/UOc8LD1X6XQefOnmWfBmJQB7/Mps/OXM55
TPDBoD8++lrC1wYNWFNPQfh4RLNpD/g/Ed+EZrt44aK2L+enwH9LUmIi2yk1
9SwRBIBebHb9bStrEXBLTUkRX5vwFdDw6B8pPjbhZ4Bms+jdm9JSltX4HMQz
M9LSWZc52NhynhE0HOr0vCZ4ca44cowwX61gw0b2l2GmHuYQobdp/rp13E8E
s0EnTZzEGhB5Ravz8mjm9Oms4YIDA2l68DSenYzzEr45jWY7pHTcJPU5Cxcu
pJPHT9So2fLXr6dRHh6i2bQEvpddO3aQQde6xUZ1EdTORITPoTGeo5VNUazt
yxF0HPja2rVqXXkWW1paiq9N+ApoePQO0qwRaHxXJydtX5agZzy4f597M3h7
e9f8nAcPKOlLnHKZsh+Huw/lWj308UBPtNV5q7jXxmyl2fJW5NGNGzfo1o2b
3MMZtQTQUqivQj456vsulVzi9bt61Wr1fsn0UF0D5hZB7w1xG8Iasapmu3bl
Kvd/wHytsNAwPk+rI27pUp7zhxx0oeFBrgbmCrRt25Y21qIG4WdAbd49tb7q
K9cbtatBAVNpyuTJdFOtZ0H4HtX52nA+i69NANgbMW+2f79+leuj1V8t+DwV
hLqA/gjDhrjTaKW9ajr/MOcRMUz0YsPeFBgYyP0PcG7OCA6mNXl59OjhQ67d
g78MPRmWK7uzuLiY9Rv8cJjrAg2Xk5VFK7Jz6LZ6T2g99Me6eP4Cbdm0iWv1
lkbHcM3BOvWa+NhY9sfl5uTSdaX9EENF3l11/bI0vT48R3qwbhAaHuxLmM9o
0KXLD3t9/Czwza7MzeU1WR+gbgYzmjF79FUNvQkFoSrxcfHUWp3DmjMZNfVl
ap8TX5uAfKLIxUsq1wb6e2BmLc5fQagLWEshs2eTnY0Nxz6rA3O60W8B/jbs
P1hnOJ/RwwP5Z3hM4/M4cfw4rVq1ik6cOMHzcdG7FH2xUEOA3ro8l6iwkHPP
NL2x8BzE1PYozaeZ74j3xA0+N+TE7dq5k/s/oA61uj3w8qXLNC0oiHy8J3I8
Vmh48L2UKg1uY2VF8+bO+2XvWfWmATrq2+8Za+nbtVHda2sDevYOch1Aixcu
kp66Qq3AvmjZ24JrRzVnM9ZP1bm6QtMDvo3jx45Tj+49KtdF5/YdKS42jh/H
3oS9C+dnTb2tcP+P5rF8+vTxh3EHPP6hmj6suAaZ96If4DyKxuyqLt2U3jqh
7cv5xyCuitkfM6dN5xm8gnbAuTXAxYX6WfetMe/wW7BfIMfxxfMXvDe9Umcc
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
flYfG2tFCfksqBldFh0tff16ax2ks0P5T3xK6BfSx3w/OipKEhMTNVflxfMX
xV6/wd5Hrhp6Np44flz7c7Rs0UJ7ddj+/uhL7F6xkrTzbqP1B1dpAxLyRcCu
6dK5s/VawrWFuRvv/vg2PXBI0QW1ouiZa5nxV65MGRk9cpRkZmbq97E/4zyB
tnuH9e7dJ7VdeA5sg7yATf37b7//rW8X97L/vPv0fmaZg0pIUQPabZuxb/r1
7ScN69T7pIeFRcdAv/n6+qp/DvrtVkaGPHvyVP12xcHn9Ovbt9rvH/mtZ5LO
SLTRq+h9+7FOs+1n59OuvUyfOpVajZCvBPe7/T/+aI19ac2Ouabitm8v7EMj
hQi02MjAkTqT1nJeNGnUSPbu2aPfh07DHr09NlZnKKPn39EjR3SmC2akAUue
z4oVK/J8n6dPn2qOT2pqap69MjEr5tSJE5J8JtnucZy7CSdP6kxIQooq0G67
43bJgP4/SMtmzaWSS0W7nha2q3atWtKrZ0+ZM3uObNm82ZzzZyT9Rro8evgw
33tX57x4oTOV0Efga8D1DY12+9YtuXTxouzYsUNmzZqlMV/bGV92+rSsg85P
advaW+e9c24EIf8c5LX5dukiDjZ+6xZmb8F1SUone3fvlu+bNLX62JDHNn3q
NK27t4D5e2GhoZoD+cI8Dr/cpOBgGTdunGQ/e6bPwX0B89I+x4SgIDly+LD8
nseceWi2O+b+gNmPtkDjQesN6N//f/xtCfk2nD9/XoLGB+ncBPjeoN/Qj9ch
F52DXoheHh7SuWMnmThxos4bP3v2rKRdSVPbCD1msXe/zMn5ovfOfpat+XOY
JXDGaMHFixfrbKZLly7m6udGnRquX1zntzJu6fvi/TGzGjkTfXv3lto1a1p7
Nn68HD7EPxs3bCT9eveRiPBwajVC8gFcr7CXKlV0s15vyHHDfFxS+nj96pX2
nHK08b0iRzg56Yzd8x4/fixLIiIlMiLC+hj6gvj5+ekMZwuvXr60+9qyLECz
wU/32wf/HPwS+L5tbg/mMFi+D+Dnw/sjtjJkyJD8++UJ+QbA/ti7e48ETwgW
306dpUmDhlLRuYKxkXLXb9aevY5O0rhRY+nRvbuMHTNGFsybp7FIaDDoKeQi
264bN25Iakqqfh8zPAcOGKj+ctvX3Lp5s/YhwfNTU1L0uVgb1q9XXRc8YYL0
6tFT3xfvn9exOXyYB1HR2VXnpXTt3EVmTJumtRaEkPwFuRMxq1d/ch3CN09K
FwsXLFT733IOeLi7y6kTJ1U32QI/7HJzv7DVbDiPVi5fIT7tfDRPbcG8+eI/
cKDqK+RNwg4YPGiQNK7fQP1ysBfgvzt6+IjGOtHrecf2HbLYvGZkZKT6JWCb
T5s8RevKAOI5y6OiZY+554XMmkM/GynWID90x7bt0rNHD2lYt77GEHH9OZcr
rz2sP6fhbJeL0VN+vXrZrR7mNeGr+9zPeXt761wcPN+jinuecdu8dBpmoiAn
r7qHl9GDjaVPLz9Zvny5+gAJIQUH8ho6duhgd03iPmvrEyElG9QRe1ax7w2K
2raXOZ+eA4iZzDeabHFEpPUx5CNvMtqqXu066ic7dfKkajYwfuxYzX2Dj2zh
ggUSNG6c5sZY/GxnEhNl3ty5micDX9uIwBGyaOEiuXv3rurAmDVrJOv+faPV
dsvGDRtU78HPNnjwYPUNElLcgf8NeaGwdX7o118a1KsvNbyqae22czlHa65C
Qa3vvvtOynyYy57bgh8N87kquVYUT/eqUgf5dz16ao5E0unTkvOFcVpCyP/O
f//7H73ubGOkWLjn5nf+Kyl6YA4t7GTb+0LnTp3y7P3y+NFjWRweaafZXr96
LWFzQqRP7965ajbMokEe2vlz52RYQICeVxY/2/Zt22Tm9Omq2QDm2swLm6v+
OGg2+NngYwtfsEjr8VBTdzsjg7FRUmLBbFPEKZdHL1MN16xpU2lQp65U8/A0
tpW7VHZ1k4pOFTSXBdctlsMH/1dZm3+/xF9mu5C/6uZcQSq5uIpHZXep7ump
7+vdqpUM9veXiPAIOWjsO9RGEEIKj7dv38jMadPtrmfkWSxdupQ9FUo4Q432
cbHp1Yf+n4hT5qXXodmWRCy2ajb4vdLS0qRz+w5yOiHhs5oNNQeLFizUeGtw
0AT1sx08cEAChw+Xq1ev6vPnz5sna1avkTt37siK5ctl88ZNGo9dGrlYQo0u
1LpU81xqNlKaQG0AbJ795lqKWrJUpkyarHlq3zdrLs2bNZOG9eprPlm1qh5S
q1p19dFVdHax6rmP9Rq+j5/BzGnL6uPnJzOM/TR//nzZu2ev5jt/bX0pIaTg
ge8i885dad2ypeZTWK5rT3P9o9cCZySUTBDjdHerZLeXz507V57lUTuM+Cby
leEr69e7n2zbulWWRS/TOv4zH2bPQOND6/u0a6dzGaHZ0D8z5fx5WbRwodai
4XHkt6GmDHGVqCVLNI8tbscO7XWAewX6c04ODpYFc+fpDMKkxEStWcM9BfZ+
V9+ucv3a9W/8iRFSNMEeffnSZbWXDsXHS+yWLRI0brzUrllLKn/IU0UOmsWf
vi4mRq9nQkjxBLotI/2m5lFY65WMfsOMhKwHDwr78Eg+cyE1VWp4eNnlHg8a
OFDSb9z4bE9P6DLko8H+xp7/vrbzN7t6T+i2N7+80deBZkN/t2vXrqrvDo9h
4WtLfQOej3oF+NN+ffur3n+wUDOK51j+j17rD8y5iJ99Yp5PW4KQv2duaJja
4ujx0bZVa/Fyr6rarrjPXyCktINrGP4M29w2+NVR2/T40aNi0Z+b/D3Qa7Vr
1ND6tLIf8lga1W+otWz5rYMQ99wdF/e3MfYvPbd4DhLy5WC2QtPGTVWz/ZT2
k17f6Gn9pf3dCCFFmz/++F1mTZ9h3x+ovKMMGDDArrcqKZ5gv+7t19uuD1tl
o9HjDxzM99xF1HUePXxYUs6dp01PyDcG+gy1QZbrPCwk9JPePYSQ4g/qADF/
1HZ2HHTb4shI+eWXXwr78Mg/BHqte7fu4uLobP27Ohr7e25oaIHY3TpX1OhA
2AGEkG+H9ky/dMkuZuJeqbLmLdNXTUjJ497du9K1a1e7maSV3dxkyeIl1G3F
lP59+2oesuXviZhoWEiIPH38mPs4ISUI5Juiz+bH9aLooc7aA0JKHohlpZ4/
L+3bt7ebLVenVm1Zt3Yte7cVM1avWm035wCrd69ecuP69QLJ5Ud/3OTkZP2X
EPLtgG970aJFdj0ALAu5bbS5CSmZ/J1u45ySog/2b+i1WtVq2O3dHXx8dJ4A
+qblN9CA6K/Wr09fjccSQr4N2iM9MVHjoHn10qWvjZCSi6WW1MvD064vBHQb
8tuo24ouL54/l+io6Fz1mqWfWkEBP2ybVq21h0duvjbMKGU8lpD8A7bShQsX
7PRawzp1rXVGtr62h1lZhX24hJACAjbZjm3bpHaNmna6Db3b0Mvh2rVr8gfn
JRQZoIUwFzRgaIDU9Kpup9dqelWTffv25Uv9GN4HfdIwr2DLps06w2D27Nk6
ewc6rZ23t845CF+4SGK3bNXz6P79+7J3717ZuXOnxMXFqbZDz7WzyWd1LsKp
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
vXiNduvYoYP2z3/44EGu9ealBeSHYW+9fv26jB83TmeDfvx5lS/jINWqekq/
3r21/pIQQnIDdjP0Wm7+NQs9unaX9m3bab4b/GvotWPRa2Dq1KniY76PXGVC
SOkBNaNr16yR7xs3EedyjpqH9XF/CuRcQLvdu3PHaJffSk2tAuYHYEYg5myO
GztW+yV9/Pkgvoye5bCF9+3dV+A9PAghxZ/P6bUnj59Io3oNtJa0Tq06qtd+
fv2znT9txPAR4t2yJTUbIaUQ7AX3792TaVOnSc3qNXLVblh1a9WWWdNnyNmz
Z7X/F3LeSppfHnoUvxe0F2YBjgwcoXl+Dh/51RzKlFX/ZP069SRiUYTus4QQ
8r+CeXC1zD7cpEkT2bVrl+q1jwkcOkx9+vt//LEQjpAQUhRQ7Xb/vlW75RYz
tfje2np7y9IlS3SmwuvXr1XnFFf/G+bHYD4zfI6Y7RUZGSlNGjbK9Xcv90Gr
tWj2vcTExMjtW7cK+/AJISUI1B308fPTegPMiM7NLg4cGiBjRo/WOcGEkNKN
RbtFRUVJwzp1P9EttsvNtaL4tG+vc49Q21Dc8t6g1zDTaffOOOnSubPq0c/9
vo2MlluxfIW8eP68sA+dEFICQa7xqZMn86wHRYyjT89eMmniJObOEkLsQI0T
5hk3b9pcfUyf0zOODuW0vgnzVJD/hjnkBdnvEfHLr+3xDz2abWzX0wkJ2o8S
uXp/p9Ow2rVrJ9tiY+XXz+ShEEJIQYN5c+2820hQUBA1GyEkV6Ddzp87J/Pm
zhXPqh65xg0/XqilrIGe3e19tI8ZbEfMrvwnIF6An582Zap4t2otVSu7y7qY
GI3L5gX03KOHD+X0qVOaxztqxEjN24Vv8O+OHatp46bas/LChQvy7t27f/rR
EUJIvoF46SyzL61bu04yMjIK+3AIIUUUaCDMVEDvj51GAwUMGSJeHp6f5Od/
XFdZvqyD9jGr6FxBay/R16xh/QYydNAgmT5tmiyLita8DCzoQsxAxdqxbZt+
v5NPR6lmdKJbBVdxMq+DOQ7wjU2eNEmOHTumPSfPJidL/IEDEhkeIRODg7Vn
ON4Hc14qVnDR3iWO5megI3Orr7AszGUeNMBfYrdulZycHP19i2ueHiGk5IHc
4VtGqz3Myvps/SkhhFjAjE3kWzwy+wZ8WGNGjZLvmzYTF0cnjZFCG+Wq4WyW
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

    "], {{0, 239}, {621, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJyVlnk41F8XwO/MMPZhLNnCIIx9GWSrLEN2E7LvYxnZZyZjqaxZskUqWbKk
CBHJErLUj/JT9iWhokillGjP+530Pv3xvr/nfd7zPPfez73P+d7vOfee554j
7hNm6w8HAFCYoc7Wm2ZAJntH2zFAE8Noqp8PDIIeNqgDbD3e4eHBdNWQUCrZ
9qAhxsnZBcP0BDAAVmhRCSC9iZRwAwLBEvyjbE0B+oZgXJG+1z/r/Vfh8PWj
EAGAYSBOJoaTqRBXQixJo4bT+R7EvGTIKIjn6Byww+t09vnFcIZfOva2RhAL
QIzy2WEsnQN2WIvOkcQAaE+4KQBI7lDfwFAAmN0AQKCIJG9f6CzotiuEhITR
uQBi7I5tvwRlFBYcRsZYGuExeA2Vf1uPAkYgDARDjQwwwBKa4aERDzSAyj9/
9P8J1S+KSh+NwsKjyYEBJCrGADplP4xZKFFJAaOmoqoBAP3OdrS3Jn7fhcGf
tbBCAAyyAWAl/Fnz7wKgbgVycfbPGiYOAHQGAGUI4lFy5O/fw2DDAPyv+c65
/hYEZAAUUPAwhgxkJXMTazF7EsqNSw69xXObL4pfSmBEKHK3gEiTmCFmRMJT
ckHKVXoKayZ7S15OIVfxk7K7SqsaGkdSb9Nk3euoVaH9WldZL3Lfzf0f9dUM
gg2rjOaN+UxMDx43vW72zILb0tDqqHWFzRhh21bBzt4++nChQ6vjuNMrF5gr
t5uku4qHnqexl7W3vY8z0d3X3c/T3z3Ag+QS6HTELogQbB5iEqofphu+N0KV
rESRpUofFYsUovFGcUazxCBivsd+PLZ2fOnE47iR+IGEjsSGpIrk/JMpKUdT
/dPs0g1OKWYIZCIyX2WNZ7fnXDydlOufZ3FGKR+dv3l2+lzH+ZKC+Avehfgi
6WKm4lclgxfrSrPKQsptKpQvcV56V/nwcv2VzKqgavOr2Bqmmue1fXVl147V
uzRoXOe+vtZ4v+nyjbhml5vqLaiW1da+tqJ26i3LDqmO750TXXW3E7tdepR7
GXtn++rvJN11+Evur5/9wwPl9yj3jQb5Bl/8fXPo5AP7h5IP3w93j2SPuo5h
x7bG+yZyJl2nZKY2prtnTj1ymMXMvn7cMhc/b77Au7Dw5OpT8jO9ReTi8FLB
c58X8i82l2+vpL48tCq4uviq9jXljd4aw9rQ2/x3rusS66vv6z9QN3Q2fn68
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
LgCK4+l0R2r1P2rDfwEZQnY7
      "], "RGB", "XYZ"], Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSizeRaw->{621, 239},
  PlotRange->{{0, 621}, {0, 239}}]], "Input",
 CellChangeTimes->{{3.637640588997418*^9, 3.6376405901252537`*^9}, {
  3.637640802122739*^9, 3.637640814651754*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Haploid model of selection", "Subsection",
 CellChangeTimes->{{3.637500839412773*^9, 3.637500843501463*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Assume that the population is ",
 StyleBox["censused immediately after the generation of haploids",
  FontSlant->"Italic"],
 " (gametes)"
}], "Item",
 CellChangeTimes->{{3.637578957915493*^9, 3.6375789777627373`*^9}, {
  3.637579025936404*^9, 3.637579092837973*^9}, {3.637579167300879*^9, 
  3.63757916781752*^9}}],

Cell[TextData[{
 "Denote the # of ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " carriers at time ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["n", "A"], "(", "t", ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["n", "a"], "(", "t", ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", respectively"
}], "Item",
 CellChangeTimes->{{3.637578957915493*^9, 3.6375789777627373`*^9}, {
  3.637579025936404*^9, 3.637579092837973*^9}, {3.637579167300879*^9, 
  3.637579178700306*^9}}],

Cell[TextData[{
 "Assume that there is ",
 StyleBox["no mutation",
  FontSlant->"Italic"]
}], "Item",
 CellChangeTimes->{{3.637578957915493*^9, 3.6375789777627373`*^9}, {
  3.637579025936404*^9, 3.637579092837973*^9}, {3.637579167300879*^9, 
  3.637579178685437*^9}, {3.637579224100691*^9, 3.637579233781946*^9}}],

Cell[TextData[{
 "Each type survives and reproduces according to the exponential growth \
model, with type-specific reproductive factors. The convention is to denote \
these by ",
 Cell[BoxData[
  FormBox["W", TraditionalForm]],
  FormatType->"TraditionalForm"],
 ": ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["W", "A"], "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SubscriptBox["d", "A"]}], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SubscriptBox["b", "A"]}], ")"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["W", "a"], "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SubscriptBox["d", "a"]}], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SubscriptBox["b", "a"]}], ")"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Item",
 CellChangeTimes->{{3.637578957915493*^9, 3.6375789777627373`*^9}, {
  3.637579025936404*^9, 3.637579092837973*^9}, {3.637579167300879*^9, 
  3.637579178685437*^9}, {3.637579224100691*^9, 3.637579380668879*^9}, {
  3.6375794386617947`*^9, 3.6375794561983223`*^9}}],

Cell["Recursion equations in terms of absolute numbers:", "Item",
 CellChangeTimes->{{3.637578957915493*^9, 3.6375789777627373`*^9}, {
  3.637579025936404*^9, 3.637579092837973*^9}, {3.637579167300879*^9, 
  3.637579178685437*^9}, {3.637579224100691*^9, 3.637579380668879*^9}, {
  3.6375794386617947`*^9, 3.637579485391014*^9}}]
}, Open  ]],

Cell[BoxData[
 FormBox[
  RowBox[{"\t", 
   RowBox[{
    RowBox[{
     SubscriptBox["n", "A"], "(", 
     RowBox[{"t", "+", "1"}], ")"}], "=", 
    RowBox[{
     SubscriptBox["W", "A"], 
     RowBox[{
      SubscriptBox["n", "A"], "(", "t", ")"}]}]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.637579634476775*^9, 3.637579653915303*^9}, 
   3.637580244468731*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"\t", 
   RowBox[{
    RowBox[{
     SubscriptBox["n", "a"], "(", 
     RowBox[{"t", "+", "1"}], ")"}], "=", 
    RowBox[{
     SubscriptBox["W", "a"], 
     RowBox[{
      SubscriptBox["n", "a"], "(", "t", ")"}]}]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.637579634476775*^9, 3.6375796656312103`*^9}, 
   3.637580245308546*^9}],

Cell[CellGroupData[{

Cell["Symmetric models", "Subsubsection",
 CellChangeTimes->{{3.6375795075691843`*^9, 3.63757951366299*^9}}],

Cell[TextData[{
 "In a ",
 StyleBox["symmetric model",
  FontWeight->"Bold"],
 ", the ",
 StyleBox["labels of the variables are arbitrary",
  FontSlant->"Italic"],
 "; interchanging the variable and parameter names does not alter the form of \
the equations. The haploid model of selection is a symmetric model."
}], "Text",
 CellChangeTimes->{{3.6375795152783213`*^9, 3.637579577816947*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 "Haploid model ",
 StyleBox["continued",
  FontSlant->"Italic"]
}], "Subsection",
 CellChangeTimes->{{3.637500839412773*^9, 3.637500843501463*^9}, {
  3.637579689590598*^9, 3.637579691981395*^9}}],

Cell[TextData[{
 "To express the dynamics ",
 StyleBox["in terms of allele frequencies",
  FontSlant->"Italic"],
 ", set ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"p", "(", "t", ")"}], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["n", "A"], "(", "t", ")"}], "/", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{
        SubscriptBox["n", "A"], "(", "t", ")"}], "+", 
       RowBox[{
        SubscriptBox["n", "a"], "(", "t", ")"}]}], "]"}]}]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"q", "(", "t", ")"}], "=", 
    RowBox[{
     RowBox[{"1", "-", 
      RowBox[{"p", "(", "t", ")"}]}], "=", 
     RowBox[{
      RowBox[{
       SubscriptBox["n", "a"], "(", "t", ")"}], "/", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{
         SubscriptBox["n", "A"], "(", "t", ")"}], "+", 
        RowBox[{
         SubscriptBox["n", "a"], "(", "t", ")"}]}], "]"}]}]}]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". Note that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"p", "(", "t", ")"}], "+", 
     RowBox[{"q", "(", "t", ")"}]}], "=", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", so that the dynamics can be described in terms of only one variable. \
Substitution yields"
}], "Item",
 CellChangeTimes->{{3.637578957915493*^9, 3.6375789777627373`*^9}, {
  3.637579025936404*^9, 3.637579092837973*^9}, {3.637579167300879*^9, 
  3.63757916781752*^9}, {3.637579701438323*^9, 3.637579893366728*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"\t", 
   RowBox[{
    RowBox[{"p", "(", 
     RowBox[{"t", "+", "1"}], ")"}], "=", 
    RowBox[{
     FractionBox[
      RowBox[{
       SubscriptBox["n", "A"], "(", 
       RowBox[{"t", "+", "1"}], ")"}], 
      RowBox[{
       RowBox[{
        SubscriptBox["n", "A"], "(", 
        RowBox[{"t", "+", "1"}], ")"}], "+", 
       RowBox[{
        SubscriptBox["n", "a"], "(", 
        RowBox[{"t", "+", "1"}], ")"}]}]], "=", 
     RowBox[{
      FractionBox[
       RowBox[{
        SubscriptBox["W", "A"], 
        RowBox[{
         SubscriptBox["n", "A"], "(", "t", ")"}]}], 
       RowBox[{
        RowBox[{
         SubscriptBox["W", "A"], 
         RowBox[{
          SubscriptBox["n", "A"], "(", "t", ")"}]}], "+", 
        RowBox[{
         SubscriptBox["W", "a"], 
         RowBox[{
          SubscriptBox["n", "a"], "(", "t", ")"}]}]}]], "."}]}]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.6375799017201357`*^9, 3.637579993585137*^9}, 
   3.637580030034387*^9, 3.637580242917213*^9}],

Cell[TextData[{
 "To express the right-hand side in terms of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"p", "(", "t", ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", divide the numerator and denominator by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["n", "A"], "(", "t", ")"}], "+", 
    RowBox[{
     SubscriptBox["n", "a"], "(", "t", ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " to obtain"
}], "Item",
 CellChangeTimes->{{3.637578957915493*^9, 3.6375789777627373`*^9}, {
  3.637579025936404*^9, 3.637579092837973*^9}, {3.637579167300879*^9, 
  3.637579178700306*^9}, {3.63758003946798*^9, 3.637580109705351*^9}, {
  3.637580178409794*^9, 3.637580195840095*^9}, {3.637580349196341*^9, 
  3.637580351620111*^9}, {3.637581162628763*^9, 3.6375811969183397`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"\t", 
   RowBox[{
    RowBox[{"p", "(", 
     RowBox[{"t", "+", "1"}], ")"}], "=", 
    RowBox[{
     FractionBox[
      RowBox[{
       SubscriptBox["W", "A"], 
       RowBox[{"p", "(", "t", ")"}]}], 
      RowBox[{
       RowBox[{
        SubscriptBox["W", "A"], 
        RowBox[{"p", "(", "t", ")"}]}], "+", 
       RowBox[{
        SubscriptBox["W", "a"], "(", 
        RowBox[{"1", "-", 
         RowBox[{"p", "(", "t", ")"}]}], ")"}]}]], "."}]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.6375799017201357`*^9, 3.637579993585137*^9}, 
   3.637580030034387*^9, {3.637580204188705*^9, 3.637580247004929*^9}}],

Cell[TextData[{
 "The reproductive factors ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["W", "A"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["W", "a"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " are called ",
 StyleBox["absolute fitnesses",
  FontSlant->"Italic"],
 ". Dividing the numerator and denominator by ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["W", "a"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", we can reduce the number of parameters:"
}], "Item",
 CellChangeTimes->{{3.637578957915493*^9, 3.6375789777627373`*^9}, {
  3.637579025936404*^9, 3.637579092837973*^9}, {3.637579167300879*^9, 
  3.637579178685437*^9}, {3.637579224100691*^9, 3.637579233781946*^9}, {
  3.637580368905952*^9, 3.6375804607899637`*^9}, {3.637581012139839*^9, 
  3.637581012560939*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"\t", 
   RowBox[{
    RowBox[{"p", "(", 
     RowBox[{"t", "+", "1"}], ")"}], "=", 
    RowBox[{
     FractionBox[
      RowBox[{
       SubscriptBox["V", "A"], 
       RowBox[{"p", "(", "t", ")"}]}], 
      RowBox[{
       RowBox[{
        SubscriptBox["V", "A"], 
        RowBox[{"p", "(", "t", ")"}]}], "+", "1", "-", 
       RowBox[{"p", "(", "t", ")"}]}]], "."}]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.6375799017201357`*^9, 3.637579993585137*^9}, 
   3.637580030034387*^9, {3.637580204188705*^9, 3.637580247004929*^9}, {
   3.637580469448653*^9, 3.637580496397542*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["V", "A"], "=", 
    RowBox[{
     SubscriptBox["W", "A"], "/", 
     SubscriptBox["W", "a"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is the ",
 StyleBox["relative fitness",
  FontSlant->"Italic"],
 " of allele ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". We could also divide by ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["W", "A"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", instead."
}], "Item",
 CellChangeTimes->{{3.637578957915493*^9, 3.6375789777627373`*^9}, {
  3.637579025936404*^9, 3.637579092837973*^9}, {3.637579167300879*^9, 
  3.637579178685437*^9}, {3.637579224100691*^9, 3.637579380668879*^9}, {
  3.6375794386617947`*^9, 3.6375794561983223`*^9}, {3.637580507409725*^9, 
  3.63758057085071*^9}, {3.637580622882904*^9, 3.6375806228901777`*^9}, {
  3.6375810332507067`*^9, 3.6375810512681293`*^9}, {3.6375812287664213`*^9, 
  3.637581234022341*^9}}],

Cell[TextData[{
 "The fact that ",
 StyleBox["the dynamics depends only on the relative fitnesses",
  FontWeight->"Bold"],
 " is important. Even if fitnesses depend on time (i.e. on the ecological \
context), the equation above holds, ",
 StyleBox["as long as the ecological context affects both alleles in the same \
way",
  FontSlant->"Italic"],
 "."
}], "Item",
 CellChangeTimes->{{3.637578957915493*^9, 3.6375789777627373`*^9}, {
  3.637579025936404*^9, 3.637579092837973*^9}, {3.637579167300879*^9, 
  3.637579178685437*^9}, {3.637579224100691*^9, 3.637579380668879*^9}, {
  3.6375794386617947`*^9, 3.6375794561983223`*^9}, {3.637580507409725*^9, 
  3.63758057085071*^9}, {3.637580622882904*^9, 3.637580726899435*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 "Haploid model ",
 StyleBox["continued",
  FontSlant->"Italic"]
}], "Subsection",
 CellChangeTimes->{{3.637500839412773*^9, 3.637500843501463*^9}, {
  3.637579689590598*^9, 3.637579691981395*^9}}],

Cell["Difference equation:", "Item",
 CellChangeTimes->{{3.637578957915493*^9, 3.6375789777627373`*^9}, {
  3.637579025936404*^9, 3.637579092837973*^9}, {3.637579167300879*^9, 
  3.63757916781752*^9}, {3.637579701438323*^9, 3.637579893366728*^9}, {
  3.637581294791617*^9, 3.637581297468157*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"\t", 
   RowBox[{
    StyleBox[
     RowBox[{"\[CapitalDelta]", "p"}]], "=", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{
        SubscriptBox["W", "A"], 
        RowBox[{"p", "(", "t", ")"}]}], 
       RowBox[{
        RowBox[{
         SubscriptBox["W", "A"], 
         RowBox[{"p", "(", "t", ")"}]}], "+", 
        RowBox[{
         SubscriptBox["W", "a"], "(", 
         RowBox[{"1", "-", 
          RowBox[{"p", "(", "t", ")"}]}], ")"}]}]], "-", 
      RowBox[{"p", "(", "t", ")"}]}], "=", 
     RowBox[{
      RowBox[{"p", "(", "t", ")"}], 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"p", "(", "t", ")"}]}], ")"}], 
      RowBox[{
       FractionBox[
        RowBox[{
         SubscriptBox["W", "A"], "-", 
         SubscriptBox["W", "a"]}], 
        RowBox[{
         RowBox[{
          SubscriptBox["W", "A"], 
          RowBox[{"p", "(", "t", ")"}]}], "+", 
         RowBox[{
          SubscriptBox["W", "a"], "(", 
          RowBox[{"1", "-", 
           RowBox[{"p", "(", "t", ")"}]}], ")"}]}]], "."}]}]}]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.6375799017201357`*^9, 3.637579993585137*^9}, 
   3.637580030034387*^9, 3.637580242917213*^9, {3.6375813007898607`*^9, 
   3.637581391215794*^9}, {3.637581439276805*^9, 3.63758145558922*^9}, 
   3.637581530571785*^9, {3.637582949920691*^9, 3.637582951952668*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Note that the denominator is equal to the ",
 StyleBox["mean (relative) fitness",
  FontSlant->"Italic"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["W", "_"], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["W", "A"], 
      RowBox[{"p", "(", "t", ")"}]}], "+", 
     RowBox[{
      SubscriptBox["W", "a"], "(", 
      RowBox[{"1", "-", 
       RowBox[{"p", "(", "t", ")"}]}], ")"}]}]}], TraditionalForm]]],
 "."
}], "Item",
 CellChangeTimes->{{3.637578957915493*^9, 3.6375789777627373`*^9}, {
  3.637579025936404*^9, 3.637579092837973*^9}, {3.637579167300879*^9, 
  3.637579178700306*^9}, {3.63758003946798*^9, 3.637580109705351*^9}, {
  3.637580178409794*^9, 3.637580195840095*^9}, {3.637580349196341*^9, 
  3.637580351620111*^9}, {3.637581162628763*^9, 3.6375811969183397`*^9}, {
  3.637582215752741*^9, 3.637582265259794*^9}, {3.637582982273563*^9, 
  3.637583019295602*^9}, {3.637639746704278*^9, 3.637639747027988*^9}}],

Cell[TextData[{
 "Note also that ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"\[CapitalDelta]", "p"}]], TraditionalForm]]],
 " is ",
 StyleBox["proportional to the variance",
  FontSlant->"Italic"],
 " of the allele frequency, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"p", "(", "t", ")"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"p", "(", "t", ")"}]}], ")"}]}], TraditionalForm]]],
 "."
}], "Item",
 CellChangeTimes->{{3.637578957915493*^9, 3.6375789777627373`*^9}, {
  3.637579025936404*^9, 3.637579092837973*^9}, {3.637579167300879*^9, 
  3.637579178700306*^9}, {3.63758003946798*^9, 3.637580109705351*^9}, {
  3.637580178409794*^9, 3.637580195840095*^9}, {3.637580349196341*^9, 
  3.637580351620111*^9}, {3.637581162628763*^9, 3.6375811969183397`*^9}, {
  3.637582215752741*^9, 3.637582265259794*^9}, {3.637582982273563*^9, 
  3.637583019295602*^9}, {3.637639746704278*^9, 3.637639747013541*^9}}],

Cell[TextData[{
 "It is useful to define the ",
 StyleBox["selection coefficient",
  FontWeight->"Bold"],
 " as ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["s", "d"], "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["W", "A"], "-", 
       SubscriptBox["W", "a"]}], ")"}], "/", 
     SubscriptBox["W", "a"]}]}], TraditionalForm]]],
 ", i.e. the ",
 StyleBox["proportional difference in fitnesses",
  FontSlant->"Italic"],
 ". The difference equation becomes"
}], "Item",
 CellChangeTimes->{{3.637578957915493*^9, 3.6375789777627373`*^9}, {
  3.637579025936404*^9, 3.637579092837973*^9}, {3.637579167300879*^9, 
  3.637579178685437*^9}, {3.637579224100691*^9, 3.637579233781946*^9}, {
  3.637580368905952*^9, 3.6375804607899637`*^9}, {3.637581012139839*^9, 
  3.637581012560939*^9}, {3.637582416375534*^9, 3.637582481538762*^9}, {
  3.637582939852871*^9, 3.6375829442323236`*^9}}]
}, Open  ]],

Cell[BoxData[
 FormBox[
  RowBox[{"\t", 
   RowBox[{"\[CapitalDelta]p", "=", 
    RowBox[{
     RowBox[{"p", "(", "t", ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"p", "(", "t", ")"}]}], ")"}], 
     RowBox[{
      FractionBox[
       SubscriptBox["s", "d"], 
       RowBox[{"1", "+", 
        RowBox[{
         SubscriptBox["s", "d"], 
         RowBox[{"p", "(", "t", ")"}]}]}]], "."}]}]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.6375799017201357`*^9, 3.637579993585137*^9}, 
   3.637580030034387*^9, 3.637580242917213*^9, {3.6375813007898607`*^9, 
   3.637581391215794*^9}, {3.637581439276805*^9, 3.63758145558922*^9}, 
   3.637581530571785*^9, {3.637582949920691*^9, 3.6375829630090857`*^9}, {
   3.6375830562674417`*^9, 3.637583084571213*^9}}],

Cell["", "PageBreak",
 PageBreakBelow->True],

Cell[CellGroupData[{

Cell["\<\
Let us derive the differential equation from the difference equation:\
\>", "Subsubsection",
 CellChangeTimes->{{3.637583386487554*^9, 3.637583397319899*^9}, {
  3.637583448405691*^9, 3.63758345402486*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.637583572456452*^9, 3.637583578001585*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"\t", 
   RowBox[{
    FractionBox[
     RowBox[{"\[DifferentialD]", 
      RowBox[{"p", "(", "t", ")"}]}], 
     RowBox[{"\[DifferentialD]", "t"}]], "="}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.6375799017201357`*^9, 3.637579993585137*^9}, 
   3.637580030034387*^9, 3.637580242917213*^9, {3.6375813007898607`*^9, 
   3.637581391215794*^9}, {3.637581439276805*^9, 3.63758145558922*^9}, 
   3.637581530571785*^9, {3.637582949920691*^9, 3.6375829630090857`*^9}, {
   3.6375830562674417`*^9, 3.637583084571213*^9}, {3.637583414483089*^9, 
   3.637583427853874*^9}}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.637586091904509*^9}],

Cell[CellGroupData[{

Cell["What happens if one of the two alleles is absent?\[LineSeparator]\
\[LineSeparator]", "Item",
 CellChangeTimes->{{3.637583541320829*^9, 3.637583548875358*^9}, {
  3.63763978807397*^9, 3.637639789335541*^9}}],

Cell[TextData[{
 "At what frequency ",
 Cell[BoxData[
  FormBox[
   RowBox[{"p", "(", "t", ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is the rate of change maximised?"
}], "Item",
 CellChangeTimes->{{3.637583541320829*^9, 3.6375835488626337`*^9}, {
  3.6375839669772797`*^9, 3.637583991035894*^9}}]
}, Open  ]],

Cell["", "PageBreak",
 PageBreakBelow->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphicsColumn", "[", 
  RowBox[{"{", 
   RowBox[{"plotHaploSelChange", ",", "plotHaploSelMod"}], "}"}], 
  "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.6375855753024263`*^9, {3.637585877517062*^9, 3.637585929391922*^9}, {
   3.637585980044121*^9, 3.637585982264174*^9}, {3.637586034476379*^9, 
   3.6375860442633543`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
         "]]}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
         "\"Rate of change, \
\[DifferentialD]\\!\\(\\*\\nStyleBox[\\\"p\\\",\\nFontSlant->\\\"Italic\\\"]\\\
)/\[DifferentialD]\\!\\(\\*\\nStyleBox[\\\"t\\\",\\nFontSlant->\\\"Italic\\\"]\
\\)\"", TraditionalForm], 
         FormBox["\"\"", TraditionalForm]}, {
         FormBox[
         "\"Frequency of \
\\!\\(\\*\\nStyleBox[\\\"A\\\",\\nFontSlant->\\\"Italic\\\"]\\), \
\\!\\(\\*\\nStyleBox[\\\"p\\\",\\nFontSlant->\\\"Italic\\\"]\\)(\\!\\(\\*\\\
nStyleBox[\\\"t\\\",\\nFontSlant->\\\"Italic\\\"]\\))\"", TraditionalForm], 
         FormBox[
         "\"\\!\\(\\*\\nStyleBox[\\\"s\\\",\\nFontSlant->\\\"Italic\\\"]\\) = \
0.1\"", TraditionalForm]}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{{0.5}, {}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      LabelStyle->Directive[FontFamily -> "Helvetica", FontSize -> 14],
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
      PlotRange->{{0, 1}, {0, 0.026250000000000002`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{Automatic, Automatic}], {189., -155.3312629199899}, 
     ImageScaled[{0.5, 0.5}], {360., 291.2461179749811}], InsetBox[
     TagBox[
      FormBox[
       StyleBox[
        DynamicModuleBox[{$CellContext`p0$$ = 0.212, $CellContext`s$$ = 0.076,
          Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
         Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
         Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
         Typeset`specs$$ = {{{
            Hold[$CellContext`p0$$], 0.01}, 0.0001, 1.}, {{
            Hold[$CellContext`s$$], 0.1}, 0., 1.}}, Typeset`size$$ = {
         184., {62., 63.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
         Typeset`skipInitDone$$ = True, $CellContext`p0$1026$$ = 
         0, $CellContext`s$1027$$ = 0}, 
         DynamicBox[Manipulate`ManipulateBoxes[
          1, TraditionalForm, 
           "Variables" :> {$CellContext`p0$$ = 0.01, $CellContext`s$$ = 0.1}, 
           "ControllerVariables" :> {
             Hold[$CellContext`p0$$, $CellContext`p0$1026$$, 0], 
             Hold[$CellContext`s$$, $CellContext`s$1027$$, 0]}, 
           "OtherVariables" :> {
            Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
             Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
             Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
             Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
           Plot[(1 + ((1 - $CellContext`p0$$)/$CellContext`p0$$) 
               E^((-$CellContext`s$$) $CellContext`t))^(-1), {$CellContext`t, 
              0, 120}, PlotRange -> {Full, {0, 1.05}}, Frame -> True, 
             FrameLabel -> {
              "Time, \!\(\*Cell[TextData[StyleBox[\"t\",\nFontSlant->\"Italic\
\"]]]\)", 
               "Frequency of \!\(\*\nStyleBox[\"A\",\n\
FontSlant->\"Italic\"]\), \!\(\*\nStyleBox[\"p\",\n\
FontSlant->\"Italic\"]\)(\!\(\*\nStyleBox[\"t\",\nFontSlant->\"Italic\"]\))"},
              LabelStyle -> 
             Directive[FontFamily -> "Helvetica", FontSize -> 14]], 
           "Specifications" :> {{{$CellContext`p0$$, 0.01}, 0.0001, 
              1.}, {{$CellContext`s$$, 0.1}, 0., 1.}}, "Options" :> {}, 
           "DefaultOptions" :> {}],
          ImageSizeCache->{219., {105., 109.}},
          SingleEvaluation->True],
         Deinitialization:>None,
         DynamicModuleValues:>{},
         SynchronousInitialization->True,
         UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
         UnsavedVariables:>{Typeset`initDone$$},
         UntrackedVariables:>{Typeset`size$$}], "Manipulate",
        Deployed->True,
        StripOnInput->False],
       TraditionalForm],
      Manipulate`InterpretManipulate[1]], {189., -465.99378875996973`}, {
     Center, Center}, {360., 291.2461179749811}]}, {}},
  ContentSelectable->True,
  ImageSize->{323.4921170536823, Automatic},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{
  3.637585998084207*^9, {3.637586035298497*^9, 3.637586057954216*^9}, 
   3.637586187573666*^9, {3.63763243796943*^9, 3.6376324456920547`*^9}, {
   3.6376399983574963`*^9, 3.63763999972538*^9}, {3.637673862855123*^9, 
   3.6376738732555103`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Diploid model of selection", "Subsection",
 CellChangeTimes->{{3.637632486135401*^9, 3.637632492597088*^9}}],

Cell[TextData[{
 "With two alleles, we must keep track of three genotypes, ",
 Cell[BoxData[
  FormBox[
   StyleBox["AA",
    FontSlant->"Italic"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox[
   StyleBox["Aa",
    FontSlant->"Italic"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", and ",
 Cell[BoxData[
  FormBox[
   StyleBox["aa",
    FontSlant->"Italic"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". We assume that ",
 Cell[BoxData[
  FormBox[
   StyleBox["Aa",
    FontSlant->"Italic"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   StyleBox["aA",
    FontSlant->"Italic"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " are equivalent w.r.t. selection. Instead of repeating the steps undertaken \
for the haploid model, we take ",
 StyleBox["three shortcuts",
  FontWeight->"Bold"],
 " often used in deriving evolutionary models."
}], "Text",
 CellChangeTimes->{{3.637632568375607*^9, 3.637632722859029*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Census the population at the stage that is simplest to describe. In this \
case, this is the gamete stage, when there are only two types, ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", with frequencies ",
 Cell[BoxData[
  FormBox[
   RowBox[{"p", "(", "t", ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"q", "(", "t", ")"}], "=", 
    RowBox[{"1", "-", 
     RowBox[{"p", "(", "t", ")"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". With random mating, ",
 StyleBox["genotype frequencies",
  FontSlant->"Italic"],
 " are easily computed according to the ",
 StyleBox["Hardy\[Dash]Weinberg proportions",
  FontWeight->"Bold"],
 "."
}], "ItemNumbered",
 CellChangeTimes->{{3.637632745912299*^9, 3.637632861402095*^9}, {
  3.637632906163789*^9, 3.637632930102076*^9}, {3.637633032604295*^9, 
  3.637633053157453*^9}}],

Cell[TextData[{
 "Recognise that selection alters genotype frequencies ",
 StyleBox["proportionally to their fitness",
  FontSlant->"Italic"],
 ". This requires ",
 StyleBox["normalisation",
  FontWeight->"Bold"],
 " by the ",
 StyleBox["mean fitness",
  FontSlant->"Italic"],
 ","
}], "ItemNumbered",
 CellChangeTimes->{{3.637632745912299*^9, 3.637632834204956*^9}, {
  3.637633078319475*^9, 3.6376331393547077`*^9}, {3.637633176076552*^9, 
  3.637633176089838*^9}, {3.6376343266351137`*^9, 3.6376343267864113`*^9}}]
}, Open  ]],

Cell[BoxData[
 FormBox[
  RowBox[{"\t", 
   RowBox[{
    OverscriptBox["W", "_"], "=", 
    RowBox[{
     RowBox[{"p", 
      SuperscriptBox[
       RowBox[{"(", "t", ")"}], "2"], 
      SubscriptBox["W", 
       StyleBox["AA",
        FontSlant->"Italic"]]}], "+", 
     RowBox[{"2", "p", 
      RowBox[{"(", "t", ")"}], "q", 
      RowBox[{"(", "t", ")"}], 
      SubscriptBox["W", 
       StyleBox["Aa",
        FontSlant->"Italic"]]}], "+", 
     RowBox[{"q", 
      SuperscriptBox[
       RowBox[{"(", "t", ")"}], "2"], 
      RowBox[{
       SubscriptBox["W", 
        StyleBox["aa",
         FontSlant->"Italic"]], "."}]}]}]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.637634336843905*^9, 3.637634417487817*^9}}],

Cell[TextData[{
 "With ",
 StyleBox["Mendelian segregation",
  FontWeight->"Bold"],
 " during meiosis, the percentage of gametes carrying ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is 100% from ",
 Cell[BoxData[
  FormBox[
   StyleBox["AA",
    FontSlant->"Italic"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " parents, 50% from ",
 Cell[BoxData[
  FormBox[
   StyleBox["Aa",
    FontSlant->"Italic"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " parents, and 0% from ",
 Cell[BoxData[
  FormBox[
   StyleBox["aa",
    FontSlant->"Italic"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " parents."
}], "ItemNumbered",
 CellChangeTimes->{{3.637632745912299*^9, 3.637632834204956*^9}, {
   3.637633078319475*^9, 3.6376331393547077`*^9}, 3.637633176076552*^9, {
   3.6376332259052258`*^9, 3.6376333542644043`*^9}, {3.637633410480793*^9, 
   3.63763341582556*^9}}],

Cell["", "PageBreak",
 PageBreakBelow->True],

Cell["\<\
Let us complement the following table applying these three steps:\
\>", "Text",
 CellChangeTimes->{{3.637633420737362*^9, 3.637633443498296*^9}}],

Cell[CellGroupData[{

Cell[BoxData["diplSelTable"], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.637633521730627*^9, 3.637633524307026*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {"\<\"Gametes\"\>"},
        {"\<\"uniting to\"\>"},
        {"\<\"zygote\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {"\<\"Freqency\"\>"},
        {"\<\"before\"\>"},
        {"\<\"selection\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {"\<\"Frequency\"\>"},
        {"\<\"weighted\"\>"},
        {"\<\"by fitness\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {"\<\"Frequency\"\>"},
        {"\<\"after\"\>"},
        {"\<\"selection\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {"\<\"Gamete proportions\"\>"},
        {"\<\"among offspring\"\>"},
        {"\<\"     \
\\!\\(\\*\\nStyleBox[\\\"A\\\",\\nFontSlant->\\\"Italic\\\"]\\)\\!\\(\\*\\\
nStyleBox[\\\"             \
\\\",\\nFontSlant->\\\"Italic\\\"]\\)\\!\\(\\*\\nStyleBox[\\\"a\\\",\\\
nFontSlant->\\\"Italic\\\"]\\)\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]},
    {
     TagBox[GridBox[{
        {"\<\"\\!\\(\\*\\nStyleBox[\\\"A\\\",\\nFontSlant->\\\"Italic\\\"]\\) \
\\!\\(\\*Cell[\\\"\[Times]\\\"]\\) \
\\!\\(\\*\\nStyleBox[\\\"A\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], ""},
    {
     TagBox[GridBox[{
        {"\<\"\\!\\(\\*\\nStyleBox[\\\"A\\\",\\nFontSlant->\\\"Italic\\\"]\\) \
\\!\\(\\*Cell[\\\"\[Times]\\\"]\\) \
\\!\\(\\*\\nStyleBox[\\\"a\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], ""},
    {
     TagBox[GridBox[{
        {"\<\"\\!\\(\\*\\nStyleBox[\\\"a\\\",\\nFontSlant->\\\"Italic\\\"]\\) \
\\!\\(\\*Cell[\\\"\[Times]\\\"]\\) \
\\!\\(\\*\\nStyleBox[\\\"A\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], ""},
    {
     TagBox[GridBox[{
        {"\<\"\\!\\(\\*\\nStyleBox[\\\"a\\\",\\nFontSlant->\\\"Italic\\\"]\\) \
\\!\\(\\*Cell[\\\"\[Times]\\\"]\\) \
\\!\\(\\*\\nStyleBox[\\\"a\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], ""}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {None, None}, "Rows" -> {
       GrayLevel[0.85], None}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxItemStyle->{"Columns" -> {{"Text"}}, "Rows" -> {{"Text"}}},
   GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{1}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.637633524655789*^9, 3.637633543456265*^9}, {
   3.6376338457881393`*^9, 3.6376338620064707`*^9}, {3.637633920766171*^9, 
   3.637633928417309*^9}, 3.637634016526829*^9, {3.637634052806419*^9, 
   3.637634072908749*^9}, 3.63763412604818*^9, 3.637634582908943*^9, 
   3.637634653240603*^9, 3.637634733002836*^9, {3.6376399988242617`*^9, 
   3.637639999933195*^9}, {3.637673863180735*^9, 3.637673873459943*^9}}]
}, Open  ]],

Cell["\<\
Multiplying the frequency of the adults after selection by the proportion of \
gametes produced, and taking the appropriate sums, we obtain\
\>", "Text",
 CellChangeTimes->{{3.6376341635604563`*^9, 3.6376342527958927`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"\t", 
   RowBox[{
    RowBox[{
     RowBox[{"p", "(", 
      RowBox[{"t", "+", "1"}], ")"}], "=", 
     RowBox[{
      RowBox[{"p", 
       SuperscriptBox[
        RowBox[{"(", "t", ")"}], "2"], 
       FractionBox[
        SubscriptBox["W", 
         StyleBox["AA",
          FontSlant->"Italic"]], 
        OverscriptBox["W", "_"]]}], "+", 
      RowBox[{
       RowBox[{"p", "(", "t", ")"}], 
       RowBox[{"q", "(", "t", ")"}], 
       FractionBox[
        SubscriptBox["W", 
         StyleBox["Aa",
          FontSlant->"Italic"]], 
        OverscriptBox["W", "_"]]}]}]}], ","}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.637634277396201*^9, 3.637634302124753*^9}, {
  3.63763442207193*^9, 3.6376345222549353`*^9}, {3.63763459836189*^9, 
  3.637634600345056*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"\t", 
   RowBox[{
    RowBox[{"q", "(", 
     RowBox[{"t", "+", "1"}], ")"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"p", "(", "t", ")"}], 
      RowBox[{"q", "(", "t", ")"}], 
      FractionBox[
       SubscriptBox["W", 
        StyleBox["Aa",
         FontSlant->"Italic"]], 
       OverscriptBox["W", "_"]]}], "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"q", "(", "t", ")"}], "2"], 
      RowBox[{
       FractionBox[
        SubscriptBox["W", 
         StyleBox["aa",
          FontSlant->"Italic"]], 
        OverscriptBox["W", "_"]], "."}]}]}]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.637634277396201*^9, 3.637634302124753*^9}, {
  3.63763442207193*^9, 3.6376345284031897`*^9}}],

Cell[TextData[{
 "Convince yourself that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"p", "(", 
      RowBox[{"t", "+", "1"}], ")"}], "+", 
     RowBox[{"q", "(", 
      RowBox[{"t", "+", "1"}], ")"}]}], "=", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " holds."
}], "Text",
 CellChangeTimes->{{3.6376345471855593`*^9, 3.637634569154294*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Exercise", "Subsubsection",
 CellChangeTimes->{{3.637635070688855*^9, 3.637635072486596*^9}}],

Cell[TextData[{
 "(a) Show that the mean fitness ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["W", "_"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " cen be written in terms of the composite or ",
 StyleBox["marginal fitnesses",
  FontWeight->"Bold"],
 " "
}], "Text",
 CellChangeTimes->{{3.637636492834903*^9, 3.637636555918852*^9}, {
   3.637636677786077*^9, 3.637636682281994*^9}, 3.637636933433344*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["W", 
     SuperscriptBox["A", "*"]], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"p", "(", "t", ")"}], 
      SubscriptBox["W", 
       StyleBox["AA",
        FontSlant->"Italic"]]}], "+", 
     RowBox[{
      RowBox[{"q", "(", "t", ")"}], 
      SubscriptBox["W", 
       StyleBox["Aa",
        FontSlant->"Italic"]]}]}]}], ","}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.637636575939732*^9, 3.637636629405182*^9}, 
   3.6376369221414022`*^9}],

Cell["and", "Text",
 CellChangeTimes->{{3.6376366404976807`*^9, 3.637636640721286*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["W", 
    SuperscriptBox["a", "*"]], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"p", "(", "t", ")"}], 
     SubscriptBox["W", 
      StyleBox["Aa",
       FontSlant->"Italic"]]}], "+", 
    RowBox[{
     RowBox[{"q", "(", "t", ")"}], 
     RowBox[{
      SubscriptBox["W", 
       StyleBox["aa",
        FontSlant->"Italic"]], "."}]}]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.637636575939732*^9, 3.637636672915204*^9}}],

Cell[TextData[{
 "(b) Show that the diploid recursion equations (17) and (18) can be written \
in a form ",
 StyleBox["equivalent to the haploid recursion equation",
  FontSlant->"Italic"],
 " with ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["W", 
    SuperscriptBox["A", "*"]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["W", 
    SuperscriptBox["a", "*"]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " taking the places of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["W", "A"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["W", "a"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", respectively."
}], "Text",
 CellChangeTimes->{{3.6376366746658707`*^9, 3.637636773042439*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["The Lotka\[Dash]Volterra model of competition", "Section",
 CellChangeTimes->{{3.6376369698623447`*^9, 3.637636989876614*^9}}],

Cell[TextData[{
 "The ",
 Cell[BoxData[
  FormBox["Lotka", TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\[Dash]Volterra model extends the logistic model by allowing multiple \
species to ",
 StyleBox["compete for resources",
  FontWeight->"Bold"],
 ", resulting in both intra- and interspecific competition."
}], "Text",
 CellChangeTimes->{{3.637637015133202*^9, 3.637637019870878*^9}, {
  3.6376372499051647`*^9, 3.6376372996147623`*^9}}],

Cell[TextData[{
 "Assume two species whose numbers are ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["n", "1"], "(", "t", ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["n", "2"], "(", "t", ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", and who have their specific intrinsic growth rate ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["r", "i"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and carrying capacity ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["K", "i"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.637637357359673*^9, 3.637637444244384*^9}}],

Cell[TextData[{
 "The key is to assume that each individual of species ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " experiences competition as if its own species had a population size of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["n", "i"], "(", "t", ")"}], "+", 
    RowBox[{
     SubscriptBox["\[Alpha]", 
      RowBox[{"i", ",", "j"}]], 
     RowBox[{
      SubscriptBox["n", "j"], "(", "t", ")"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\nThe parameter ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Alpha]", 
    RowBox[{"i", ",", "j"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is the ",
 StyleBox["competition coefficient",
  FontWeight->"Bold"],
 ", which converts the strength of competition caused by an individual of \
species ",
 Cell[BoxData[
  FormBox["j", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " on an individual of species ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " into the equivalent amount of intraspecific competition in species ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". Assuming a linear effect of competition, we have"
}], "Text",
 CellChangeTimes->{{3.637637469518672*^9, 3.637637695989694*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["R", "i"], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SubscriptBox["r", "i"]}], ")"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"-", 
       FractionBox[
        SubscriptBox["r", "i"], 
        SubscriptBox["K", "i"]]}], ")"}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubscriptBox["n", "i"], 
         RowBox[{"(", "t", ")"}]}], "+", 
        RowBox[{
         SubscriptBox["\[Alpha]", 
          RowBox[{"i", ",", "j"}]], 
         SubscriptBox["n", "j"], 
         RowBox[{"(", "t", ")"}]}]}], ")"}], "."}]}]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.637637769697998*^9, 3.637637820175748*^9}, 
   3.637637908479477*^9}],

Cell["", "PageBreak",
 PageBreakBelow->True],

Cell[TextData[{
 "Plugging this into the ",
 StyleBox["recursion equation",
  FontSlant->"Italic"],
 " for the logistic model, we obtain"
}], "Text",
 CellChangeTimes->{{3.637638286824552*^9, 3.637638313246334*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["n", "i"], 
     RowBox[{"(", 
      RowBox[{"t", "+", "1"}], ")"}]}], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["n", "i"], "(", "t", ")"}], "+", 
     RowBox[{
      SubscriptBox["r", "i"], 
      RowBox[{
       SubscriptBox["n", "i"], "(", "t", ")"}], 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        FractionBox[
         RowBox[{
          RowBox[{
           SubscriptBox["n", "i"], 
           RowBox[{"(", "t", ")"}]}], "+", 
          RowBox[{
           SubscriptBox["\[Alpha]", 
            RowBox[{"i", ",", "j"}]], 
           RowBox[{
            SubscriptBox["n", "j"], "(", "t", ")"}]}]}], 
         SubscriptBox["K", "i"]]}], ")"}], "  ", "for", " ", "i"}]}]}], ",", 
   RowBox[{"j", " ", "\[Element]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], "."}]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.6376383245040293`*^9, 3.637638409284247*^9}}],

Cell[TextData[{
 "The corresponding continuous-time ",
 StyleBox["differential equations",
  FontSlant->"Italic"],
 " are"
}], "Text",
 CellChangeTimes->{{3.637638448827691*^9, 3.637638471930471*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"\[DifferentialD]", 
      SubscriptBox["n", "i"]}], 
     RowBox[{"\[DifferentialD]", "t"}]], 
    RowBox[{"=", 
     RowBox[{
      SubscriptBox["r", "i"], 
      RowBox[{
       SubscriptBox["n", "i"], "(", "t", ")"}], 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        FractionBox[
         RowBox[{
          RowBox[{
           SubscriptBox["n", "i"], 
           RowBox[{"(", "t", ")"}]}], "+", 
          RowBox[{
           SubscriptBox["\[Alpha]", 
            RowBox[{"i", ",", "j"}]], 
           RowBox[{
            SubscriptBox["n", "j"], "(", "t", ")"}]}]}], 
         SubscriptBox["K", "i"]]}], ")"}], "  ", "for", " ", "i"}]}]}], ",", 
   RowBox[{"j", " ", "\[Element]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], "."}]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.6376383245040293`*^9, 3.637638409284247*^9}, {
  3.637638481494666*^9, 3.637638500031355*^9}}],

Cell["", "PageBreak",
 PageBreakBelow->True],

Cell[TextData[{
 StyleBox["Remark:",
  FontWeight->"Bold"],
 " We have interpreted the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Alpha]", 
    RowBox[{"i", ",", "j"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " as a competition coefficients, but in fact they can be used to model \
species interactions more generally. The signs of the coefficients reflect \
the type of relationship:"
}], "Text",
 CellChangeTimes->{{3.637638537075979*^9, 3.6376386361419897`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["specRelTable"], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.637638811402376*^9, 3.637638813755267*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {"\<\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \\(1, 2\\)]\\)\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Center}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {"\<\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \\(2, 1\\)]\\)\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Center}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {"\<\"Relationship\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Center}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]},
    {
     TagBox[GridBox[{
        {"\<\"-\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Center}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {"\<\"-\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Center}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {"\<\"Mutualistic (both profit)\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Center}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]},
    {
     TagBox[GridBox[{
        {"\<\"-\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Center}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {"\<\"0\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Center}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {"\<\"Commensal (species 1 profits)\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Center}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]},
    {
     TagBox[GridBox[{
        {"\<\"0\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Center}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {"\<\"-\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Center}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {"\<\"Commensal (species 2 profits)\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Center}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]},
    {
     TagBox[GridBox[{
        {"\<\"+\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Center}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {"\<\"-\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Center}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {"\<\"Parasitic (species 1 is host)\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Center}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]},
    {
     TagBox[GridBox[{
        {"\<\"-\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Center}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {"\<\"+\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Center}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {"\<\"Parasitic (species 2 is host)\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Center}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]},
    {
     TagBox[GridBox[{
        {"\<\"+\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Center}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {"\<\"+\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Center}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {"\<\"Competitive (both suffer)\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Center}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {None, None}, "Rows" -> {
       GrayLevel[0.85], None}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxItemStyle->{"Columns" -> {{"Text"}}, "Rows" -> {{"Text"}}},
   GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{1}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.6376388140907717`*^9, 3.637639011866061*^9, 3.637639050598881*^9, 
   3.6376390976410437`*^9, {3.637639998969679*^9, 3.637640000075379*^9}, {
   3.637673863313752*^9, 3.6376738735390368`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Problem assignment", "Section",
 CellChangeTimes->{{3.636720406569543*^9, 3.636720407950808*^9}, {
  3.636721563081469*^9, 3.636721565420895*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "We constructed the ",
 StyleBox["differential",
  FontSlant->"Italic"],
 " equation for the continuous-time version of the exponential growth model \
from the flow diagram. (a) Instead, derive the equation from the ",
 StyleBox["difference",
  FontSlant->"Italic"],
 " equation of the discrete-time version. Hint: introduce a small amount of \
time ",
 Cell[BoxData[
  FormBox["\[CapitalDelta]t", TraditionalForm]]],
 " and take the appropriate limit. (b) Comparing ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["r", "d"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["r", "c"], TraditionalForm]]],
 ", explain the difference between the discrete- and continuous-time versions."
}], "ItemNumbered",
 CellChangeTimes->{{3.636720427558174*^9, 3.636720607402008*^9}, {
  3.636720743656756*^9, 3.6367207439451227`*^9}, {3.6374089410243177`*^9, 
  3.637409076125111*^9}, {3.637409106382325*^9, 3.6374091405835733`*^9}, {
  3.637409436545826*^9, 3.637409451753961*^9}, {3.6374094937569523`*^9, 
  3.637409560521297*^9}}],

Cell[TextData[{
 "Derive the differential equation for the logistic growth model in \
continuous time. Start by assuming that the per capita growth rate ",
 Cell[BoxData[
  FormBox[
   RowBox[{"r", "(", "n", ")"}], TraditionalForm]]],
 " declines linearly with population size ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "(", "t", ")"}], TraditionalForm]]],
 ". Assume that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"r", "(", "n", ")"}], TraditionalForm]]],
 " has a maximum equal to the intrinsic growth rate ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["r", "c"], TraditionalForm]]],
 " when there are no competitors (i.e. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"r", "(", "0", ")"}], "=", 
    SubscriptBox["r", "c"]}], TraditionalForm]]],
 "), and that it reaches zero when the population is at the carrying capacity \
(i.e. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"r", "(", "K", ")"}], "=", "0"}], TraditionalForm]]],
 "). Substitute ",
 Cell[BoxData[
  FormBox[
   RowBox[{"r", "(", "n", ")"}], TraditionalForm]]],
 " for ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["r", "c"], TraditionalForm]]],
 " in the differential equation of the exponential growth model to obtain the \
result of interest."
}], "ItemNumbered",
 CellChangeTimes->{{3.636720427558174*^9, 3.6367205726034517`*^9}, {
   3.63672086570037*^9, 3.63672089041302*^9}, {3.636720931805558*^9, 
   3.636720973795392*^9}, {3.636721246277096*^9, 3.636721346547727*^9}, 
   3.6369759513709993`*^9, {3.6374623741539497`*^9, 3.637462779212734*^9}, {
   3.637501611716858*^9, 3.637501611735515*^9}}]
}, Open  ]],

Cell["", "PageBreak",
 PageBreakBelow->True],

Cell[TextData[{
 StyleBox["As an alternative way of deriving the continuous-time version of \
the haploid selection model, start from the continous-time version of the \
exponential growth model. Specifically, let",
  FontColor->GrayLevel[0]],
 StyleBox[" ",
  FontColor->RGBColor[1, 0, 0]],
 Cell[BoxData[
  FormBox[
   SubscriptBox["n", "A"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["n", "a"], TraditionalForm]]],
 " be the number of individuals carrying alleles ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]]],
 ", respectively, and let the growth rate depend on the allelic state, i.e. \
",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["r", "A"], "=", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["b", "A"], "-", 
      SubscriptBox["d", "A"]}], ")"}]}], TraditionalForm]]],
 " for carriers of ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]]],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["r", "a"], "=", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["b", "a"], "-", 
      SubscriptBox["d", "a"]}], ")"}]}], TraditionalForm]]],
 " for carriers of ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]]],
 ". From the exponential growth model, we have ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[DifferentialD]", 
      SubscriptBox["n", "A"]}], 
     RowBox[{"\[DifferentialD]", "t"}]], 
    RowBox[{"=", 
     RowBox[{
      SubscriptBox["r", "A"], 
      RowBox[{
       SubscriptBox["n", "A"], "(", "t", ")"}]}]}]}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[DifferentialD]", 
      SubscriptBox["n", "a"]}], 
     RowBox[{"\[DifferentialD]", "t"}]], 
    RowBox[{"=", 
     RowBox[{
      SubscriptBox["r", "a"], 
      RowBox[{
       SubscriptBox["n", "a"], "(", "t", ")"}]}]}]}], TraditionalForm]]],
 ". But we want to know how the ",
 StyleBox["allele frequencies",
  FontSlant->"Italic"],
 " change! As these sum to 1, it is sufficient to follow only the frequency \
of allele ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"p", "(", "t", ")"}], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["n", "A"], "(", "t", ")"}], "/", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{
        SubscriptBox["n", "A"], "(", "t", ")"}], "+", 
       RowBox[{
        SubscriptBox["n", "a"], "(", "t", ")"}]}], "]"}]}]}], 
   TraditionalForm]]],
 " . Start by writing"
}], "ItemNumbered",
 CellChangeTimes->{{3.636720427558174*^9, 3.6367205726034517`*^9}, {
  3.63672086570037*^9, 3.636720893333023*^9}, {3.636721378701989*^9, 
  3.636721507083699*^9}, {3.6374994079096403`*^9, 3.637499684415012*^9}, {
  3.6374997181853733`*^9, 3.6374999625431757`*^9}, {3.637500035381349*^9, 
  3.637500039413226*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"\t\t\t\t\t", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"\[DifferentialD]", 
       RowBox[{"p", "(", "t", ")"}]}], 
      RowBox[{"\[DifferentialD]", "t"}]], "=", 
     FractionBox[
      RowBox[{"\[DifferentialD]", 
       RowBox[{"[", 
        FractionBox[
         RowBox[{
          SubscriptBox["n", "A"], "(", "t", ")"}], 
         RowBox[{
          RowBox[{
           SubscriptBox["n", "A"], "(", "t", ")"}], "+", 
          RowBox[{
           SubscriptBox["n", "a"], "(", "t", ")"}]}]], "]"}]}], 
      RowBox[{"\[DifferentialD]", "t"}]]}], ","}]}], 
  TraditionalForm]], "DisplayFormula",
 CellChangeTimes->{{3.637500062728948*^9, 3.637500154972014*^9}}],

Cell[TextData[{
 "then use the quotient rule to evaluate the derivative, and use the \
equations for ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"\[DifferentialD]", 
     SubscriptBox["n", "A"]}], 
    RowBox[{"\[DifferentialD]", "t"}]], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"\[DifferentialD]", 
     SubscriptBox["n", "a"]}], 
    RowBox[{"\[DifferentialD]", "t"}]], TraditionalForm]]],
 " to express ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"\[DifferentialD]", "p"}], 
    RowBox[{"\[DifferentialD]", "t"}]], TraditionalForm]]],
 " in terms of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["r", "A"], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["r", "a"], TraditionalForm]]],
 ", and ",
 Cell[BoxData[
  FormBox["p", TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.637500174168522*^9, 3.637500300440439*^9}, {
  3.6375003347077627`*^9, 3.637500340212616*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Initialisation cells", "Section",
 CellChangeTimes->{{3.636288229511508*^9, 3.636288232109663*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"logGrowthReproFactor", "[", 
   RowBox[{"n_", ",", "rd_", ",", "K_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "+", "rd"}], ")"}], "-", 
   RowBox[{
    FractionBox["rd", "K"], "n"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.6362882362165117`*^9, {3.63741065507439*^9, 3.637410722878352*^9}}],

Cell[BoxData[
 RowBox[{"logGrowthReproFactorPlot", ":=", 
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"logGrowthReproFactor", "[", 
       RowBox[{"n", ",", "rd", ",", "K"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "0", ",", 
        RowBox[{"2", "K"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"2", "K"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"1.05", 
            RowBox[{"(", 
             RowBox[{"1", "+", "rd"}], ")"}]}]}], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<Reproductive factor, \!\(\*
StyleBox[\"R\",
FontSlant->\"Italic\"]\)(\!\(\*
StyleBox[\"n\",
FontSlant->\"Italic\"]\))\>\"", ",", "\"\<\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Population size, \!\(\*
StyleBox[\"n\",
FontSlant->\"Italic\"]\)(\!\(\*
StyleBox[\"t\",
FontSlant->\"Italic\"]\))\>\"", ",", 
           RowBox[{"\"\<\!\(\*
StyleBox[\"K\",
FontSlant->\"Italic\"]\) = \>\"", "<>", 
            RowBox[{"ToString", "[", " ", 
             RowBox[{"Round", "[", "K", "]"}], "]"}], "<>", 
            "\"\<; \!\(\*SubscriptBox[
StyleBox[\"r\",
FontSlant->\"Italic\"], 
StyleBox[\"d\",
FontSlant->\"Italic\"]]\) = \>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"Round", "[", 
              RowBox[{"rd", ",", "0.01"}], "]"}], "]"}]}]}], "}"}]}], "}"}]}],
       ",", "\[IndentingNewLine]", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", " ", 
         RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"GridLines", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "K", "}"}], ",", 
         RowBox[{"{", "1", "}"}]}], "}"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"rd", ",", "1"}], "}"}], ",", "0", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"K", ",", "100"}], "}"}], ",", "10", ",", "200"}], "}"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.637410745888214*^9, 3.6374108462762337`*^9}, {
  3.637460589355794*^9, 3.637460757712675*^9}, {3.6374608404087*^9, 
  3.637460929594366*^9}, {3.637460971088866*^9, 3.6374610115395107`*^9}, {
  3.637461121432925*^9, 3.637461326615138*^9}, {3.637461366625155*^9, 
  3.637461477326951*^9}, {3.637461509440606*^9, 3.63746162022066*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "n", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"n", "[", 
    RowBox[{"0", ",", "KK_", ",", "r_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"n", "[", 
     RowBox[{"0", ",", "KK", ",", "r"}], "]"}], "=", "1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "[", 
   RowBox[{"t_", ",", "KK_", ",", "r_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"n", "[", 
    RowBox[{"t", ",", "KK", ",", "r"}], "]"}], "=", 
   RowBox[{"N", "[", 
    RowBox[{
     RowBox[{"n", "[", 
      RowBox[{
       RowBox[{"t", "-", "1"}], ",", "KK", ",", "r"}], "]"}], "+", 
     RowBox[{"r", " ", 
      RowBox[{"n", "[", 
       RowBox[{
        RowBox[{"t", "-", "1"}], ",", "KK", ",", "r"}], "]"}], 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{
         RowBox[{"n", "[", 
          RowBox[{
           RowBox[{"t", "-", "1"}], ",", "KK", ",", "r"}], "]"}], "/", 
         "KK"}]}], ")"}]}]}], "]"}]}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.637495104011011*^9, 3.6374951970841417`*^9}, {
   3.6374952636435747`*^9, 3.637495264931182*^9}, {3.637495440490061*^9, 
   3.637495528501821*^9}, {3.637495613553534*^9, 3.637495625567286*^9}, {
   3.637495720781389*^9, 3.637495820918499*^9}, {3.637495870507607*^9, 
   3.6374958957485933`*^9}, 3.637495973889987*^9, {3.637496189218082*^9, 
   3.637496194592647*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotDataListLogGrowth", "[", 
   RowBox[{"KK_", ",", "r_", ",", "tMax_"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"n", "[", 
      RowBox[{"t", ",", "KK", ",", "r"}], "]"}], "//", "N"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "1", ",", "tMax"}], "}"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6374960668361473`*^9, 3.63749614722093*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotLogGrowth", "[", 
   RowBox[{"KList_", ",", "rList_", ",", "tMaxList_", ",", "styleList_"}], 
   "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{"MapThread", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"plotDataListLogGrowth", "[", 
        RowBox[{"#1", ",", "#2", ",", "#3"}], "]"}], "&"}], ",", 
      RowBox[{"{", 
       RowBox[{"KList", ",", "rList", ",", "tMaxList"}], "}"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Time\>\"", ",", "\"\<Population size\>\""}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", 
       RowBox[{"FontSize", "\[Rule]", "14"}]}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "\[Rule]", "styleList"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.637496675735793*^9, 3.637496726769393*^9}, {
  3.6374967831111803`*^9, 3.637496841170271*^9}, {3.637496881391077*^9, 
  3.637496910667961*^9}, {3.637496963152856*^9, 3.637496967722193*^9}}],

Cell[BoxData[
 RowBox[{"plotHaploSelMod", ":=", 
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot", "[", "\[IndentingNewLine]", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          FractionBox[
           RowBox[{"1", "-", "p0"}], "p0"], 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "s"}], " ", "t"}]]}]}], ")"}], 
       RowBox[{"-", "1"}]], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "120"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Full", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1.05"}], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<Time, \!\(\*Cell[TextData[StyleBox[\"t\",
FontSlant->\"Italic\"]]]\)\>\"", ",", "\"\<Frequency of \!\(\*
StyleBox[\"A\",
FontSlant->\"Italic\"]\), \!\(\*
StyleBox[\"p\",
FontSlant->\"Italic\"]\)(\!\(\*
StyleBox[\"t\",
FontSlant->\"Italic\"]\))\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", " ", 
         RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"p0", ",", "0.01"}], "}"}], ",", "0.0001", ",", "1.0"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"s", ",", "0.1"}], "}"}], ",", "0.", ",", "1."}], "}"}]}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.637584498328936*^9, 3.637584702421434*^9}, {
   3.6375848920653553`*^9, 3.637584912536875*^9}, {3.637585008093171*^9, 
   3.637585041432805*^9}, 3.637585084182775*^9, 3.63758513063231*^9, {
   3.6375851884539003`*^9, 3.637585221498054*^9}, {3.637585392122225*^9, 
   3.637585471861723*^9}, {3.637585513126178*^9, 3.637585568742504*^9}}],

Cell[BoxData[
 RowBox[{"plotHaploSelChange", ":=", 
  RowBox[{"Plot", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"p", 
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}], "s"}], "/.", 
     RowBox[{"{", 
      RowBox[{"s", "\[Rule]", "0.1"}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"p", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Full", ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"1.05", "*", 
           RowBox[{"1", "/", "4"}], " ", "s"}]}], "}"}], "/.", 
        RowBox[{"{", 
         RowBox[{"s", "\[Rule]", "0.1"}], "}"}]}]}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Rate of change, \[DifferentialD]\!\(\*
StyleBox[\"p\",
FontSlant->\"Italic\"]\)/\[DifferentialD]\!\(\*
StyleBox[\"t\",
FontSlant->\"Italic\"]\)\>\"", ",", "\"\<\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Frequency of \!\(\*
StyleBox[\"A\",
FontSlant->\"Italic\"]\), \!\(\*
StyleBox[\"p\",
FontSlant->\"Italic\"]\)(\!\(\*
StyleBox[\"t\",
FontSlant->\"Italic\"]\))\>\"", ",", "\"\<\!\(\*
StyleBox[\"s\",
FontSlant->\"Italic\"]\) = 0.1\>\""}], "}"}]}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", " ", 
       RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "0.5", "}"}], ",", 
       RowBox[{"{", "}"}]}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.637584498328936*^9, 3.637584702421434*^9}, {
   3.6375848920653553`*^9, 3.637584912536875*^9}, {3.637585008093171*^9, 
   3.637585041432805*^9}, 3.637585084182775*^9, 3.63758513063231*^9, {
   3.6375851884539003`*^9, 3.637585221498054*^9}, {3.637585392122225*^9, 
   3.637585471861723*^9}, {3.637585513126178*^9, 3.637585568742504*^9}, {
   3.637585613453608*^9, 3.637585731632102*^9}, {3.637585761720105*^9, 
   3.637585845149206*^9}, {3.637586123207958*^9, 3.637586178289453*^9}}],

Cell[BoxData[
 RowBox[{"diplSelTableData", ":=", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<Gametes\>\"", ",", "\"\<uniting to\>\"", ",", " ", 
          "\"\<zygote\>\""}], "}"}], ",", " ", "Left"}], "]"}], ",", " ", 
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<Freqency\>\"", ",", "\"\<before\>\"", ",", 
          "\"\<selection\>\""}], "}"}], ",", "Left"}], "]"}], ",", " ", 
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<Frequency\>\"", ",", "\"\<weighted\>\"", ",", " ", 
          "\"\<by fitness\>\""}], "}"}], ",", "Left"}], "]"}], ",", " ", 
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<Frequency\>\"", ",", "\"\<after\>\"", ",", " ", 
          "\"\<selection\>\""}], "}"}], ",", "Left"}], "]"}], ",", 
      RowBox[{"Column", "[", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Gamete proportions\>\"", ",", "\"\<among offspring\>\"", ",", 
         "\"\<     \!\(\*
StyleBox[\"A\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"             \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"a\",
FontSlant->\"Italic\"]\)\>\""}], "}"}], "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{"{", "\"\<\!\(\*
StyleBox[\"A\",
FontSlant->\"Italic\"]\) \!\(\*Cell[\"\[Times]\"]\) \!\(\*
StyleBox[\"A\",
FontSlant->\"Italic\"]\)\>\"", "}"}], ",", "Left"}], "]"}], ",", 
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{"{", "\"\<\>\"", "}"}], ",", "Left"}], "]"}], ",", 
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{"{", "\"\<\>\"", "}"}], ",", "Left"}], "]"}], ",", 
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{"{", "\"\<\>\"", "}"}], ",", "Left"}], "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{"{", "\"\<\!\(\*
StyleBox[\"A\",
FontSlant->\"Italic\"]\) \!\(\*Cell[\"\[Times]\"]\) \!\(\*
StyleBox[\"a\",
FontSlant->\"Italic\"]\)\>\"", "}"}], ",", "Left"}], "]"}], ",", 
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{"{", "\"\<\>\"", "}"}], ",", "Left"}], "]"}], ",", 
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{"{", "\"\<\>\"", "}"}], ",", "Left"}], "]"}], ",", 
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{"{", "\"\<\>\"", "}"}], ",", "Left"}], "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{"{", "\"\<\!\(\*
StyleBox[\"a\",
FontSlant->\"Italic\"]\) \!\(\*Cell[\"\[Times]\"]\) \!\(\*
StyleBox[\"A\",
FontSlant->\"Italic\"]\)\>\"", "}"}], ",", "Left"}], "]"}], ",", 
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{"{", "\"\<\>\"", "}"}], ",", "Left"}], "]"}], ",", 
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{"{", "\"\<\>\"", "}"}], ",", "Left"}], "]"}], ",", 
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{"{", "\"\<\>\"", "}"}], ",", "Left"}], "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{"{", "\"\<\!\(\*
StyleBox[\"a\",
FontSlant->\"Italic\"]\) \!\(\*Cell[\"\[Times]\"]\) \!\(\*
StyleBox[\"a\",
FontSlant->\"Italic\"]\)\>\"", "}"}], ",", "Left"}], "]"}], ",", 
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{"{", "\"\<\>\"", "}"}], ",", "Left"}], "]"}], ",", 
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{"{", "\"\<\>\"", "}"}], ",", "Left"}], "]"}], ",", 
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{"{", "\"\<\>\"", "}"}], ",", "Left"}], "]"}]}], "}"}]}], 
   "\[IndentingNewLine]", "}"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQBGIQfdYnXJFB4rXjJmklZxDdUPrVA0RX3VEMAtHcPT9i
QfS542YpIPrY/xN5ILplsmgFiI4SPFYLohMqRZtB9DwzxX4Q3bTl/VQQPZv/
wiIQXcZ/aDFY3f6NK0H04Y/LV4HtW8G9HUTfWRV4EESrOxSdBNHKPr1gWmVX
0gUQvc/rDZj+Eit4DUSv9pUD02/OZIozAune5fyaIPpaiZcuiM4zzTIC0cLa
Ji4gusbUF0zrVne51gLpX/V7IkF01u76NBCtwCbeBKKPeu5uB9FxSQ8mgejL
9nrWNlJAe9sSwHTdU2s3EH03uyYDRL+6vSkPRJc92FwAol+s/1gCFv9zsBpE
Z8Q6NoDoPU+fNIFo3/TcUyC6320HmF6iU3cZRO/y+nQFRAMACS6tYw==
  "]],

Cell[BoxData[
 RowBox[{
  RowBox[{"diplSelTable", "=", 
   RowBox[{"Grid", "[", 
    RowBox[{"diplSelTableData", ",", 
     RowBox[{"Spacings", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}]}], ",", 
     RowBox[{"ItemStyle", "\[Rule]", "\"\<Text\>\""}], ",", 
     RowBox[{"Alignment", "\[Rule]", "Left"}], ",", 
     RowBox[{"Frame", "\[Rule]", "All"}], ",", 
     RowBox[{"Background", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"None", ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"LightGray", ",", "None"}], "}"}]}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.636718291462776*^9, 3.636718316463272*^9}, {
  3.636718693408237*^9, 3.636718696338655*^9}, {3.6376335029909067`*^9, 
  3.637633541067337*^9}, {3.637638662847144*^9, 3.637638668099237*^9}}],

Cell[BoxData[
 RowBox[{"specRelTableData", ":=", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{
        "{", "\"\<\!\(\*SubscriptBox[\(\[Alpha]\), \(1, 2\)]\)\>\"", "}"}], 
        ",", " ", "Center"}], "]"}], ",", " ", 
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{
        "{", "\"\<\!\(\*SubscriptBox[\(\[Alpha]\), \(2, 1\)]\)\>\"", "}"}], 
        ",", "Center"}], "]"}], ",", " ", 
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{"{", "\"\<Relationship\>\"", "}"}], ",", "Center"}], "]"}]}], 
     "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{"{", "\"\<-\>\"", "}"}], ",", " ", "Center"}], "]"}], ",", 
      " ", 
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{"{", "\"\<-\>\"", "}"}], ",", "Center"}], "]"}], ",", " ", 
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{"{", "\"\<Mutualistic (both profit)\>\"", "}"}], ",", 
        "Center"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{"{", "\"\<-\>\"", "}"}], ",", " ", "Center"}], "]"}], ",", 
      " ", 
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{"{", "\"\<0\>\"", "}"}], ",", "Center"}], "]"}], ",", " ", 
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{"{", "\"\<Commensal (species 1 profits)\>\"", "}"}], ",", 
        "Center"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{"{", "\"\<0\>\"", "}"}], ",", " ", "Center"}], "]"}], ",", 
      " ", 
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{"{", "\"\<-\>\"", "}"}], ",", "Center"}], "]"}], ",", " ", 
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{"{", "\"\<Commensal (species 2 profits)\>\"", "}"}], ",", 
        "Center"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{"{", "\"\<+\>\"", "}"}], ",", " ", "Center"}], "]"}], ",", 
      " ", 
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{"{", "\"\<-\>\"", "}"}], ",", "Center"}], "]"}], ",", " ", 
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{"{", "\"\<Parasitic (species 1 is host)\>\"", "}"}], ",", 
        "Center"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{"{", "\"\<-\>\"", "}"}], ",", " ", "Center"}], "]"}], ",", 
      " ", 
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{"{", "\"\<+\>\"", "}"}], ",", "Center"}], "]"}], ",", " ", 
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{"{", "\"\<Parasitic (species 2 is host)\>\"", "}"}], ",", 
        "Center"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{"{", "\"\<+\>\"", "}"}], ",", " ", "Center"}], "]"}], ",", 
      " ", 
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{"{", "\"\<+\>\"", "}"}], ",", "Center"}], "]"}], ",", " ", 
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{"{", "\"\<Competitive (both suffer)\>\"", "}"}], ",", 
        "Center"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", "}"}]}]], "Input",\

 InitializationCell->True,
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQBmIQfdYnXJFB4rXjJmklZxDdUPrVA0RX3VEMAtHcPT9i
QfS542YpIPrY/xN5ILplsmgFiI4SPFYLohMqRZtB9DwzxX4Q3bTl/VQQPZv/
wiIQXcZ/aDFY3f6NK0H04Y/LV4HtW8G9HUTfWRV4EESrOxSdBNHKPr1gWmVX
0gUQvc/rDZj+Eit4DUSv9pUD02/OZIozAune5fyaIPpaiZcuiM4zzTIC0cLa
Ji4gusbUF0zrVne51gLpX/V7IkF01u76NBCtwCbeBKKPeu5uB9FxSQ8mgejL
9nrWNlJAe9sSwHTdU2s3EH03uyYDRL+6vSkPRJc92FwAol+s/1gCFv9zsBpE
Z8Q6NoDoPU+fNIFo3/TcUyC6320HmF6iU3cZRO/y+nQFRCt53D1kB6R3Lus4
DaLFJvqdB9Ez+R+9BtEAsae8aQ==
  "]],

Cell[BoxData[
 RowBox[{
  RowBox[{"specRelTable", "=", 
   RowBox[{"Grid", "[", 
    RowBox[{"specRelTableData", ",", 
     RowBox[{"Spacings", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}]}], ",", 
     RowBox[{"ItemStyle", "\[Rule]", "\"\<Text\>\""}], ",", 
     RowBox[{"Alignment", "\[Rule]", "Center"}], ",", 
     RowBox[{"Frame", "\[Rule]", "All"}], ",", 
     RowBox[{"Background", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"None", ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"LightGray", ",", "None"}], "}"}]}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.636718291462776*^9, 3.636718316463272*^9}, {
  3.636718693408237*^9, 3.636718696338655*^9}, {3.6376335029909067`*^9, 
  3.637633541067337*^9}, {3.637638684719171*^9, 3.637638690332246*^9}, {
  3.637639090778906*^9, 3.6376390914449472`*^9}}]
}, Open  ]]
}, Open  ]]
},
ScreenStyleEnvironment->"Working",
WindowSize->{747, 810},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
PrintingOptions->{"PaperOrientation"->"Portrait",
"PaperSize"->{612, 792},
"PrintCellBrackets"->False,
"PrintMultipleHorizontalPages"->False,
"PrintRegistrationMarks"->False,
"PrintingMargins"->{{54.000000585, 54.000000585}, {72.00000078000001, \
72.00000078000001}}},
TaggingRules->{"SlideShow" -> True},
Magnification:>0.75 Inherited,
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 4, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SlideShowHeader"->{
  Cell[580, 22, 4298, 96, 75, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[6537, 167, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[9020, 251, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[11273, 319, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[71546, 1438, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[80133, 1701, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[91543, 1959, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[95760, 2090, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[146134, 2943, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[150730, 3102, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[158493, 3355, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[176842, 3794, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[191199, 4246, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[193824, 4347, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[206638, 4756, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[214259, 5013, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SlideShowHeader", 236965, 5644}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 4298, 96, 75, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[4881, 120, 87, 1, 36, "Input"],
Cell[4971, 123, 307, 4, 22, "Subsubtitle"],
Cell[CellGroupData[{
Cell[5303, 131, 433, 10, 111, "Title"],
Cell[5739, 143, 444, 6, 22, "Subsubtitle"],
Cell[6186, 151, 116, 2, 22, "Subsubtitle"],
Cell[6305, 155, 183, 6, 54, "Subsubtitle"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6537, 167, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[6626, 172, 92, 1, 48, "Section"],
Cell[CellGroupData[{
Cell[6743, 177, 95, 1, 33, "Subsection"],
Cell[CellGroupData[{
Cell[6863, 182, 206, 4, 22, "Item"],
Cell[7072, 188, 219, 4, 22, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[7340, 198, 98, 1, 33, "Subsection"],
Cell[CellGroupData[{
Cell[7463, 203, 151, 2, 22, "Item"],
Cell[7617, 207, 148, 2, 22, "Item"],
Cell[7768, 211, 159, 2, 22, "Item"],
Cell[7930, 215, 149, 2, 22, "Item"],
Cell[8082, 219, 148, 2, 22, "Item"],
Cell[8233, 223, 149, 2, 22, "Item"]
}, Open  ]],
Cell[8397, 228, 44, 1, 0, "PageBreak",
 PageBreakBelow->True],
Cell[8444, 231, 113, 1, 23, "Text"],
Cell[CellGroupData[{
Cell[8582, 236, 201, 3, 22, "Item"],
Cell[8786, 241, 161, 2, 22, "Item"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[9020, 251, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[9109, 256, 189, 2, 48, "Section"],
Cell[9301, 260, 388, 5, 23, "Text"],
Cell[CellGroupData[{
Cell[9714, 269, 246, 4, 22, "Item"],
Cell[9963, 275, 404, 8, 22, "Item"]
}, Open  ]],
Cell[10382, 286, 155, 2, 23, "Text"],
Cell[CellGroupData[{
Cell[10562, 292, 290, 8, 22, "Item"],
Cell[10855, 302, 357, 10, 22, "Item"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[11273, 319, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[11362, 324, 168, 2, 33, "Subsection"],
Cell[11533, 328, 217, 6, 23, "Text"],
Cell[CellGroupData[{
Cell[11775, 338, 358, 6, 22, "Item"],
Cell[12136, 346, 539, 10, 22, "Item"],
Cell[12678, 358, 633, 15, 22, "Item"],
Cell[13314, 375, 727, 16, 22, "Item"],
Cell[14044, 393, 456, 6, 22, "Item"]
}, Open  ]],
Cell[14515, 402, 144, 2, 23, "Input"],
Cell[14662, 406, 51521, 850, 208, "Input"],
Cell[66186, 1258, 44, 1, 0, "PageBreak",
 PageBreakBelow->True],
Cell[CellGroupData[{
Cell[66255, 1263, 112, 1, 27, "Subsubsection"],
Cell[66370, 1266, 182, 2, 23, "Text"],
Cell[66555, 1270, 463, 13, 18, "DisplayFormulaNumbered"],
Cell[67021, 1285, 337, 6, 23, "Text"],
Cell[67361, 1293, 541, 17, 23, "Text"],
Cell[67905, 1312, 481, 12, 18, "DisplayFormulaNumbered"],
Cell[68389, 1326, 104, 1, 23, "Text"],
Cell[68496, 1329, 572, 16, 18, "DisplayFormulaNumbered"],
Cell[69071, 1347, 469, 16, 23, "Text"],
Cell[69543, 1365, 44, 1, 0, "PageBreak",
 PageBreakBelow->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[69624, 1371, 165, 2, 27, "Subsubsection"],
Cell[69792, 1375, 580, 20, 39, "Text"],
Cell[70375, 1397, 128, 1, 23, "Text"],
Cell[70506, 1400, 654, 19, 36, "DisplayFormulaNumbered"],
Cell[71163, 1421, 322, 10, 23, "Text"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[71546, 1438, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[71635, 1443, 114, 1, 33, "Subsection"],
Cell[71752, 1446, 618, 15, 39, "Text"],
Cell[CellGroupData[{
Cell[72395, 1465, 114, 1, 27, "Subsubsection"],
Cell[72512, 1468, 393, 12, 39, "Text"],
Cell[72908, 1482, 727, 22, 34, "DisplayFormulaNumbered"],
Cell[73638, 1506, 371, 11, 23, "Text"],
Cell[CellGroupData[{
Cell[74034, 1521, 350, 13, 22, "Item"],
Cell[74387, 1536, 350, 13, 22, "Item"],
Cell[74740, 1551, 229, 8, 22, "Item"]
}, Open  ]],
Cell[74984, 1562, 44, 1, 0, "PageBreak",
 PageBreakBelow->True],
Cell[CellGroupData[{
Cell[75053, 1567, 169, 3, 23, "Input",
 InitializationCell->True],
Cell[75225, 1572, 2984, 58, 293, "Output"]
}, Open  ]],
Cell[78224, 1633, 101, 1, 23, "Text"],
Cell[78328, 1636, 1014, 33, 36, "DisplayFormulaNumbered"],
Cell[79345, 1671, 104, 1, 23, "Text"],
Cell[79452, 1674, 620, 20, 36, "DisplayFormulaNumbered"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[80133, 1701, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[80222, 1706, 116, 1, 27, "Subsubsection"],
Cell[80341, 1709, 169, 4, 23, "Text"],
Cell[80513, 1715, 44, 1, 0, "PageBreak",
 PageBreakBelow->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[80594, 1721, 155, 2, 27, "Subsubsection"],
Cell[CellGroupData[{
Cell[80774, 1727, 1425, 40, 43, "Input",
 InitializationCell->True],
Cell[82202, 1769, 8335, 153, 173, "Output"]
}, Open  ]],
Cell[90552, 1925, 942, 28, 39, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[91543, 1959, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[91632, 1964, 112, 1, 48, "Section"],
Cell[CellGroupData[{
Cell[91769, 1969, 333, 8, 22, "Item"],
Cell[92105, 1979, 721, 22, 19, "Subitem"],
Cell[92829, 2003, 445, 10, 22, "Item"],
Cell[93277, 2015, 984, 32, 27, "Subitem"],
Cell[94264, 2049, 539, 12, 36, "Item"],
Cell[94806, 2063, 436, 7, 22, "Item"],
Cell[95245, 2072, 454, 11, 22, "Item"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[95760, 2090, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[95849, 2095, 132, 1, 48, "Section"],
Cell[95984, 2098, 1011, 27, 69, "Text"],
Cell[96998, 2127, 49087, 810, 190, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[146134, 2943, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[146223, 2948, 114, 1, 43, "Subsection"],
Cell[CellGroupData[{
Cell[146362, 2953, 332, 8, 40, "Item"],
Cell[146697, 2963, 805, 29, 22, "Item"],
Cell[147505, 2994, 313, 7, 22, "Item"],
Cell[147821, 3003, 1183, 38, 36, "Item"],
Cell[149007, 3043, 328, 4, 22, "Item"]
}, Open  ]],
Cell[149350, 3050, 393, 13, 18, "DisplayFormulaNumbered"],
Cell[149746, 3065, 395, 13, 18, "DisplayFormulaNumbered"],
Cell[CellGroupData[{
Cell[150166, 3082, 108, 1, 27, "Subsubsection"],
Cell[150277, 3085, 392, 10, 39, "Text"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[150730, 3102, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[150819, 3107, 213, 6, 33, "Subsection"],
Cell[151035, 3115, 1551, 52, 36, "Item"],
Cell[152589, 3169, 1057, 35, 39, "DisplayFormulaNumbered"],
Cell[153649, 3206, 822, 21, 22, "Item"],
Cell[154474, 3229, 677, 21, 39, "DisplayFormulaNumbered"],
Cell[155154, 3252, 864, 25, 22, "Item"],
Cell[156021, 3279, 645, 19, 39, "DisplayFormulaNumbered"],
Cell[CellGroupData[{
Cell[156691, 3302, 1015, 29, 22, "Item"],
Cell[157709, 3333, 723, 15, 36, "Item"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[158493, 3355, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[158582, 3360, 213, 6, 33, "Subsection"],
Cell[158798, 3368, 296, 4, 22, "Item"],
Cell[159097, 3374, 1426, 43, 39, "DisplayFormulaNumbered"],
Cell[CellGroupData[{
Cell[160548, 3421, 968, 25, 24, "Item"],
Cell[161519, 3448, 939, 25, 22, "Item"],
Cell[162461, 3475, 917, 25, 22, "Item"]
}, Open  ]],
Cell[163393, 3503, 803, 21, 37, "DisplayFormulaNumbered"],
Cell[164199, 3526, 44, 1, 0, "PageBreak",
 PageBreakBelow->True],
Cell[CellGroupData[{
Cell[164268, 3531, 216, 4, 27, "Subsubsection"],
Cell[164487, 3537, 195, 3, 75, "Input"],
Cell[164685, 3542, 629, 14, 36, "DisplayFormulaNumbered"],
Cell[165317, 3558, 87, 1, 36, "Input"],
Cell[CellGroupData[{
Cell[165429, 3563, 213, 3, 50, "Item"],
Cell[165645, 3568, 318, 9, 22, "Item"]
}, Open  ]],
Cell[165978, 3580, 44, 1, 0, "PageBreak",
 PageBreakBelow->True],
Cell[CellGroupData[{
Cell[166047, 3585, 370, 9, 23, "Input",
 InitializationCell->True],
Cell[166420, 3596, 10349, 190, 385, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[176842, 3794, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[176931, 3799, 114, 1, 33, "Subsection"],
Cell[177048, 3802, 1034, 37, 39, "Text"],
Cell[CellGroupData[{
Cell[178107, 3843, 1059, 33, 73, "ItemNumbered"],
Cell[179169, 3878, 517, 14, 40, "ItemNumbered"]
}, Open  ]],
Cell[179701, 3895, 750, 26, 24, "DisplayFormulaNumbered"],
Cell[180454, 3923, 938, 31, 40, "ItemNumbered"],
Cell[181395, 3956, 44, 1, 0, "PageBreak",
 PageBreakBelow->True],
Cell[181442, 3959, 155, 3, 25, "Text"],
Cell[CellGroupData[{
Cell[181622, 3966, 131, 2, 24, "Input",
 InitializationCell->True],
Cell[181756, 3970, 7147, 191, 180, "Output"]
}, Open  ]],
Cell[188918, 4164, 233, 4, 42, "Text"],
Cell[189154, 4170, 834, 27, 39, "DisplayFormulaNumbered"],
Cell[189991, 4199, 774, 26, 39, "DisplayFormulaNumbered"],
Cell[190768, 4227, 382, 13, 27, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[191199, 4246, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[191288, 4251, 99, 1, 28, "Subsubsection"],
Cell[191390, 4254, 418, 12, 44, "Text"],
Cell[191811, 4268, 541, 19, 22, "DisplayFormulaNumbered"],
Cell[192355, 4289, 87, 1, 25, "Text"],
Cell[192445, 4292, 505, 18, 22, "DisplayFormulaNumbered"],
Cell[192953, 4312, 822, 29, 63, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[193824, 4347, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[193913, 4352, 132, 1, 58, "Section"],
Cell[194048, 4355, 449, 12, 42, "Text"],
Cell[194500, 4369, 719, 25, 45, "Text"],
Cell[195222, 4396, 1339, 41, 120, "Text"],
Cell[196564, 4439, 778, 27, 41, "DisplayFormulaNumbered"],
Cell[197345, 4468, 44, 1, 0, "PageBreak",
 PageBreakBelow->True],
Cell[197392, 4471, 215, 6, 23, "Text"],
Cell[197610, 4479, 1011, 33, 39, "DisplayFormulaNumbered"],
Cell[198624, 4514, 200, 6, 23, "Text"],
Cell[198827, 4522, 1016, 32, 39, "DisplayFormulaNumbered"],
Cell[199846, 4556, 44, 1, 3, "PageBreak",
 PageBreakBelow->True],
Cell[199893, 4559, 485, 13, 42, "Text"],
Cell[CellGroupData[{
Cell[200403, 4576, 131, 2, 23, "Input",
 InitializationCell->True],
Cell[200537, 4580, 6040, 169, 170, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[206638, 4756, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[206727, 4761, 152, 2, 48, "Section"],
Cell[CellGroupData[{
Cell[206904, 4767, 1058, 26, 70, "ItemNumbered"],
Cell[207965, 4795, 1587, 45, 74, "ItemNumbered"]
}, Open  ]],
Cell[209567, 4843, 44, 1, 3, "PageBreak",
 PageBreakBelow->True],
Cell[209614, 4846, 2901, 99, 111, "ItemNumbered"],
Cell[212518, 4947, 717, 22, 46, "DisplayFormula"],
Cell[213238, 4971, 972, 36, 32, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[214259, 5013, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[214348, 5018, 105, 1, 48, "Section"],
Cell[214456, 5021, 370, 11, 38, "Input",
 InitializationCell->True],
Cell[214829, 5034, 2962, 79, 140, "Input",
 InitializationCell->True],
Cell[217794, 5115, 1398, 38, 49, "Input",
 InitializationCell->True],
Cell[219195, 5155, 448, 12, 23, "Input",
 InitializationCell->True],
Cell[219646, 5169, 1320, 31, 101, "Input",
 InitializationCell->True],
Cell[220969, 5202, 2185, 56, 171, "Input",
 InitializationCell->True],
Cell[223157, 5260, 2400, 63, 101, "Input",
 InitializationCell->True],
Cell[225560, 5325, 4588, 127, 197, "Input",
 InitializationCell->True],
Cell[230151, 5454, 889, 22, 36, "Input",
 InitializationCell->True],
Cell[231043, 5478, 4211, 114, 205, "Input",
 InitializationCell->True],
Cell[235257, 5594, 942, 23, 36, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
