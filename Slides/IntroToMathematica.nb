(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    467842,      11407]
NotebookOptionsPosition[    439894,      10475]
NotebookOutlinePosition[    441352,      10521]
CellTagsIndexPosition[    441044,      10511]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 "Introduction to Wolfram ",
 StyleBox["Mathematica",
  FontSlant->"Italic"]
}], "Title",
 CellChangeTimes->{{3.641814567444219*^9, 3.641814585729734*^9}}],

Cell[TextData[{
 "The goal of this introduction is to give a brief overwiew of the kinds of \
operations ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " can be used for. This tutorial is far from complete, but it covers some of \
the basics that should help you get started. ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " offers a lot of very powerful constructions and functionality beyond what \
is covered here."
}], "Text",
 CellChangeTimes->{{3.64181459103363*^9, 3.641814796240595*^9}}],

Cell[CellGroupData[{

Cell["Notebooks", "Section",
 CellChangeTimes->{{3.6418148257202997`*^9, 3.641814826999996*^9}}],

Cell[TextData[{
 "The files to which you write ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " code and over which you interact with the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " Kernel are called Notebooks. This file here is one. Notebooks have the \
ending .nb. It is possible to launch ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " from the command line, too, in which case you interact more directly with \
the Kernel."
}], "Text",
 CellChangeTimes->{{3.641814829184141*^9, 3.641814925975834*^9}}],

Cell["\<\
A Notebook is basically a series of \[OpenCurlyDoubleQuote]cells\
\[CloseCurlyDoubleQuote], where cells can be of different types, e.g. input \
cells, output cells, text cells, or cells with display formula, items, lists, \
etc.\
\>", "Text",
 CellChangeTimes->{{3.6418149391034184`*^9, 3.641814993927215*^9}}],

Cell["\<\
This organisation allows you to interleave text, comments and code, which can \
be very helpful.\
\>", "Text",
 CellChangeTimes->{{3.641815004902883*^9, 3.6418150275829687`*^9}, {
  3.641815326646944*^9, 3.6418153366292753`*^9}}],

Cell["\<\
Onle cells of type \[OpenCurlyDoubleQuote]Input\[CloseCurlyDoubleQuote] and \
\[OpenCurlyDoubleQuote]Code\[CloseCurlyDoubleQuote] can actually be evaluated \
by the Kernel. To evaluate a cell of one of these types, place the curser \
into this cell and then press the Shift+Return key combination. The result is \
then presented in a cell of the type \[OpenCurlyDoubleQuote]Output\
\[CloseCurlyDoubleQuote] just below the input cell you evaluated.\
\>", "Text",
 CellChangeTimes->{{3.641815065046873*^9, 3.641815128774522*^9}, {
  3.641817441194469*^9, 3.641817448096842*^9}}],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " can be used to write manuscripts (there is an export function to ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"L", 
     StyleBox[
      AdjustmentBox["A",
       BoxBaselineShift->-0.4,
       BoxMargins->{{-0.5, -0.3}, {0, 0}}],
      FontSize->Smaller], "T", 
     AdjustmentBox["E",
      BoxBaselineShift->0.5,
      BoxMargins->{{-0.3, 0}, {0, 0}}], "X"}],
    SingleLetterItalics->False], TraditionalForm]]],
 ") or presentations, and it offers a number of interective features. We are \
not going to discuss these here, though."
}], "Text",
 CellChangeTimes->{{3.641815150470202*^9, 3.641815229981922*^9}}],

Cell["\<\
On the right-hand side of a Notebook, there are vertical bars, which \
represent the hierarchical structure of cells and groups of cells such as \
subsections, sections, chapters, etc. By klicking on these bars, you can \
collapse or expand respective levels.\
\>", "Text",
 CellChangeTimes->{{3.641815351452916*^9, 3.6418154359726887`*^9}}],

Cell["\<\
Amont input cells, there are two types. \[OpenCurlyDoubleQuote]Normal\
\[CloseCurlyDoubleQuote] input cells are evaluated only if you put your \
cursor there and press the Shift+Return combination. \
\[OpenCurlyDoubleQuote]Intitialization Cells\[CloseCurlyDoubleQuote], \
however, are evaluated automatically when you choose \
\[OpenCurlyDoubleQuote]Evaluate Initialization Cells\[CloseCurlyDoubleQuote] \
from the \[OpenCurlyDoubleQuote]Evaluation\[CloseCurlyDoubleQuote] Menu. It \
is a good idea to place code such as function or variable definitions into \
initialization cells. However, calculations that need a lot of time or are \
more of a \[OpenCurlyDoubleQuote]scratch\[CloseCurlyDoubleQuote] type should \
not be assigned to initialization cells.\
\>", "Text",
 CellChangeTimes->{{3.6418154425723553`*^9, 3.641815693979541*^9}, {
  3.641817467780154*^9, 3.6418174774489317`*^9}}],

Cell[TextData[{
 "As a final remark, coding in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " may seem a bit awkward if you use it the first time. I strongly recommend \
using the different \[OpenCurlyDoubleQuote]Assistants\[CloseCurlyDoubleQuote] \
available in the \[OpenCurlyDoubleQuote]Palettes\[CloseCurlyDoubleQuote] \
Menu. These offer, for example, easy access to greek letters or constructions \
like matrices, differentials, fractions, etc. There are short-cuts for these, \
which you will be picking up as you go. The more you use ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ", the more you will find yourself usint the short-cuts instead of the \
assistant palletes."
}], "Text",
 CellChangeTimes->{{3.6418157536103983`*^9, 3.641815903705998*^9}}],

Cell["\<\
Depending on which \[OpenCurlyDoubleQuote]Stylesheet\[CloseCurlyDoubleQuote] \
(Menu Format) you use, the default cell type varies. If you use the \
\[OpenCurlyDoubleQuote]Default\[CloseCurlyDoubleQuote] Stylesheed, then a new \
cell is typically an input cell. You can change the type of a cell in the \
Menu Format/Style.\
\>", "Text",
 CellChangeTimes->{{3.6418168816357327`*^9, 3.641816966467507*^9}, {
  3.6419080880193644`*^9, 3.641908088411233*^9}}],

Cell["\<\
In an input cell, you can comment out code or text by surrounding it by \
surrounding it with brackets and asterisks. Example: (* This is my comment *).\
\>", "Text",
 CellChangeTimes->{{3.6418171286741657`*^9, 3.6418172388383217`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Basics", "Section",
 CellChangeTimes->{{3.641814804936393*^9, 3.641814805936117*^9}}],

Cell[CellGroupData[{

Cell["Getting help", "Subsection",
 CellChangeTimes->{{3.6418179922291327`*^9, 3.64181799391705*^9}}],

Cell[TextData[{
 "You can access the documentation to any ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " command by typing \[OpenCurlyDoubleQuote]?Command\[CloseCurlyDoubleQuote]; \
this provides a short summary with a link to the full documentation page:"
}], "Text",
 CellChangeTimes->{{3.641817996141054*^9, 3.641818094052739*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Sin"}]], "Input",
 CellChangeTimes->{{3.64181804954216*^9, 3.6418180504242153`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Sin\\\", \\\"[\\\", StyleBox[\\\"z\\\", \
\\\"TI\\\"], \\\"]\\\"}]\\) gives the sine of \\!\\(\\*StyleBox[\\\"z\\\", \\\
\"TI\\\"]\\). \"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Sin"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.641818050972776*^9},
 CellTags->"Info3641792850-4929365"]
}, Open  ]],

Cell["\<\
 A more detailed summary is given if you type two question marks :\
\>", "Text",
 CellChangeTimes->{{3.641818096615399*^9, 3.641818100089541*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"??", "Sin"}]], "Input",
 CellChangeTimes->{{3.641818053695508*^9, 3.641818054407857*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Sin\\\", \\\"[\\\", StyleBox[\\\"z\\\", \
\\\"TI\\\"], \\\"]\\\"}]\\) gives the sine of \\!\\(\\*StyleBox[\\\"z\\\", \\\
\"TI\\\"]\\). \"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Sin"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.641818054696995*^9},
 CellTags->"Info3641792854-4929365"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{
      RowBox[{"Attributes", "[", "Sin", "]"}], "=", 
      RowBox[{"{", 
       RowBox[{"Listable", ",", "NumericFunction", ",", "Protected"}], "}"}]}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[Sin],
  Editable->False]], "Print",
 CellChangeTimes->{3.6418180547600946`*^9},
 CellTags->"Info3641792854-4929365"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Variables and assignments", "Subsection",
 CellChangeTimes->{{3.641815252695552*^9, 3.6418152615814877`*^9}}],

Cell["\<\
You can use (almost) any variable name (it cannot start with a number and \
cannot have subscripts), and you can assign numerical expressions (e.g. a \
real number) or symbolic expressions (e.g. another variable or a function) to \
a variable name.\
\>", "Text",
 CellChangeTimes->{{3.6418172744173822`*^9, 3.6418173627452087`*^9}}],

Cell[TextData[{
 "There are two types of assignment: direct and delayed assignment. The \
direct assignment assigns the value to a variable once, namely when you \
execute the respective cell, and then the variable keeps this value until you \
assign a different value to it. In contrast, if you use the delayed \
assignment, then ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " just keeps in mind the symbolic expression you assigned to the variable, \
but only evaluates it when the variable is actually used."
}], "Text",
 CellChangeTimes->{
  3.6418169098483562`*^9, {3.641816977830055*^9, 3.64181711427488*^9}, {
   3.641817266369768*^9, 3.641817270745514*^9}}],

Cell["Direct assignment using \
\[OpenCurlyDoubleQuote]=\[CloseCurlyDoubleQuote]:", "Text",
 CellChangeTimes->{{3.641817249265521*^9, 3.641817252217499*^9}, {
  3.6418176118634644`*^9, 3.6418176143754807`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Directly", " ", "assigning", " ", "5", " ", "to", " ", "a"}], " ",
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{"a", "=", "5"}]}]], "Input",
 CellChangeTimes->{{3.64181725402675*^9, 3.641817254763019*^9}, {
  3.641817370546186*^9, 3.641817387674342*^9}}],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.641817424158471*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"b", " ", "is", " ", "now", " ", "a"}], ",", " ", 
    RowBox[{"which", " ", "is", " ", "5"}], ",", " ", 
    RowBox[{"so", " ", "b", " ", "is", " ", "5"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"b", "=", "a"}]}]], "Input",
 CellChangeTimes->{{3.641817400961652*^9, 3.641817417913825*^9}}],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.6418174986529818`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Assign", " ", "a", " ", "new", " ", "value", " ", "to", " ", "a"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"a", "=", "10"}]}]], "Input",
 CellChangeTimes->{{3.641817518074489*^9, 3.641817534808897*^9}}],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{3.6418175359627237`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Note", " ", "that", " ", "b", " ", "is", " ", "still", " ", "5"}], 
  " ", "*)"}]], "Input",
 CellChangeTimes->{{3.6418175384168386`*^9, 3.641817545457107*^9}}],

Cell[CellGroupData[{

Cell[BoxData["b"], "Input",
 CellChangeTimes->{3.64181754785711*^9}],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.64181754858927*^9}]
}, Open  ]],

Cell["Delayed assignment using \[OpenCurlyDoubleQuote]:=\
\[CloseCurlyDoubleQuote]:", "Text",
 CellChangeTimes->{{3.6418175531115503`*^9, 3.641817559455557*^9}, {
  3.64181761708729*^9, 3.641817620271348*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Directly", " ", "assigning", " ", "5", " ", "to", " ", "a"}], " ",
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{"a", "=", "5"}]}]], "Input",
 CellChangeTimes->{{3.64181725402675*^9, 3.641817254763019*^9}, {
  3.641817370546186*^9, 3.641817387674342*^9}}],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.641817424158471*^9, 3.641817628411134*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Now", " ", "we", " ", "assign", " ", "a", " ", "to", " ", "c"}], 
    ",", " ", 
    RowBox[{
    "but", " ", "the", " ", "assignment", " ", "is", " ", "now", " ", 
     RowBox[{"delayed", "!"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"c", ":=", "a"}]}]], "Input",
 CellChangeTimes->{{3.641817400961652*^9, 3.641817417913825*^9}, {
  3.641817585426202*^9, 3.641817608009166*^9}, {3.6418176443614388`*^9, 
  3.641817681672496*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Assign", " ", "a", " ", "new", " ", "value", " ", "to", " ", "a"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"a", "=", "10"}]}]], "Input",
 CellChangeTimes->{{3.641817518074489*^9, 3.641817534808897*^9}}],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{3.6418175359627237`*^9, 3.641817638236863*^9, 
  3.641817686475749*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "Note", " ", "that", " ", "c", " ", "takes", " ", "the", " ", "current", 
    " ", "value", " ", "of", " ", "a"}], ",", " ", 
   RowBox[{
   "not", " ", "the", " ", "one", " ", "that", " ", "a", " ", "had", " ", 
    "when", " ", "c", " ", "was", " ", "defined"}], ",", " ", 
   RowBox[{"which", " ", "ws", " ", 
    RowBox[{"5", "!"}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.6418175384168386`*^9, 3.641817545457107*^9}, {
  3.641817689768341*^9, 3.641817735176076*^9}}],

Cell[CellGroupData[{

Cell[BoxData["c"], "Input",
 CellChangeTimes->{3.64181754785711*^9, 3.641817649584779*^9}],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{3.64181754858927*^9, 3.641817717525173*^9}]
}, Open  ]],

Cell["\<\
Sometimes you want to \[OpenCurlyDoubleQuote]clear\[CloseCurlyDoubleQuote] \
variables of their assignments. This is done as follows:\
\>", "Text",
 CellChangeTimes->{{3.641817774438224*^9, 3.641817793206427*^9}}],

Cell[CellGroupData[{

Cell[BoxData["a"], "Input",
 CellChangeTimes->{3.6419088411250153`*^9}],

Cell[BoxData["12"], "Output",
 CellChangeTimes->{3.6419088440189238`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"a", ",", "b", ",", "c"}], "]"}]], "Input",
 CellChangeTimes->{{3.641817794839527*^9, 3.6418177976799593`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["a"], "Input",
 CellChangeTimes->{{3.641817799871785*^9, 3.641817800847513*^9}}],

Cell[BoxData["a"], "Output",
 CellChangeTimes->{3.641817801355054*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["b"], "Input",
 CellChangeTimes->{3.641817802208865*^9}],

Cell[BoxData["b"], "Output",
 CellChangeTimes->{3.641817802607792*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["c"], "Input",
 CellChangeTimes->{3.641817803197785*^9}],

Cell[BoxData["c"], "Output",
 CellChangeTimes->{3.641817803461577*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Basic operations", "Subsection",
 CellChangeTimes->{{3.6418152689033117`*^9, 3.641815273229463*^9}}],

Cell[TextData[StyleBox["Summation, substraction, multiplication, and \
division:",
 FontSlant->"Plain"]], "Text",
 CellChangeTimes->{{3.641817892997603*^9, 3.641817910357853*^9}},
 FontSlant->"Italic"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "+", "b"}]], "Input",
 CellChangeTimes->{{3.641817755216206*^9, 3.64181776319913*^9}}],

Cell[BoxData[
 RowBox[{"a", "+", "b"}]], "Output",
 CellChangeTimes->{3.6418177636032343`*^9, 3.641817808952183*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"8", "-", "b"}]], "Input",
 CellChangeTimes->{{3.641817819711513*^9, 3.641817841535563*^9}}],

Cell[BoxData[
 RowBox[{"8", "-", "b"}]], "Output",
 CellChangeTimes->{{3.6418178221022453`*^9, 3.6418178418974743`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"3.8", "*", "2"}]], "Input",
 CellChangeTimes->{{3.6418178248314247`*^9, 3.641817847663617*^9}}],

Cell[BoxData["7.6`"], "Output",
 CellChangeTimes->{{3.641817831677897*^9, 3.641817848239903*^9}}]
}, Open  ]],

Cell[TextData[{
 "Instead of a \[OpenCurlyDoubleQuote]*\[CloseCurlyDoubleQuote] you an also \
use a space for multiplication. If you put a space between two numbers, ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " will automatically put a \[OpenCurlyDoubleQuote]",
 Cell[BoxData[
  FormBox["\[Times]", TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\[CloseCurlyDoubleQuote] in there. For symbolic variables, the space is \
sufficient."
}], "Text",
 CellChangeTimes->{{3.641818869591775*^9, 3.6418189430000877`*^9}}],

Cell[BoxData[
 RowBox[{"3.8", " ", "2"}]], "Input",
 CellChangeTimes->{{3.641818886515571*^9, 3.6418188890094967`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", " ", "y"}]], "Input",
 CellChangeTimes->{{3.64181894804095*^9, 3.641818951889182*^9}}],

Cell[BoxData[
 RowBox[{"x", " ", "y"}]], "Output",
 CellChangeTimes->{3.641818952271125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "*", "y"}]], "Input",
 CellChangeTimes->{{3.641818954622348*^9, 3.641818960513196*^9}}],

Cell[BoxData[
 RowBox[{"x", " ", "y"}]], "Output",
 CellChangeTimes->{{3.641818956669353*^9, 3.6418189609551764`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "/", "c"}], "+", "9", "-", 
  RowBox[{"2", "*", "3"}]}]], "Input",
 CellChangeTimes->{{3.641817852097518*^9, 3.641817862455426*^9}}],

Cell[BoxData[
 RowBox[{"3", "+", 
  FractionBox["a", "c"]}]], "Output",
 CellChangeTimes->{3.641817862870009*^9}]
}, Open  ]],

Cell["Powers:", "Text",
 CellChangeTimes->{{3.641818534025691*^9, 3.6418185349058943`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "^", "a"}]], "Input",
 CellChangeTimes->{{3.641818538163691*^9, 3.641818543643466*^9}}],

Cell[BoxData[
 SuperscriptBox["x", "a"]], "Output",
 CellChangeTimes->{3.641818544175653*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SuperscriptBox["b", "2"]], "Input",
 CellChangeTimes->{{3.64181854957384*^9, 3.641818556931427*^9}}],

Cell[BoxData[
 SuperscriptBox["b", "2"]], "Output",
 CellChangeTimes->{3.641818557375947*^9}]
}, Open  ]],

Cell["Roots:", "Text",
 CellChangeTimes->{{3.641818561305624*^9, 3.641818562610011*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sqrt", "[", "4", "]"}]], "Input",
 CellChangeTimes->{{3.641818568423397*^9, 3.641818572371307*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.64181857269833*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RadicalBox[
  SuperscriptBox["a", "8"], "4"]], "Input",
 CellChangeTimes->{{3.641818581141198*^9, 3.641818607691206*^9}}],

Cell[BoxData["144"], "Output",
 CellChangeTimes->{{3.64181859682867*^9, 3.641818608732893*^9}, 
   3.641909283417695*^9}]
}, Open  ]],

Cell["Exponentials:", "Text",
 CellChangeTimes->{{3.64189651467914*^9, 3.64189651677534*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Exp", "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.6418965249525967`*^9, 3.641896528056456*^9}}],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", "x"]], "Output",
 CellChangeTimes->{3.641896531660812*^9}]
}, Open  ]],

Cell["Alternatively, we can type", "Text",
 CellChangeTimes->{{3.641896535432867*^9, 3.6418965401350946`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "a"}], " ", "x"}], "+", "b"}]]], "Input",
 CellChangeTimes->{{3.6418965430633183`*^9, 3.64189655296062*^9}}],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  RowBox[{"b", "-", 
   RowBox[{"a", " ", "x"}]}]]], "Output",
 CellChangeTimes->{3.641896553590814*^9}]
}, Open  ]],

Cell["\<\
The double-stroke \[ExponentialE] can be obtained by typing \
\[OpenCurlyDoubleQuote]Esc + e + e + Esc\[CloseCurlyDoubleQuote]. The escape \
key Esc is the gate to many short-cuts. Another example are Greek letters. To \
obtain the first three letters of the Greek alphabet, type \
\[OpenCurlyDoubleQuote]Esc + a + Esc\[CloseCurlyDoubleQuote], \
\[OpenCurlyDoubleQuote]Esc + b + Esc\[CloseCurlyDoubleQuote], and \
\[OpenCurlyDoubleQuote]Esc + g + Esc\[CloseCurlyDoubleQuote] to obtain \
\[Alpha], \[Beta], and \[Gamma]. To write letters in double-stroke font, such \
as \[DoubleStruckCapitalE], use \[OpenCurlyDoubleQuote]Esc + dsE + Esc\
\[CloseCurlyDoubleQuote]. Similarly, for letters in script shape, such as \
\[ScriptCapitalA], use \[OpenCurlyDoubleQuote]Esc + scA + Esc\
\[CloseCurlyDoubleQuote].\
\>", "Text",
 CellChangeTimes->{{3.641896557638941*^9, 3.641896869254717*^9}, {
  3.641909338250516*^9, 3.641909341425563*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Manipulating expressions", "Subsection",
 CellChangeTimes->{{3.6418152780613413`*^9, 3.6418152816770477`*^9}}],

Cell["Expanding a product:", "Text",
 CellChangeTimes->{{3.6418181389337893`*^9, 3.641818144612471*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{
   RowBox[{"a", 
    RowBox[{"(", 
     RowBox[{"b", "+", "c"}], ")"}]}], "-", 
   RowBox[{"a", 
    RowBox[{"(", 
     RowBox[{"e", "-", "f"}], ")"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.641818287213956*^9, 3.641818306749016*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", " ", "b"}], "+", 
  RowBox[{"a", " ", "c"}], "-", 
  RowBox[{"a", " ", "e"}], "+", 
  RowBox[{"a", " ", "f"}]}]], "Output",
 CellChangeTimes->{3.6418183074947433`*^9}]
}, Open  ]],

Cell["\<\
Alternatively, you can put the command after the expression, using \
\[OpenCurlyDoubleQuote]//\[CloseCurlyDoubleQuote]:\
\>", "Text",
 CellChangeTimes->{{3.641818312028762*^9, 3.641818332442997*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"a", 
    RowBox[{"(", 
     RowBox[{"b", "+", "c"}], ")"}]}], "-", 
   RowBox[{"a", 
    RowBox[{"(", 
     RowBox[{"e", "-", "f"}], ")"}]}]}], "//", "Expand"}]], "Input",
 CellChangeTimes->{{3.641818342000675*^9, 3.641818344599881*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", " ", "b"}], "+", 
  RowBox[{"a", " ", "c"}], "-", 
  RowBox[{"a", " ", "e"}], "+", 
  RowBox[{"a", " ", "f"}]}]], "Output",
 CellChangeTimes->{3.641818345001891*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Expand"}]], "Input",
 CellChangeTimes->{{3.641818457076314*^9, 3.641818458731762*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Expand\\\", \\\"[\\\", StyleBox[\\\"expr\
\\\", \\\"TI\\\"], \\\"]\\\"}]\\) expands out products and positive integer \
powers in \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"Expand\\\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"patt\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
leaves unexpanded any parts of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) \
that are free of the pattern \\!\\(\\*StyleBox[\\\"patt\\\", \
\\\"TI\\\"]\\).\"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Expand"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.64181845913603*^9},
 CellTags->"Info3641793259-6651854"]
}, Open  ]],

Cell["Factoring an expression:", "Text",
 CellChangeTimes->{{3.641818364957328*^9, 3.6418183736914053`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Factor", "[", 
  RowBox[{"a", "+", 
   RowBox[{"c", " ", "a"}], "-", 
   RowBox[{"d", " ", "a"}], "-", 
   SuperscriptBox["a", "2"], "+", 
   RowBox[{"e", " ", 
    SuperscriptBox["a", "2"]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.641818385549467*^9, 3.641818427956573*^9}, {
  3.641818485830037*^9, 3.6418185174914513`*^9}}],

Cell[BoxData[
 RowBox[{"a", " ", 
  RowBox[{"(", 
   RowBox[{"1", "-", "a", "+", "c", "-", "d", "+", 
    RowBox[{"a", " ", "e"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.641818399648999*^9, 3.641818428436934*^9}, {
  3.641818490443624*^9, 3.641818518037538*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Factor"}]], "Input",
 CellChangeTimes->{{3.641818441149578*^9, 3.6418184422288427`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Factor\\\", \\\"[\\\", StyleBox[\\\"poly\
\\\", \\\"TI\\\"], \\\"]\\\"}]\\) factors a polynomial over the integers. \\n\
\\!\\(\\*RowBox[{\\\"Factor\\\", \\\"[\\\", RowBox[{StyleBox[\\\"poly\\\", \\\
\"TI\\\"], \\\",\\\", RowBox[{\\\"Modulus\\\", \\\"\[Rule]\\\", \
StyleBox[\\\"p\\\", \\\"TI\\\"]}]}], \\\"]\\\"}]\\) factors a polynomial \
modulo a prime \\!\\(\\*StyleBox[\\\"p\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"Factor\\\", \\\"[\\\", RowBox[{StyleBox[\\\"poly\\\", \
\\\"TI\\\"], \\\",\\\", RowBox[{\\\"Extension\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"a\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"a\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}]}], \\\"]\\\"}]\\) factors a \
polynomial allowing coefficients that are rational combinations of the \
algebraic numbers \\!\\(\\*SubscriptBox[StyleBox[\\\"a\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]\\). \"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Factor"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.641818442915224*^9},
 CellTags->"Info3641793242-6379980"]
}, Open  ]],

Cell["Simplifying expressions:", "Text",
 CellChangeTimes->{{3.641818335665894*^9, 3.64181833666854*^9}, {
  3.641818643551454*^9, 3.641818663073264*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expr1", "=", 
  RowBox[{
   RowBox[{"a", "/", "b"}], "+", 
   SuperscriptBox["a", "4"], "-", 
   RowBox[{"b", " ", "c"}], "+", 
   RowBox[{"4", "/", "b"}]}]}]], "Input",
 CellChangeTimes->{{3.641818665290451*^9, 3.641818697490617*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["a", "4"], "+", 
  FractionBox["4", "b"], "+", 
  FractionBox["a", "b"], "-", 
  RowBox[{"b", " ", "c"}]}]], "Output",
 CellChangeTimes->{{3.641818690049897*^9, 3.641818697990522*^9}, 
   3.64190985760851*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "expr1", "]"}]], "Input",
 CellChangeTimes->{{3.641818701970311*^9, 3.64181870645723*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"4", "+", "a", "+", 
   RowBox[{
    SuperscriptBox["a", "4"], " ", "b"}], "-", 
   RowBox[{
    SuperscriptBox["b", "2"], " ", "c"}]}], "b"]], "Output",
 CellChangeTimes->{3.641818706949183*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "expr1", "]"}]], "Input",
 CellChangeTimes->{{3.641818711699587*^9, 3.641818715322442*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["a", "4"], "+", 
  FractionBox[
   RowBox[{"4", "+", "a"}], "b"], "-", 
  RowBox[{"b", " ", "c"}]}]], "Output",
 CellChangeTimes->{3.641818715771104*^9}]
}, Open  ]],

Cell["Again, we can use the alternative \[OpenCurlyDoubleQuote]post-fix\
\[CloseCurlyDoubleQuote] notation:", "Text",
 CellChangeTimes->{{3.641818725034123*^9, 3.641818742448639*^9}, {
  3.641909705220253*^9, 3.6419097075705137`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expr1", "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.641818746426154*^9, 3.6418187491778708`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"4", "+", "a", "+", 
   RowBox[{
    SuperscriptBox["a", "4"], " ", "b"}], "-", 
   RowBox[{
    SuperscriptBox["b", "2"], " ", "c"}]}], "b"]], "Output",
 CellChangeTimes->{3.641818749515381*^9}]
}, Open  ]],

Cell["\<\
Sometimes, it is useful to group subterms by a (set of) focal variable(s). \
This is done using \[OpenCurlyDoubleQuote]Collect\[CloseCurlyDoubleQuote]:\
\>", "Text",
 CellChangeTimes->{{3.641818787424861*^9, 3.641818805160494*^9}, {
  3.641819047911002*^9, 3.641819052286871*^9}, {3.641819091176642*^9, 
  3.6418191023905888`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expr2", "=", 
  RowBox[{
   RowBox[{"a", " ", "b"}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"x", "-", "z"}], ")"}], "b"}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"e", "+", "f", "-", "g"}], ")"}], "a"}]}]}]], "Input",
 CellChangeTimes->{{3.641818809889656*^9, 3.641818810689781*^9}, {
  3.6418188459288893`*^9, 3.641818859049801*^9}, {3.641818978952585*^9, 
  3.641818991312945*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", " ", "b"}], "+", 
  RowBox[{"a", " ", 
   RowBox[{"(", 
    RowBox[{"e", "+", "f", "-", "g"}], ")"}]}], "+", 
  RowBox[{"b", " ", 
   RowBox[{"(", 
    RowBox[{"x", "-", "z"}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.641818811100339*^9, 3.641818992829792*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{"expr2", ",", "b"}], "]"}]], "Input",
 CellChangeTimes->{{3.64181881286377*^9, 3.641818833121912*^9}, {
  3.641818996728747*^9, 3.6418189968324823`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", " ", 
   RowBox[{"(", 
    RowBox[{"e", "+", "f", "-", "g"}], ")"}]}], "+", 
  RowBox[{"b", " ", 
   RowBox[{"(", 
    RowBox[{"a", "+", "x", "-", "z"}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.641818827796549*^9, 3.641818833581456*^9}, 
   3.641818997364554*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{"expr2", ",", "a"}], "]"}]], "Input",
 CellChangeTimes->{{3.641819001766045*^9, 3.641819012025292*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", " ", 
   RowBox[{"(", 
    RowBox[{"b", "+", "e", "+", "f", "-", "g"}], ")"}]}], "+", 
  RowBox[{"b", " ", 
   RowBox[{"(", 
    RowBox[{"x", "-", "z"}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.641819007177513*^9, 3.6418190123538523`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{"expr2", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6418190431764708`*^9, 3.6418190622740498`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", " ", 
   RowBox[{"(", 
    RowBox[{"b", "+", "e", "+", "f", "-", "g"}], ")"}]}], "+", 
  RowBox[{"b", " ", 
   RowBox[{"(", 
    RowBox[{"x", "-", "z"}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.641819062577189*^9}]
}, Open  ]],

Cell["\<\
To determine the degree of a polynomical in a focal variable, use\
\>", "Text",
 CellChangeTimes->{{3.641819107805438*^9, 3.641819128966634*^9}}],

Cell[CellGroupData[{

Cell[BoxData["expr1"], "Input",
 CellChangeTimes->{{3.641819131823613*^9, 3.64181913763999*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["a", "4"], "+", 
  FractionBox["4", "b"], "+", 
  FractionBox["a", "b"], "-", 
  RowBox[{"b", " ", "c"}]}]], "Output",
 CellChangeTimes->{{3.641819133013001*^9, 3.6418191380634823`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Exponent", "[", 
  RowBox[{"expr1", ",", "a"}], "]"}]], "Input",
 CellChangeTimes->{{3.64181914085716*^9, 3.641819145433704*^9}, {
  3.641819247651186*^9, 3.641819248783578*^9}}],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.641819145787587*^9, 3.641819249188538*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Data structures", "Subsection",
 CellChangeTimes->{{3.641815286261488*^9, 3.641815288237358*^9}}],

Cell["\<\
There is one atomic data structure, called a List. You can build more \
complicated structures by nesting lists. E.g., a 2x2 matrix is just a list of \
two sublists, where each sublist has one element.\
\>", "Text",
 CellChangeTimes->{{3.641819283487295*^9, 3.641819366237287*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myList1", "=", 
  RowBox[{"{", 
   RowBox[{
   "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
    ",", "9", ",", "10"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.641819369782508*^9, 3.641819378462613*^9}, {
  3.641819764806203*^9, 3.641819771428315*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{3.6418193794070253`*^9, 3.641819771768208*^9, 
  3.641909934795504*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myNestedList1", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"c", ",", "d"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.641819381790461*^9, 3.6418193951508417`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", "d"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6418193954920797`*^9, 3.641909951444851*^9}]
}, Open  ]],

Cell["\<\
A very efficient way of constructing lists is to use the \
\[OpenCurlyDoubleQuote]Table\[CloseCurlyDoubleQuote] command:\
\>", "Text",
 CellChangeTimes->{{3.64181941907041*^9, 3.641819454692717*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{"i", ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "10", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.641819458021401*^9, 3.641819466958087*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{3.641819467333109*^9, 3.641909989538556*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   SuperscriptBox["a", "x"], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "10", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.641819458021401*^9, 3.641819466958087*^9}, {
  3.6418195193517923`*^9, 3.64181952256458*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", 
   SuperscriptBox["a", "2"], ",", 
   SuperscriptBox["a", "3"], ",", 
   SuperscriptBox["a", "4"], ",", 
   SuperscriptBox["a", "5"], ",", 
   SuperscriptBox["a", "6"], ",", 
   SuperscriptBox["a", "7"], ",", 
   SuperscriptBox["a", "8"], ",", 
   SuperscriptBox["a", "9"], ",", 
   SuperscriptBox["a", "10"]}], "}"}]], "Output",
 CellChangeTimes->{3.641819523665959*^9, 3.6419100080140133`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myNestedList2", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "1", ",", "5", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e"}], "}"}]}], 
     "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.641819472037932*^9, 3.64181949363803*^9}, {
  3.641819529790236*^9, 3.6418195325597687`*^9}, {3.641819563880576*^9, 
  3.641819593543531*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"e", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"e", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"e", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"e", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"e", ",", "5"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.641819494206715*^9, {3.6418195761406*^9, 3.641819593870296*^9}, 
   3.6419100553497953`*^9}]
}, Open  ]],

Cell["\<\
Use \[OpenCurlyDoubleQuote]TableForm\[CloseCurlyDoubleQuote] or \
\[OpenCurlyDoubleQuote]MatrixForm\[CloseCurlyDoubleQuote] to display lists in \
a visually more appealing way:\
\>", "Text",
 CellChangeTimes->{{3.641819598621696*^9, 3.641819660771188*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myNestedList2", "//", "TableForm"}]], "Input",
 CellChangeTimes->{{3.641819640981083*^9, 3.641819665830905*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {"a"},
        {"1"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{
            Offset[0.2]}}, "RowsIndexed" -> {}}],
      Column], 
     TagBox[GridBox[{
        {"b"},
        {"1"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{
            Offset[0.2]}}, "RowsIndexed" -> {}}],
      Column], 
     TagBox[GridBox[{
        {"c"},
        {"1"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{
            Offset[0.2]}}, "RowsIndexed" -> {}}],
      Column], 
     TagBox[GridBox[{
        {"d"},
        {"1"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{
            Offset[0.2]}}, "RowsIndexed" -> {}}],
      Column], 
     TagBox[GridBox[{
        {"e"},
        {"1"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{
            Offset[0.2]}}, "RowsIndexed" -> {}}],
      Column]},
    {
     TagBox[GridBox[{
        {"a"},
        {"2"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{
            Offset[0.2]}}, "RowsIndexed" -> {}}],
      Column], 
     TagBox[GridBox[{
        {"b"},
        {"2"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{
            Offset[0.2]}}, "RowsIndexed" -> {}}],
      Column], 
     TagBox[GridBox[{
        {"c"},
        {"2"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{
            Offset[0.2]}}, "RowsIndexed" -> {}}],
      Column], 
     TagBox[GridBox[{
        {"d"},
        {"2"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{
            Offset[0.2]}}, "RowsIndexed" -> {}}],
      Column], 
     TagBox[GridBox[{
        {"e"},
        {"2"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{
            Offset[0.2]}}, "RowsIndexed" -> {}}],
      Column]},
    {
     TagBox[GridBox[{
        {"a"},
        {"3"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{
            Offset[0.2]}}, "RowsIndexed" -> {}}],
      Column], 
     TagBox[GridBox[{
        {"b"},
        {"3"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{
            Offset[0.2]}}, "RowsIndexed" -> {}}],
      Column], 
     TagBox[GridBox[{
        {"c"},
        {"3"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{
            Offset[0.2]}}, "RowsIndexed" -> {}}],
      Column], 
     TagBox[GridBox[{
        {"d"},
        {"3"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{
            Offset[0.2]}}, "RowsIndexed" -> {}}],
      Column], 
     TagBox[GridBox[{
        {"e"},
        {"3"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{
            Offset[0.2]}}, "RowsIndexed" -> {}}],
      Column]},
    {
     TagBox[GridBox[{
        {"a"},
        {"4"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{
            Offset[0.2]}}, "RowsIndexed" -> {}}],
      Column], 
     TagBox[GridBox[{
        {"b"},
        {"4"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{
            Offset[0.2]}}, "RowsIndexed" -> {}}],
      Column], 
     TagBox[GridBox[{
        {"c"},
        {"4"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{
            Offset[0.2]}}, "RowsIndexed" -> {}}],
      Column], 
     TagBox[GridBox[{
        {"d"},
        {"4"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{
            Offset[0.2]}}, "RowsIndexed" -> {}}],
      Column], 
     TagBox[GridBox[{
        {"e"},
        {"4"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{
            Offset[0.2]}}, "RowsIndexed" -> {}}],
      Column]},
    {
     TagBox[GridBox[{
        {"a"},
        {"5"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{
            Offset[0.2]}}, "RowsIndexed" -> {}}],
      Column], 
     TagBox[GridBox[{
        {"b"},
        {"5"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{
            Offset[0.2]}}, "RowsIndexed" -> {}}],
      Column], 
     TagBox[GridBox[{
        {"c"},
        {"5"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{
            Offset[0.2]}}, "RowsIndexed" -> {}}],
      Column], 
     TagBox[GridBox[{
        {"d"},
        {"5"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{
            Offset[0.2]}}, "RowsIndexed" -> {}}],
      Column], 
     TagBox[GridBox[{
        {"e"},
        {"5"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{
            Offset[0.2]}}, "RowsIndexed" -> {}}],
      Column]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.64181964787333*^9, 3.6418196661510468`*^9}, 
   3.64191008973009*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "myNestedList2", "]"}]], "Input",
 CellChangeTimes->{{3.641819640981083*^9, 3.641819683740611*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"a"},
          {"1"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"b"},
          {"1"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"c"},
          {"1"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"d"},
          {"1"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"e"},
          {"1"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"a"},
          {"2"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"b"},
          {"2"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"c"},
          {"2"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"d"},
          {"2"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"e"},
          {"2"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"a"},
          {"3"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"b"},
          {"3"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"c"},
          {"3"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"d"},
          {"3"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"e"},
          {"3"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"a"},
          {"4"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"b"},
          {"4"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"c"},
          {"4"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"d"},
          {"4"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"e"},
          {"4"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"a"},
          {"5"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"b"},
          {"5"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"c"},
          {"5"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"d"},
          {"5"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"e"},
          {"5"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.641819684487236*^9}]
}, Open  ]],

Cell["Accessing elements of lists:", "Text",
 CellChangeTimes->{{3.641819704026775*^9, 3.641819708955106*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myList1", "[", 
  RowBox[{"[", "3", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6418197776838007`*^9, 3.641819783907791*^9}}],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{{3.641819779623481*^9, 3.641819784292218*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myList1", "[", 
  RowBox[{"[", "All", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.641819786403803*^9, 3.641819792413468*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{3.6418197930919857`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myList1", "[", 
  RowBox[{"[", 
   RowBox[{"1", ";;", "4"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.64181979767691*^9, 3.641819803100246*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.6418198037938633`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myList1", "[", 
  RowBox[{"[", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5", ",", "6"}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.641820142969782*^9, 3.6418201495861263`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "5", ",", "6"}], "}"}]], "Output",
 CellChangeTimes->{3.641820150682925*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myNestedList1", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6418197142356873`*^9, 3.6418197277889023`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "b"}], "}"}]], "Output",
 CellChangeTimes->{{3.641819724276984*^9, 3.6418197284150953`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myNestedList1", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6418197142356873`*^9, 3.6418197277889023`*^9}, {
  3.641819822573201*^9, 3.641819822659864*^9}}],

Cell[BoxData["b"], "Output",
 CellChangeTimes->{3.6418198230129757`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myNestedList2", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.641819737564042*^9, 3.641819744220332*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"e", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.641819744595415*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myNestedList2", "[", 
  RowBox[{"[", 
   RowBox[{"2", ",", "4"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.641819737564042*^9, 3.641819744220332*^9}, {
  3.64181983586166*^9, 3.641819836916216*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"d", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.641819744595415*^9, 3.641819837457294*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myNestedList2", "[", 
  RowBox[{"[", 
   RowBox[{"All", ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.641819737564042*^9, 3.641819744220332*^9}, {
  3.64181983586166*^9, 3.6418198503636417`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"b", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "5"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.641819744595415*^9, {3.641819837457294*^9, 3.641819850731792*^9}}]
}, Open  ]],

Cell["Counting from the end:", "Text",
 CellChangeTimes->{{3.641820073266342*^9, 3.6418200786408577`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myList1", "[", 
  RowBox[{"[", 
   RowBox[{"-", "3"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6418200805459623`*^9, 3.6418200859863234`*^9}}],

Cell[BoxData["8"], "Output",
 CellChangeTimes->{3.641820086373485*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myList1", "[", 
  RowBox[{"[", 
   RowBox[{
    RowBox[{"-", "6"}], ";;", 
    RowBox[{"-", "4"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.641820099299797*^9, 3.6418201284263906`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", "6", ",", "7"}], "}"}]], "Output",
 CellChangeTimes->{{3.641820114268425*^9, 3.641820128866626*^9}}]
}, Open  ]],

Cell["Asking for the position of an element in a list:", "Text",
 CellChangeTimes->{{3.641819907987668*^9, 3.64181991527429*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Position", "[", 
  RowBox[{"myList1", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.641819917578896*^9, 3.641819931524684*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "3", "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.641819927828107*^9, 3.64181993194916*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Position", "[", 
  RowBox[{"myNestedList2", ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6418199381467953`*^9, 3.6418199469471893`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"2", ",", "2"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.6418199485651417`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Check", ":"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"myNestedList2", "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", "2"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.641819955530939*^9, 3.641819978051503*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"b", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.6418199638912697`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Some list manipulations", "Subsection",
 CellChangeTimes->{{3.641815292821414*^9, 3.64181529523733*^9}, {
  3.6418201693464212`*^9, 3.641820171312492*^9}}],

Cell[CellGroupData[{

Cell[BoxData["myNestedList1"], "Input",
 CellChangeTimes->{{3.641820285169244*^9, 3.6418202896967278`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", "d"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6418202901577682`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "[", "myNestedList1", "]"}]], "Input",
 CellChangeTimes->{{3.6418202924344788`*^9, 3.641820296833259*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}]], "Output",
 CellChangeTimes->{3.6418202972646847`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["myNestedList2"], "Input",
 CellChangeTimes->{{3.641820301378336*^9, 3.641820304032791*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"e", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"e", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"e", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"e", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"e", ",", "5"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6418203047893972`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "[", "myNestedList2", "]"}]], "Input",
 CellChangeTimes->{{3.641820307170227*^9, 3.641820312273192*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "a", ",", "1", ",", "b", ",", "1", ",", "c", ",", "1", ",", "d", ",", "1", 
   ",", "e", ",", "1", ",", "a", ",", "2", ",", "b", ",", "2", ",", "c", ",", 
   "2", ",", "d", ",", "2", ",", "e", ",", "2", ",", "a", ",", "3", ",", "b", 
   ",", "3", ",", "c", ",", "3", ",", "d", ",", "3", ",", "e", ",", "3", ",", 
   "a", ",", "4", ",", "b", ",", "4", ",", "c", ",", "4", ",", "d", ",", "4", 
   ",", "e", ",", "4", ",", "a", ",", "5", ",", "b", ",", "5", ",", "c", ",", 
   "5", ",", "d", ",", "5", ",", "e", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.641820312848876*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["myList1"], "Input",
 CellChangeTimes->{{3.641820318826107*^9, 3.6418203202969313`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{3.641820320718487*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myList2", "=", 
  RowBox[{"{", 
   RowBox[{
   "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g", ",", "h", 
    ",", "i", ",", "j"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.641820322377412*^9, 3.641820352321178*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g", ",", "h", 
   ",", "i", ",", "j"}], "}"}]], "Output",
 CellChangeTimes->{3.641820353259169*^9, 3.641910567331676*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Riffle", "[", 
  RowBox[{"myList1", ",", "myList2"}], "]"}]], "Input",
 CellChangeTimes->{{3.641820355576387*^9, 3.641820360704905*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "a", ",", "2", ",", "b", ",", "3", ",", "c", ",", "4", ",", "d", 
   ",", "5", ",", "e", ",", "6", ",", "f", ",", "7", ",", "g", ",", "8", ",", 
   "h", ",", "9", ",", "i", ",", "10", ",", "j"}], "}"}]], "Output",
 CellChangeTimes->{3.64182036114859*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Join", "[", 
  RowBox[{"myList1", ",", 
   RowBox[{"myList2", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "5"}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.64182037251368*^9, 3.64182038457651*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10", ",", "a", ",", "b", ",", "c", ",", "d", ",", "e"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.641820378381366*^9, 3.6418203850089893`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Partition", "[", 
  RowBox[{"myList1", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.641820395960167*^9, 3.641820401105975*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "10"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6418204014977407`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Partition", "[", 
  RowBox[{
   RowBox[{"Riffle", "[", 
    RowBox[{"myList1", ",", "myList2"}], "]"}], ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.64182040789581*^9, 3.6418204205521317`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "a"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "b"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "d"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "e"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "f"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "g"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "h"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "i"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "j"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.641820416831401*^9, 3.6418204208658667`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myList3", "=", 
  RowBox[{"{", 
   RowBox[{"20", ",", "4", ",", "10", ",", "2", ",", "4", ",", "5"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.641820450561569*^9, 3.6418204615282507`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"20", ",", "4", ",", "10", ",", "2", ",", "4", ",", "5"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.641820462516621*^9, 3.641910737228154*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sort", "[", "myList3", "]"}]], "Input",
 CellChangeTimes->{{3.641820464456121*^9, 3.641820467336314*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "4", ",", "4", ",", "5", ",", "10", ",", "20"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.641820468015972*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Split", "[", "myList1", "]"}]], "Input",
 CellChangeTimes->{{3.641820495361988*^9, 3.6418204986880617`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", "4", "}"}], ",", 
   RowBox[{"{", "5", "}"}], ",", 
   RowBox[{"{", "6", "}"}], ",", 
   RowBox[{"{", "7", "}"}], ",", 
   RowBox[{"{", "8", "}"}], ",", 
   RowBox[{"{", "9", "}"}], ",", 
   RowBox[{"{", "10", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.641820499066182*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Split", "[", "myList3", "]"}]], "Input",
 CellChangeTimes->{{3.641820501809083*^9, 3.641820508228408*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "20", "}"}], ",", 
   RowBox[{"{", "4", "}"}], ",", 
   RowBox[{"{", "10", "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", "4", "}"}], ",", 
   RowBox[{"{", "5", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.641820508633843*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Split", "[", 
  RowBox[{"Sort", "[", "myList3", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.641820523704824*^9, 3.641820528303512*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "4"}], "}"}], ",", 
   RowBox[{"{", "5", "}"}], ",", 
   RowBox[{"{", "10", "}"}], ",", 
   RowBox[{"{", "20", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.641820528936384*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rules and their application", "Subsection",
 CellChangeTimes->{{3.641815705220533*^9, 3.641815710130662*^9}}],

Cell["\<\
Rules can be used to replace expressions or symbols by another expression at \
a given point. This allows you to distinguish between \
\[OpenCurlyDoubleQuote]general\[CloseCurlyDoubleQuote] expressions and their \
specific meaning for particular variable/paramter values.\
\>", "Text",
 CellChangeTimes->{{3.641820560784066*^9, 3.64182064361335*^9}}],

Cell["Rules are defined using an arrow \[OpenCurlyDoubleQuote]->\
\[CloseCurlyDoubleQuote]:", "Text",
 CellChangeTimes->{{3.641820678983905*^9, 3.6418206923891993`*^9}}],

Cell[BoxData[
 RowBox[{"myRule1", ":=", 
  RowBox[{"a", "\[Rule]", "5"}]}]], "Input",
 CellChangeTimes->{{3.64182064563074*^9, 3.641820651719348*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"b", "=", "a"}]], "Input",
 CellChangeTimes->{{3.64182065620679*^9, 3.641820656966815*^9}}],

Cell[BoxData["a"], "Output",
 CellChangeTimes->{3.641820657436715*^9, 3.64191093259792*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["b"], "Input",
 CellChangeTimes->{3.641820662686767*^9}],

Cell[BoxData["a"], "Output",
 CellChangeTimes->{3.6418206630909243`*^9, 3.641910941153906*^9}]
}, Open  ]],

Cell["Rules are applied using \[OpenCurlyDoubleQuote]/.\
\[CloseCurlyDoubleQuote]:", "Text",
 CellChangeTimes->{{3.641820696725089*^9, 3.641820705684888*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"b", "/.", "myRule1"}]], "Input",
 CellChangeTimes->{{3.64182066486278*^9, 3.641820667838626*^9}}],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.641820669580476*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sin", "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.641820713694284*^9, 3.6418207165025682`*^9}}],

Cell[BoxData[
 RowBox[{"Sin", "[", "x", "]"}]], "Output",
 CellChangeTimes->{3.641820716944489*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Sin", "[", "x", "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    RowBox[{"2", "\[Pi]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.641820718982482*^9, 3.641820726940222*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.6418207275581284`*^9}]
}, Open  ]],

Cell["\<\
Alternatively, and equivalently, we can use \[OpenCurlyDoubleQuote]Replace\
\[CloseCurlyDoubleQuote] to apply the rule:\
\>", "Text",
 CellChangeTimes->{{3.641820798631441*^9, 3.641820820764598*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Replace", "[", 
  RowBox[{"b", ",", "myRule1"}], "]"}]], "Input",
 CellChangeTimes->{{3.6418208263015127`*^9, 3.6418208349338503`*^9}}],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.641820835369059*^9, 3.641911106930138*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Textual versus short-cut commands", "Subsection",
 CellChangeTimes->{{3.641815716658864*^9, 3.641815733050774*^9}}],

Cell["\<\
For many commands, there are short-cuts. We have seen an example above: The \
command \[OpenCurlyDoubleQuote]Replace\[CloseCurlyDoubleQuote] has the \
short-cut \[OpenCurlyDoubleQuote]./\[CloseCurlyDoubleQuote]. Rather than \
listing all combinations of commands and short-cuts here, we just mention \
this. You will encounter these pairs in practice early enough.\
\>", "Text",
 CellChangeTimes->{{3.641820842125779*^9, 3.641820930692225*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions", "Section",
 CellChangeTimes->{{3.641815914377644*^9, 3.641815915385474*^9}}],

Cell[CellGroupData[{

Cell["Function definitions", "Subsection",
 CellChangeTimes->{{3.641820216241754*^9, 3.6418202186322613`*^9}}],

Cell["\<\
To define a function that takes arguments, we use the following syntax:\
\>", "Text",
 CellChangeTimes->{{3.6418672592752247`*^9, 3.641867278697006*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"myFunc1", "[", 
   RowBox[{"a_", ",", "b_", ",", "c_"}], "]"}], ":=", 
  RowBox[{"a", "+", 
   RowBox[{"b", "/", "c"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.641867280946405*^9, 3.641867301546245*^9}}],

Cell[TextData[{
 "Note that we use the delayed assignment \[OpenCurlyDoubleQuote]",
 Cell[BoxData[
  FormBox[":=", TraditionalForm]]],
 "\[CloseCurlyDoubleQuote] here. Moreover, arguments are declared using the \
so-called pattern \[OpenCurlyDoubleQuote]",
 Cell[BoxData[
  FormBox["x_", TraditionalForm]]],
 "\[CloseCurlyDoubleQuote], which stands for \[OpenCurlyDoubleQuote]any \
expression, to be referred to as ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]]],
 "\[CloseCurlyDoubleQuote]. It often makes sense to place functions in an \
\[OpenCurlyDoubleQuote]initialization cell\[CloseCurlyDoubleQuote], so that \
they are defined whenever the Notebook is initialised."
}], "Text",
 CellChangeTimes->{{3.641867359862433*^9, 3.6418674673651037`*^9}, {
  3.641867527723975*^9, 3.641867666304954*^9}}],

Cell["We can then use the function as follows:", "Text",
 CellChangeTimes->{{3.64186767662444*^9, 3.6418676844085007`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myFunc1", "[", 
  RowBox[{"1", ",", "4", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.641867686513587*^9, 3.641867705600625*^9}}],

Cell[BoxData[
 FractionBox["7", "3"]], "Output",
 CellChangeTimes->{3.6418677065987377`*^9}]
}, Open  ]],

Cell["Another example:", "Text",
 CellChangeTimes->{{3.641867723999818*^9, 3.641867733614805*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"myFunc2", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"\[Alpha]", " ", 
    SuperscriptBox["x", "2"]}], "+", 
   RowBox[{"\[Beta]", " ", "x"}], "+", "\[Gamma]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6418677371204653`*^9, 3.6418678156566353`*^9}}],

Cell[TextData[{
 "In this case, we define the function as a function of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", with parameters \[Alpha], \[Beta], and ",
 Cell[BoxData[
  FormBox["\[Gamma]", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " to be defined when we use the function:"
}], "Text",
 CellChangeTimes->{{3.641867831933201*^9, 3.6418678728767347`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myFunc2", "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.64186787471786*^9, 3.641867877157661*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["x", "2"], " ", "\[Alpha]"}], "+", 
  RowBox[{"x", " ", "\[Beta]"}], "+", "\[Gamma]"}]], "Output",
 CellChangeTimes->{3.641867877555436*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"myFunc2", "[", "x", "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Alpha]", "\[Rule]", "1"}], ",", 
    RowBox[{"\[Beta]", "\[Rule]", "2"}], ",", 
    RowBox[{"\[Gamma]", "\[Rule]", "4"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6418678819097157`*^9, 3.6418678970614223`*^9}}],

Cell[BoxData[
 RowBox[{"4", "+", 
  RowBox[{"2", " ", "x"}], "+", 
  SuperscriptBox["x", "2"]}]], "Output",
 CellChangeTimes->{3.641867897435836*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Recursions", "Subsection",
 CellChangeTimes->{{3.641820223007812*^9, 3.6418202242319393`*^9}}],

Cell[TextData[{
 "Recursion equations are, in most cases, best defined using the construction \
\[OpenCurlyDoubleQuote]",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "[", "x_", "]"}], ":=", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], "=", 
     RowBox[{"expression", " ", "including", " ", 
      RowBox[{"(", 
       RowBox[{"x", "-", "1"}], ")"}]}]}]}], TraditionalForm]]],
 "\[CloseCurlyDoubleQuote], in combination with the definition of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "[", "0", "]"}], TraditionalForm]]],
 ". The advantage of this construction is that the function is computed once \
for every ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]]],
 " and these values are then remembered. However, this only pays off if we \
initially assign specific numeric values to any of the parameters that are \
part of \[OpenCurlyDoubleQuote]expression including ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"x", "-", "1"}], ")"}], TraditionalForm]]],
 "\[CloseCurlyDoubleQuote]."
}], "Text",
 CellChangeTimes->{{3.641867926315371*^9, 3.641868010530025*^9}, {
  3.641868546809297*^9, 3.6418686202944403`*^9}, {3.641868704318384*^9, 
  3.641868711668743*^9}, {3.641868757995319*^9, 3.641868881257554*^9}, {
  3.641869572222719*^9, 3.641869574068118*^9}}],

Cell["\<\
For instance, the recursion equation for the logistic model of growth in \
discrete time can be implemented as follows:\
\>", "Text",
 CellChangeTimes->{{3.6418687140062304`*^9, 3.641868722724122*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "n", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n0", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myr", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"my\[CapitalKappa]", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "[", "t_", "]"}], ":=", 
  RowBox[{
   RowBox[{"n", "[", "t", "]"}], "=", " ", 
   RowBox[{
    RowBox[{"n", "[", 
     RowBox[{"t", "-", "1"}], "]"}], "+", 
    RowBox[{"myr", " ", 
     RowBox[{"n", "[", 
      RowBox[{"t", "-", "1"}], "]"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{"n", "[", 
         RowBox[{"t", "-", "1"}], "]"}], "my\[CapitalKappa]"]}], 
      ")"}]}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"n", "[", "0", "]"}], "=", "n0"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.641868623311583*^9, 3.641868686654859*^9}, {
   3.641869581958169*^9, 3.641869655829895*^9}, {3.641869695556575*^9, 
   3.6418697133550787`*^9}, {3.641869746227113*^9, 3.641869827681264*^9}, {
   3.641870094767428*^9, 3.641870142220297*^9}, {3.641870643054515*^9, 
   3.6418706547574244`*^9}, {3.64187084357732*^9, 3.64187087364773*^9}, 
   3.641872337462818*^9, {3.641872398550776*^9, 3.641872400133132*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"n", "[", "0", "]"}]], "Input",
 CellChangeTimes->{{3.641869644884272*^9, 3.641869670491757*^9}, {
  3.6418697167233*^9, 3.6418697168515987`*^9}, {3.641869832102439*^9, 
  3.641869836048004*^9}, {3.641869939302988*^9, 3.641869977270216*^9}, {
  3.6418701616818533`*^9, 3.641870162721837*^9}, {3.641870472858529*^9, 
  3.641870474311178*^9}}],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{3.6418704752057056`*^9, 3.641870546458156*^9, 
  3.641870662654957*^9, 3.641870875661128*^9, 3.641871021201705*^9, 
  3.64187234349116*^9, 3.641872402259314*^9, 3.641912473617041*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"n", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.641870477006681*^9, 3.641870478071137*^9}}],

Cell[BoxData["14.95`"], "Output",
 CellChangeTimes->{3.6418704785027323`*^9, 3.6418705474758167`*^9, 
  3.6418706637587433`*^9, 3.641870876683282*^9, 3.6418710222344847`*^9, 
  3.6418723442063637`*^9, 3.641872403689619*^9, 3.641912476078619*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"n", "[", "100", "]"}]], "Input",
 CellChangeTimes->{{3.641869644884272*^9, 3.641869670491757*^9}, {
  3.6418697167233*^9, 3.6418697168515987`*^9}, {3.641869832102439*^9, 
  3.641869836048004*^9}, {3.641869939302988*^9, 3.641869977270216*^9}, {
  3.6418701616818533`*^9, 3.641870162721837*^9}}],

Cell[BoxData["999.9999999999999`"], "Output",
 CellChangeTimes->{{3.64186968810614*^9, 3.6418697173198843`*^9}, 
   3.64186975189666*^9, {3.641869795387974*^9, 3.64186984766035*^9}, {
   3.6418699399953327`*^9, 3.6418699724261*^9}, {3.641870150407497*^9, 
   3.6418701631845407`*^9}, 3.64187050992824*^9, 3.641870548589176*^9, 
   3.641870664855681*^9, 3.641870877586832*^9, 3.641871023204371*^9, 
   3.641872344901566*^9, 3.641872404908463*^9, 3.641912478390568*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"n", "[", "2000", "]"}]], "Input",
 CellChangeTimes->{{3.6418705511975803`*^9, 3.6418705549183683`*^9}, {
  3.64187096450173*^9, 3.641870964622596*^9}, {3.641871000102178*^9, 
  3.641871028886827*^9}}],

Cell[BoxData[
 RowBox[{"Hold", "[", 
  RowBox[{
   RowBox[{"n", "[", 
    RowBox[{"978", "-", "1"}], "]"}], "+", 
   RowBox[{"myr", " ", 
    RowBox[{"n", "[", 
     RowBox[{"978", "-", "1"}], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{"n", "[", 
        RowBox[{"978", "-", "1"}], "]"}], "my\[CapitalKappa]"]}], ")"}]}]}], 
  "]"}]], "Output",
 CellChangeTimes->{
  3.6418705561833572`*^9, 3.641870668158321*^9, 3.641870878625165*^9, 
   3.641870965137693*^9, {3.641871000882812*^9, 3.641871030282647*^9}, 
   3.641872345651574*^9, 3.641872406000608*^9, {3.641912481080019*^9, 
   3.641912485514367*^9}}]
}, Open  ]],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " by default sets the recursion limit to ",
 Cell[BoxData[
  FormBox["1024", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " to prevent unintended infinite loops. To navigate around this, you can set \
this recursion limit to infinity. It is a good idea to do this locally in a \
so-called \[OpenCurlyDoubleQuote]Block\[CloseCurlyDoubleQuote]:"
}], "Text",
 CellChangeTimes->{{3.641870320617485*^9, 3.6418704225345993`*^9}, {
  3.641870982902128*^9, 3.6418709834615507`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"$RecursionLimit", "=", "Infinity"}], "}"}], ",", 
   RowBox[{"n", "[", "2000", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.641870426559947*^9, 3.641870448391837*^9}, {
  3.6418707244539633`*^9, 3.641870726310392*^9}, {3.6418707999036417`*^9, 
  3.64187080042244*^9}}],

Cell[BoxData["999.9999999999999`"], "Output",
 CellChangeTimes->{3.641870808844249*^9, 3.6418709918140182`*^9, 
  3.6418710341076193`*^9, 3.641872349095779*^9, 3.6418724078761683`*^9, 
  3.641912498897521*^9}]
}, Open  ]],

Cell["\<\
As another example, consider the diploid model of natural selection in \
discrete time:\
\>", "Text",
 CellChangeTimes->{{3.6418710397171297`*^9, 3.6418710562212667`*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "p", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p0", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myW11", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myW12", "=", 
   RowBox[{
    RowBox[{"1", "-", 
     RowBox[{"h", " ", "s"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"h", "\[Rule]", "0.5"}], ",", 
      RowBox[{"s", "\[Rule]", "0.05"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myW22", "=", 
   RowBox[{
    RowBox[{"1", "-", "s"}], "/.", 
    RowBox[{"{", 
     RowBox[{"s", "\[Rule]", "0.05"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "[", "t_", "]"}], ":=", 
  RowBox[{
   RowBox[{"p", "[", "t", "]"}], "=", 
   RowBox[{
    RowBox[{"p", "[", 
     RowBox[{"t", "-", "1"}], "]"}], 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"p", "[", 
        RowBox[{"t", "-", "1"}], "]"}], "myW11"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"p", "[", 
          RowBox[{"t", "-", "1"}], "]"}]}], ")"}], "myW12"}]}], 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"p", "[", 
         RowBox[{"t", "-", "1"}], "]"}], "2"], "myW11"}], "+", 
      RowBox[{"2", 
       RowBox[{"p", "[", 
        RowBox[{"t", "-", "1"}], "]"}], 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"p", "[", 
          RowBox[{"t", "-", "1"}], "]"}]}], ")"}], "myW12"}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"p", "[", 
           RowBox[{"t", "-", "1"}], "]"}]}], ")"}], "2"], 
       "myW22"}]}]]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p", "[", "0", "]"}], "=", "p0"}], ";"}]}], "Input",
 CellChangeTimes->{{3.641871060118438*^9, 3.6418712756469603`*^9}, {
  3.641871311952132*^9, 3.641871314375495*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "[", "3", "]"}]], "Input",
 CellChangeTimes->{{3.641871252303647*^9, 3.641871258431553*^9}, {
  3.641912578500814*^9, 3.6419125905115023`*^9}}],

Cell[BoxData["0.010801455614944326`"], "Output",
 CellChangeTimes->{{3.64187125888605*^9, 3.641871277989304*^9}, 
   3.641871315932351*^9, {3.641912579783428*^9, 3.641912591015379*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "[", "10", "]"}]], "Input",
 CellChangeTimes->{{3.641871260490484*^9, 3.6418712629657583`*^9}}],

Cell[BoxData["0.012926807793172002`"], "Output",
 CellChangeTimes->{{3.641871269198954*^9, 3.6418712792463713`*^9}, 
   3.641871316779694*^9, 3.641912593802947*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "[", "100", "]"}]], "Input",
 CellChangeTimes->{{3.64187128161366*^9, 3.641871283301981*^9}}],

Cell[BoxData["0.11914319889249098`"], "Output",
 CellChangeTimes->{3.6418712840846767`*^9, 3.6418713176825666`*^9, 
  3.641912596916988*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "[", "1000", "]"}]], "Input",
 CellChangeTimes->{{3.6418712890305758`*^9, 3.641871290990151*^9}}],

Cell[BoxData["0.9999999991098304`"], "Output",
 CellChangeTimes->{{3.6418712913980627`*^9, 3.641871318681861*^9}, 
   3.6419125990046053`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Approximating a function using a Taylor series", "Subsection",
 CellChangeTimes->{{3.641898008668228*^9, 3.641898017394453*^9}}],

Cell["A Taylor series of a function can be obtained as follows:", "Text",
 CellChangeTimes->{{3.641898021594387*^9, 3.641898041865555*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myFunc2", "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.6418980467475452`*^9, 3.641898048747772*^9}, {
  3.64189808329147*^9, 3.641898083900756*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["x", "2"], " ", "\[Alpha]"}], "+", 
  RowBox[{"x", " ", "\[Beta]"}], "+", "\[Gamma]"}]], "Output",
 CellChangeTimes->{3.641898049227168*^9, 3.641898084285749*^9, 
  3.641912617415093*^9}]
}, Open  ]],

Cell[TextData[{
 "A 1st-order Taylor series of \[OpenCurlyDoubleQuote]myFunc2\
\[CloseCurlyDoubleQuote] around ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "0"}], TraditionalForm]]],
 ":"
}], "Text",
 CellChangeTimes->{{3.641898106625618*^9, 3.641898126449422*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"myFunc2", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.641898087427381*^9, 3.64189810221154*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\[Gamma]", "+", 
   RowBox[{"\[Beta]", " ", "x"}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "x", "]"}], "2"],
    SeriesData[$CellContext`x, 0, {}, 0, 2, 1],
    Editable->False]}],
  SeriesData[$CellContext`x, 0, {$CellContext`\[Gamma], $CellContext`\[Beta]},
    0, 2, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.6418980972592697`*^9, 3.64189810281319*^9}, 
   3.641912663304057*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{"myFunc2", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}], "//", 
  "Normal"}]], "Input",
 CellChangeTimes->{{3.6419126865667343`*^9, 3.641912690228663*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"x", " ", "\[Beta]"}], "+", "\[Gamma]"}]], "Output",
 CellChangeTimes->{3.641912691708889*^9}]
}, Open  ]],

Cell[TextData[{
 "A 2nd-order Taylor series of a 3rd-order polynomial in ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " around ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "0"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ":"
}], "Text",
 CellChangeTimes->{{3.641898132553265*^9, 3.6418981591453943`*^9}, {
  3.641898208896673*^9, 3.6418982190370502`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"a", " ", 
     SuperscriptBox["x", "3"]}], "-", 
    RowBox[{"b", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"c", " ", "x"}], "-", "d"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.64189816192271*^9, 3.641898205346583*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"-", "d"}], "+", 
   RowBox[{"c", " ", "x"}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "x", "]"}], "2"],
    SeriesData[$CellContext`x, 0, {}, 0, 2, 1],
    Editable->False]}],
  SeriesData[$CellContext`x, 0, {-$CellContext`d, $CellContext`c}, 0, 2, 1],
  Editable->False]], "Output",
 CellChangeTimes->{3.641898205782651*^9, 3.641912727400655*^9}]
}, Open  ]],

Cell[TextData[{
 "The same, but around ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "1"}], TraditionalForm]]],
 ":"
}], "Text",
 CellChangeTimes->{{3.641898222408813*^9, 3.6418982282965918`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"a", " ", 
     SuperscriptBox["x", "3"]}], "-", 
    RowBox[{"b", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"c", " ", "x"}], "-", "d"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.64189816192271*^9, 3.641898235058226*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"c", "-", "d"}], ")"}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"a", "+", "c"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"x", "-", "1"}], ")"}]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", 
      RowBox[{"x", "-", "1"}], "]"}], "2"],
    SeriesData[$CellContext`x, 1, {}, 0, 2, 1],
    Editable->False]}],
  SeriesData[$CellContext`x, 
   1, {$CellContext`c - $CellContext`d, $CellContext`a + $CellContext`c}, 0, 
   2, 1],
  Editable->False]], "Output",
 CellChangeTimes->{3.641898235421217*^9, 3.641912765419269*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"a", " ", 
     SuperscriptBox["x", "3"]}], "-", 
    RowBox[{"b", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"c", " ", "x"}], "-", "d"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.641912770593533*^9, 3.6419127912705507`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"-", "d"}], "+", 
   RowBox[{"c", " ", "x"}], "-", 
   RowBox[{"a", " ", 
    SuperscriptBox["x", "2"]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "x", "]"}], "3"],
    SeriesData[$CellContext`x, 0, {}, 0, 3, 1],
    Editable->False]}],
  SeriesData[$CellContext`x, 
   0, {-$CellContext`d, $CellContext`c, -$CellContext`a}, 0, 3, 1],
  Editable->False]], "Output",
 CellChangeTimes->{3.641912791950951*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plotting", "Section",
 CellChangeTimes->{{3.641815918609702*^9, 3.641815925137678*^9}}],

Cell[CellGroupData[{

Cell["Plotting a continuous function", "Subsection",
 CellChangeTimes->{{3.641815931089497*^9, 3.641815936177446*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "\[Phi]", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6418713421572447`*^9, 3.641871353984935*^9}, {
  3.6418715218868723`*^9, 3.641871542077973*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
57aK
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, 2 Pi}, {-0.9999998593152271, 0.9999998782428621}}, {{
     0, 6.283185307179586}, {-0.9999998593152271, 0.9999998782428621}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6418713552003202`*^9, 3.6418715428448668`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "myFunc1"}]], "Input",
 CellChangeTimes->{{3.641871406261187*^9, 3.641871412174103*^9}}],

Cell[CellGroupData[{

Cell["Global`myFunc1", "Print", "PrintUsage",
 CellChangeTimes->{3.6424206957955713`*^9},
 CellTags->"Info3642395495-6639012"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"myFunc1", "[", 
          RowBox[{"a_", ",", "b_", ",", "c_"}], "]"}], ":=", 
         RowBox[{"a", "+", 
          FractionBox["b", "c"]}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[$CellContext`myFunc1],
  Editable->False]], "Print",
 CellChangeTimes->{3.642420695859655*^9},
 CellTags->"Info3642395495-6639012"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"myFunc1", "[", 
    RowBox[{"1", ",", "2", ",", "c"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.641871380086447*^9, 3.641871436732505*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
NWtZNkr/C1Pb7ag=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 1.1},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 10}, {1.2000000040816328`, 3.4520201071480465`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.641871399608678*^9, 3.641871437262021*^9}]
}, Open  ]],

Cell["Adding axis labels:", "Text",
 CellChangeTimes->{{3.641871455965107*^9, 3.641871462795538*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "\[Phi]", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Phi]\>\"", ",", "\"\<Sin[\[Phi]]\>\""}], "}"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.6418713421572447`*^9, 3.641871353984935*^9}, {
  3.6418715218868723`*^9, 3.641871676905415*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
57aK
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\[Phi]\"", TraditionalForm], 
    FormBox["\"Sin[\[Phi]]\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, 2 Pi}, {-0.9999998593152271, 0.9999998782428621}}, {{
     0, 6.283185307179586}, {-0.9999998593152271, 0.9999998782428621}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.641871488883457*^9, 3.6418715841443243`*^9, {3.641871650884801*^9, 
   3.641871677356535*^9}}]
}, Open  ]],

Cell["Increasing the font size for the labels:", "Text",
 CellChangeTimes->{{3.641871663515457*^9, 3.6418716727140636`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "\[Phi]", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Phi]\>\"", ",", "\"\<Sin[\[Phi]]\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"FontSize", "\[Rule]", "14"}], "]"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.6418713421572447`*^9, 3.641871353984935*^9}, {
  3.6418715218868723`*^9, 3.641871650213105*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
57aK
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\[Phi]\"", TraditionalForm], 
    FormBox["\"Sin[\[Phi]]\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->Directive[FontSize -> 14],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, 2 Pi}, {-0.9999998593152271, 0.9999998782428621}}, {{
     0, 6.283185307179586}, {-0.9999998593152271, 0.9999998782428621}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.641871680255416*^9}]
}, Open  ]],

Cell["Changing the style of the line:", "Text",
 CellChangeTimes->{{3.641871663515457*^9, 3.6418716727140636`*^9}, {
  3.641871702892008*^9, 3.6418717080981007`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "\[Phi]", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Phi]\>\"", ",", "\"\<Sin[\[Phi]]\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"FontSize", "\[Rule]", "14"}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"Red", ",", "Dashed"}], "}"}], "}"}]}]}], "\[IndentingNewLine]",
   "]"}]], "Input",
 CellChangeTimes->{{3.6418713421572447`*^9, 3.641871353984935*^9}, {
  3.6418715218868723`*^9, 3.641871650213105*^9}, {3.641871710892206*^9, 
  3.641871722339768*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
    Dashing[{Small, Small}], LineBox[CompressedData["
1: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
57aK
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\[Phi]\"", TraditionalForm], 
    FormBox["\"Sin[\[Phi]]\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->Directive[FontSize -> 14],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, 2 Pi}, {-0.9999998593152271, 0.9999998782428621}}, {{
     0, 6.283185307179586}, {-0.9999998593152271, 0.9999998782428621}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.641871680255416*^9, 3.64187172269904*^9}]
}, Open  ]],

Cell["Plotting multiple functions:", "Text",
 CellChangeTimes->{{3.6418717315078697`*^9, 3.6418717375302753`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", "[", "\[Phi]", "]"}], ",", 
     RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Phi]\>\"", ",", "\"\<Sin[\[Phi]], Cos[\[Phi]]\>\""}], 
     "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"FontSize", "\[Rule]", "14"}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Red", ",", "Dashed"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Gray", ",", "DotDashed"}], "}"}]}], "}"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.6418713421572447`*^9, 3.641871353984935*^9}, {
  3.6418715218868723`*^9, 3.641871650213105*^9}, {3.641871710892206*^9, 
  3.641871789482565*^9}, {3.6419131836395493`*^9, 3.6419131916571283`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
    Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwl2Xc8Vf//AHB7j3vPJWRXJGkYlaReb5VdiqSlCB8tmZFUtMtIShkZJbIi
JCPhnVVIUhnRUjb33iPzXqvf+T5+f70fz8e5j3vO+/0a7/d5HHUXL7v/+Hh4
ePJ4eXj+N/JjseaedZe3TFX+/6i2SE1TJdoJ9PsMfypR4+SPKJvOe14w1iS7
ppUau00a/hTfC4FonqX/PaHGNr++nKf37kCgA1/JHmpsiRinJ917BGkMny17
7z6CnfFBtXH38mCPj3vmudt5EKFamRRzD8P5HQZrlIMxDE8L/TPxawHznK9G
YqYtYDh/d3eh91ewT9ikUd7ZAQ0/91/lW9oNYwZ1ry2YPwFttZ9Nd+kFW90U
mzqRHjjobTladGAQTPNiJi3p/VCprn3lzVMmSM1fWfGMMwgzH4xOPy5mQvHP
M3Lr+IdgXZD1/kvvmCDb1kgrlRyCnM8eq9EQE/a9HFfIWjIECVfzurAOCwba
uww27BiCwD4DfVzIgpFZHxHe5CHQz4Leiio2KCXXn9hgPAz2cdqpPzxHgea9
rSbWZQSE/+ScLg8YheHtrxmvTo5A2co1hgnBo+CbMlX1xXcE1LD+h/2Ro/Ay
4feaySsjwOoznv6SOwpBe4QUB5+MwA39XdaNzFFA9LqQiN8jUNrsN1588i9Y
PtjuUn2ACafkpyoe+P6FfTqcCvGjTFBxCbx1Jugv3K9s22RznAnXJi8o64X9
Bc0G0djKACbYKt0wz836C2uc7zzcEc2E4RNxCamDfyEg4+BepfdMUBSs2Bbl
PgblxmeYwetY0KpxTlDBawzSXLtD/IxZEGm27l3K2TGYXjpR5bSNBXy3cq0K
b43Buil9K1VbFgyKJdu2Z4+BhtU1AyMPFhTTQpyUyDFQXZ9f8+Mxi7q/yfnM
s+PA/jzb08zPBrHN88a6l8YhP/FJVpEoG2oPv1p4dWscUs+H90RLs8Hwke6V
9/HjEH4oMHe9IhtUliwJZb8eh69r40/J6rGBuZw/1oBnAnoHPyxff4QNN/Xr
Xry5NQHqz707uHlsaDc/b1kaNQE/jFYfCnrJhmWOut15cROgpjVkMl7Khupr
SZKPMieg9OqQfjMVx4U2/+MX6yfgQX5wuNYXNgQEaqoYiUwC89W1xZ4TbKiL
+P5SlzYJwue0d57hsEEm5Z71CvlJEHo79sl3jg0vGhYC5bUm4XTz1If9AiSw
F3d8mTKfhIGi0DP1DBLcK26GFt6chJ3WwpnrdEko+rRZ7dmdSdhvpx32xoAE
gf7x4iexkxATdCFvmyEJT6Sce+9mTELKHoM3ekDCTydD8H43Cb9fiPwp3EGC
A9/QhI7wFNhkmXuauJPwdNGj8GXSU7D8m7Tq7hMkTGjvXaIkNwUu3xcE93mQ
cG9P1S7x5VPQ9tzOb6cvCc1p8dlDZlOwMsi85PtFEkzNrZzTb0xB0BJPs2vR
JOwadevwj5yCQZfnmqIxJByID7ExjZmC++sXX7oRR8LpkZfGvU+nYHfPosST
SSQ8uKOqsKRuCmZ7Ao9/TSfhkaFR1N+mKeio/sGrnkVC1m974arWKTh37re0
yzMSKvTDJp16p8BKP+XmhzwS+jomPiXxT0M153iHZSkJ5CVpy9Pi05Cnpirs
UEYCd4X2G2PGNCz2O5hxsJwEyQtOz78tmYbOKf8NO9+QsE6tMUxh6zTsENoU
2vGOhOvHH217cGkaHvwqj7rURsIdelmZ261pUHrFF83oICG+rFXXIGoaXC5N
LCR/JSFXQkzty6Np2PTGjXj0jYS2/DNzNDwNp9ITlLf/JuHXgTt+3W+noWVg
n+vDPyQM8WUP5zVPwwjJQxvqIWHe/tdXm5+Ul35P9OonQYNrWRQxPw1eBt4X
1EdIWPPETcdRkAN98vDXiEnCRuuQ1JWSHJC9kNe4g0XCzqSXdxuVOFBzyyf7
AEnCPrOPIg+XcSBZ1SzffpSEo+RQyAkdDkjRqhUs/pLgb6LqKWLMAeH3DYvk
x0kIGd7Y17GNA0qCA1kTlEOj7R0zrDkwfbb5UcMECUl9oVZmh6jff9crdJwi
ISMyrUrWlQMP3+xqWTxNQsEGbNh3kgMNtQG7PlGuC53QvBbEgaeiG/yWc0lo
F7V8MH+FA0lXo3e1Uu4PTeI/G84Bu5AE/cAZEqZFx3xGozkgzq+uypglQSTM
rPtEIgd2xHPoTynLiyXY9KRx4OdurvjqORJWhJHljrkc+F4+J/GcslVYXPyu
Sg6cuh+8NHqehINiLOGGtxzQLi835FA+FWYSsPUjB+ppF+3tF0i4IBbT+7qD
A5GvnwZkUI4IG7Zb182BXSdVH/2lnCgGVc8HOXB6V9sHvX9UfMOi12j9pe6n
XsR3inKl2GBSCpcDOsp5mx9Sbg4zllDk40IEb3HwG8o/xe4G3RfjQiMD1/2g
TIb1DUoyuHBIuZoYo8wjbrTvpiJlj1f/zVOmhUfW8SzjQuSXlMp/lNXFe/SD
dLjgmh2kzKWsF77hybgBF0abTK8MUd4qHkE7vZkL3ARhVgvlPeHdwf2mXOif
e3s4j7Kb+DqWkw0X3h643XqN8pnw0EOdDlywSXG3taV8Xfxng50TFz6ZHW2V
oRwTrmfYdIwLW7ZGHv5IzT9d/Ga6qTcXlGm8rEuUS8K/yeBALtwo+HhlBeV6
8bVXDS9T13MI1QZqfb+GX/tbEMoFKbG+KifKg+KdTivvcWHhgNspFhUfbviq
5rSHXBDJy1f0pSwmccVYJZULxY+Zn1lUfBdHtGfHPuPCmNXmu86UtSVWKtBf
cmFuZ6NDI5UfmyJCboaVc8GtuWLpSsqOEVpuFz9wocbzdusnDgkeEhc/T7Vx
YdCjsVSO8sWIT8j7Jxfy0tY8tafyMTkiSNmV5MJB7d2xhZMk/I5oaregz4CE
1bUBwTESxiTUTasVZmCPQQRDgKoPvtv+hZuWzMD5yFJLLlVPy26rRK3Wn4EO
35y2eqre3G97W8rsnQHzr81n5gZJCJCsK7l9eAakrhfPvBgg4eZtBU1h9xkQ
L3a67UzVc+btar6ZgBmQGTjT9Ziq9+HbMuW/4mYgqDdbpfgHCVG8rv/ePZ6B
nNxOPfSdhPX+BVvzM2egsWkquLqLhCuONg2XSmdA/pvvmzyq/yisvNWu/nUG
NiOlcZ1PVD4mtyuIdc/AA9+DnwI/UvEnNA6PDczANPfpcPkHEvK5VT3V0zOw
JV6+ZVUjCRb1s6OucrNgaY19X1RT+80mK4MdqrOwWur5ujdUP7yfF3fWYPks
HI3ZuuFtJQndMesWBDbMQvjanZwyqp+e/c9LPN1hFiY0ekPMX1D5wtejMfhg
Fmx/ayuyHpGwI0D3REvSLKhcvykUQvX3saGQnNKnszC5UXOjaAIJWz4p6YcW
zcI0X3SAELU/tD1yQNpts/Dni59rWji1n21uPOghMwfess0PPP2p/nW24M7o
vTkYyHHfZrKNBKnqjY1XEubA1qR/1X1qfyuTqBaQTZuD2wGlaj83kUA8+Xxu
Y9EcaPXHL91H7Y+1TeOuVzrmQPhdbfmPZSRoLVlvKKM0DxF2bw23UPst2VTW
veHpPHxzXVtpX86GRLltio258+CdPTwRVsIGC5f3ex2L5+HhTd5DpS/Y8Hj6
W+Old/PghVvKOJlssFsy/7JhaB72FduPSj9gQ/FZCD20egFk96wLiD/FhotL
anVDShbgxYft4UsJNvTyFuwYwgtwVKRW44gEG3b8Tjq2p34BPk1UeEcJsWHx
47NJyzsXQPDLHZXvMywoVV4p2jKzALVlq4RpPSyYkL/XrbblH9jN9IWMFLDA
Q9r5TnXtPwgvCll60ZIFqxcuTvGd4EF7y9KN/JyZkHPMx5P04EHCP85XrKbO
fys/ufV/8+ZBIi73PHtsmaCVZt3+MpAHRU+HuhhuY4K6lUKx+y0edK1yZU2U
BhNkYl76N2bwILeODs7c4AjMrBqZuNvPg0CqW66FOp++O7x/XM2NF6WeuX3m
w8FhqH8x6O5ynBfZW/byLrEdhkbhc12pHrxI4E+Vkpf5MDQXxFdp+vOi7cOS
QuP6w9Aq+O2Ozg1etNBsNpEiMQx/cg/rGGbyovXhAgXJ5UMwN+/y3y4mLzJd
hNOXyw2BbvLpjotn+NDHoh4hlZIB2G5bdbDIlx89bT8+7f2rF1b27apbeUMA
ZXiF7b/q+Rt8aT7GyfcFkfhBsX/6wd/A9XmL3UiUENoTm7SoYXUraK46tfvs
E2F0bne/pl/rO4hW2c76kSKCClJrLvHw5oNzRl4MShRFPhrTFdkRzzEP3WH5
n2diyPqipXLa2XpsyTLadyRLHMXFZN837fuC3bIPeiqUSyDr/X2KBl3f8O8F
iXstDZLoc7aQT03Mbyz0dt7epU4KxS32knd83Yv/nV7xT69dGsWGvM7UbBjA
JxftylnVJY1WRd241PBlALdWnjmg9VMaPZlc4+f+cwBnS78pVO6XRrzeycmR
4wPYvsDhuMiUNApmvamNVR7E9jNVg2wxGnK8lS4a7j2IMzeTtrXaNDRUcuBx
D30I7661XOZ1koa0/EmbLybD+GXFpK+LBw2Z7yhzf201jOVLUqr2etIQ6btp
S9KeYdydxT1i7Ev5GbnU5r9h7H0nK140iIasVzrecbs1jKMOikqnhdJQixVd
1uXDMG4Zred+zaQhM52glLt2I9hg+IxFUzYNHf9QWJR7cATH9ajF4hwaMjk+
a1HjMoKd2wMN0vNpSPObYF+X7wgefa3l5VdKQ+IFsRWv741g2s1bvZL1NDQQ
b2m19dMItlW2+Lh1gIZKhidG91oycUBEdYLzEA0J2RWlGdsyceKs8fHgERpa
nSV1SvEAEw926vKWkTRUhio1q44zcXCMor4uh4ay7JlKuTeZOEeajFEVpSOB
tPwlgrVMLMQXc2ROm462u6yYTV/Pwjo+tJWLV9GRTEjcYPhmFrbrDpvesIaO
hohz6ce3s3BSZUiUnz4dSVb8Dhe1Y2GD8yeqhzfR0bFzcvWDHix8dMJYs3MH
HW240uaqmMLC5f09rCJPOlpKakdt52fjd58TvfK86chOOPHzaxE2/ly592+m
Lx25eu6uWSnFxoMx7yYSAujIf5Fh9qQ8G8uYP5u9HExHoXYHTuiuZmOPDF9R
m0g6WnHo7G3zfWysdJxXoz+Xjniq1Vr6Utl4uX1Z+q88Ovp79YqHdyYb6yE/
rc4COhoVM44az2FjC/m+lU1FdMTUtzvRU8TGZ+rr9V5U0FFtXOG2E+/YuEkr
CgV/oJ73y+0ciSE2Pj+k4riIRUcm64YtnmmS2MI6/ZARSUexvwbJu9oklsld
dejIXzrCcSNZXqtJ/Nzb+GD6JB2Fzd61o60ncff0gf3rF+holxb//v7tJDYV
emDvIE0gy5Zei15nEhPHleyD6ARSEPz9eJMbiX82pO5JZhBoy/PDs6HHSBx4
+4VdvxyB9rrRX4p7kjhbpmV3gBqBdn6/vDg1iMTSS8V3xugSyG7pzITaPRJ/
v3ZvR5k+gUxP84sO3idxZr/Cjp/rCPQuJZGeHkvirdla1ppGBJrSOjwvlETi
M7pmlsVbCTTuUb7CMYPEKPqDRdd2AnEzvjZ1ZZFYctLeYsGMQPmT147sziFx
eqmruZk1ge7pYCu1AhJ3wmXT9j0EUjR9qr+njLqeImI6s5dA/JqKhqHlJPbl
j9qusp9AtgHvNIorSSzxLnmbuyOBfvFYlE1Uk3iLTbnJlBuBjnxdXCLwnsSp
jtObFwUQaKFd44pXJ4ntN1WMyQYSiCbxz4zTRWKhxVczZIMIdNTMR+7cdxKf
7JCiywZT8zn2pNPlF4n17DR7GTcI1D+m29neS+Letcw4xi1q/gt4VLWfxDHS
L3YywggE08r0owMknmnaXEJEEshoSOzU+yESV5vvDaPHEKj1u/N5xKbWR1MR
6HEE6vSQ/2RJklhT8Pc47SGBCpUdVlmPkjis2uMwLZlAyz66cdaNkdg4RY+g
PSaQoMlrd9VxErNDOG+lnxDIq/hJF88Eie02X1srnU6gHYGmn59NklhAyapP
KpNABpoxe/2nSFw8I/1QKptA2Q+f/Fg/TeLFpQn8Us8JdODGmtkUDombYo6W
SuYT6PvuvVHWXBIH+y8/LfmCQHG3Lq9gUf6jV9guUUygoNadx+RnSXyffi5c
opRAK9akij+hbDa6BUmUUfe7dqJw6RyJOc0Ck+LlBFrrd+lIEuXs3MYs8UoC
WTxskJCeJ7FjRNQR8TcE2hajVRlIWeqUA0O8mkARfFd9uyi/sVSqF6slkPG5
NysMFqh4a/25IPaWyufoxp7rlJcJZ+qK1RModSDiMXXexu19p/tFGwnEkJx0
ov8j8a1a/QTRJgK5xo2pW1M2SuXuEm0mkL3y2f4LlJmXsYBoC4FOrQ7ITaec
7Hz9lchnAs049gXUU94N1p4irQRS31i+9Q9lXhX6UpF2ArXYTtAmKL+Ya+8Q
/krF3yD0N/X+gd2+JUYIdxHooWfgS+r9Ay8qczER/k6gvLCqUOr9A9fHaU0J
/SQQYrgfHaEcdJadLdRNoIN3T2xqo6zj8NJJ6A+BuiI+yZVQ/mkQJCPUSyCf
iKdTUZSjGKhBsJ9AibJkhwvlrWOCwYKDBErPefVah/JEy3s9wWECPWklnrCp
9UjPuzsgwCTQSWmx8EzK+yP3JQqwqef7kR9wkLLYaWVbgVFqvSsX/ydAudy6
R1BgjKr3tYcd0qn1VxP18uKfIpBm6XuTz1T8eCVtlLjTVD1ayD8+QvkPbVUD
m0ug//qEbXuo+KfKjyzpmifQiSsWz9pmSHxNqfHjx38Eum/UZb+Nspta1oU6
Xgbq946yzaLySVPrWHu+IAOVSPCYHqHyT1jH7Gq6MAMFDogY51L5ObhGY22i
KAM1a7fdmKDyN2tDT+hNSQaakzsl70Hlt4650+Yjsgx08k/n2n9/qX5ivWV4
jxwDWfpteU+jzLZRjrVUYCD/tLmyxVQ95Tl8GzVQZiDhOb8EOar+9Nz3pYlr
MJCWjOGxIqo+iZPrbXmXM9DNA2aFoYMkHj8tuzClxUD/jMocHKh6fun/Zd8f
HQb6hWfTvlL1v+H6LvFXBgxks/HUsctUf5APXV36fD0DfRtUOSv/k8r/CMn/
0gwZiNv6qjuD6idl999X3jFmoGk50Zo8qv8Yp5n7um+nrvOubnb9QmLlTE1V
RzMGCjqzpqTiE4kXngk22VpQz7dVel66hcS4sEZj8w4G2uggkpLURMW/BjoZ
9gwU8TFh7+E6Ei99p3JD1IGBVr/cohtUQ9X/+3m9f/sYSNdV5/SdKhLXfX4d
MXyIgT6oVQmnVlD7zZ8NqMqVgYZDNdo8i0hsw7s2w9OPgRgvrpnEp5J4NOjH
p0h/6v9j+96JpJA4eiJs7vlZBnJ0zHXySibx14E+W/I8Awk9d32rHk/io80J
c17XGEiuKva6YiTV3xKE7XweMNAB65oLrgFUPcgWXbgby0A9nBVnt/uR+FWk
S0ZBPAMtN+i9o+RNzfdyxdzfJAb66t2v+uIEiW8e98vwTWegDo2XX3wdSfxw
3a85vxIGEuA3drJG1PrlRSy//4qBFv82z0s2JvEvLSO7l6+p+fEuWjVkSPUH
pQcZE5iBHsrrFLvqkjiXz9rOv56Byg6sVSLVqf7ysTgjoJOBZgPN1jjzkrjv
RKTduVkGdf5SLyh8RZ0HnIP0/OcZSOpQ4GNE7ecTDu6Ezz8GqjcV43ubz8YC
27d8Ps4vg1wqLNTKMth4iQrbdr+4DLqeETxo/oCNnT/vtN2gKIPuKDlkzniy
cZeR5O5JIxl0fLjNqk6JjV10uWv+GsugPT7t71zk2Hh4eZ80a4sM0lQb+MGh
szFXpuJj71YZ9N03sktKmI3lSY9drVYy6IhOwaY/oyy8N7XJpvCgDHpYrfRp
eQ0Lt4hH7PQJkkEZUSJmhi4srBBo9iz2ggz6HHzY0e0QC7v08ohWBsugqPTS
6Zv2LDxZ7l8rdlUG3YjyqSsyY+HFnk6b0sJl0PPNQpPPtFn4vxa9FR2JMqjj
QPBpgb9MPHO/U2AzlkFC23hCz5xlYg2V5eUiArIorMPU6+OpEZycN0PXEJJF
u2okTsu5juBFJs3HTERkkYXX88Z91HlVyM2fESQhi/xDt+ZVWYzg/qyakyMy
smiQeczFSGMEp69zVmjWkEU/gtySqr4PY62d8QHR5rJIRWlg40azYax9QVxX
JVwWcQKdT7nwD+FrjDuTaqKLkPi2/Y8/OPVjc8X8VTV3F6HEUcsP5eo9+Iij
d5EdXQ5FpN5MqY39hTWHzm1zjpRDQ+VPMuujv+J9/WqmkovkkbNa7Vv1yBb8
Q+lYTMZ9eXS4tbtCNbEKO2gY932PkUcW5sWbVB2qcMsqugERL4+Kdca8FWhV
uHrL608XkuTRpZpZh4Wrb3Cms7SkXbo8+mF8vVm+oxL7ppVcnSuRR6wVr+Lj
/Mqo/ibiY/tNHpU0cTX/pBfgSwY/8I0f8ggPn+/9rVCAZ4xfSJX/kkehp96c
+h6Rj5k7HXM0e+VR3yxH6Hrfc/zZK39glimPVvyUksu7kI0TC/cfSV+QR8PL
B9CDrBQsW74q9xuPAopdomG66M5jHFnLN0fjV0B2Hb1By4aS8eW2nPjzwgro
0FHLOk7wQ+w+zdO2m6aAPu5e3WaafRd3/2tbeoNQQBL9TUOM4Uh8QOSZ72sZ
BdQ1Z1ZxLyQM71DYS9NUUECXt9+4ci77Mq5T13Y6pKiAhBa1WNWHBOEt2v9y
o5QVkAtb7uKDbB9cqtc6V6eqgNS6aA/Lso9i3U1Z1rPqCmiZ7u3/fd+q/D82
57aK
     "]]}, 
   {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
    Dashing[{0, Small, Small, Small}], LineBox[CompressedData["
1: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
lc+nxycZNH+S9iq9FLPJBUrw//8v/B9ZP2Am
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\[Phi]\"", TraditionalForm], 
    FormBox["\"Sin[\[Phi]], Cos[\[Phi]]\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->Directive[FontSize -> 14],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, 2 Pi}, {-0.9999998831351824, 0.9999999999999918}}, {{
     0, 6.283185307179586}, {-0.9999998831351824, 0.9999999999999918}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6418717519259768`*^9, 3.641871790076787*^9}, {
  3.641913186574843*^9, 3.6419131940445433`*^9}}]
}, Open  ]],

Cell["Changing the plot range and adding a title:", "Text",
 CellChangeTimes->{{3.641871843505427*^9, 3.641871851114305*^9}, {
  3.641871966436356*^9, 3.641871970794931*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"myFunc1", "[", 
    RowBox[{"1", ",", "2", ",", "c"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", "0", ",", "100"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "20"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "5"}], "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
   
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\!\(\*
StyleBox[\"c\",
FontSlant->\"Italic\"]\)\>\"", ",", "\"\<\!\(\*
StyleBox[\"a\",
FontSlant->\"Italic\"]\) + \!\(\*
StyleBox[\"b\",
FontSlant->\"Italic\"]\)/\!\(\*
StyleBox[\"c\",
FontSlant->\"Italic\"]\)\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<\!\(\*
StyleBox[\"a\",
FontSlant->\"Italic\"]\) = 1; \!\(\*
StyleBox[\"b\",
FontSlant->\"Italic\"]\) = 2\>\""}], ",", "\[IndentingNewLine]", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"FontSize", "\[Rule]", "14"}], "]"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.641871863749403*^9, 3.641872055157926*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwd1gkw1d8XAPBniWdNkoT8ZE/2ZM850Y6S9ZEtZSeyZCtKspQslaUspVD5
20lpUaHSoiQVEvqVkqjv+77Fzv/9/3fmzp3P3LnnzDl37sxd5x1q58NNoVAm
OfN/qzzPyA3kGQHK/4cEGh6qCN9UOwLKJYtxs84rsY1tdSGy8iu8fv5Guu24
ONqk0xsby/+FJlfLDUn3VmCfTH4vefUbPNQ3LOoUXIEHa8xYukXfIfVClNer
IDH8g/+uOpI/CtECkseTm5djzPtUg7rzP8AjYot2bo0o8vhqOv899xNexENs
2QMRzJzuidZKH4NPvk21okPCKHU2piAk+RfMR2pKF4gJ4/W1ci1VieNg9lC3
0cVOCLXq2vt/x/2G+Gd7qA2lgthiETCrfnQC8tPMTI0XBHDrB1GZwCOTwC+h
GXDnoAC6zrq4jfn9hbnJZKljNlQMf5bYekGXgEDvKAHet/x4N6tnz8ZaApw/
vg6fd+ZHC4WY0PBKOihc1xlsP86Hab9fLq1QI2H4ZLXziTV82NW0Nru+nIRD
kNd66t4ypO1oryOuMuDQekPqS8FlWCImuSVbjgkdo/QF1xZe/Nbv/067iAnj
OiWVr4N48XCwKHk4nwU78zyCLD/zYNOmA0miq9jA3Y8buvN5cGaxUbzmPBsq
Tb5UWjnzYHKOy8bJc1NgNuJrbD/EjS9dq9ozhKah7kQ3z9lyblyutGSvkT4N
zIW3SA3lxsvNZZFByTOgbRL73ZrKjcOJU7xC3LOg4OyV9ukTFyrt2p1bmTgL
V6vtSjVvcWHt57+3f8XNgenuoYf9tlzILLPYnj49B2aptX3cqlxocjj3o9rR
ebj4b+vu4kUKdlBMp/yOLIBIo7vTYD0FB5RTjH74LQElOfxyqwoFF5SShyWJ
JWjw8bOc56GgmPiWdkUzCvKFjfPc71gCvRUQ6NBBwZGgnriKrUsQs9z07u1e
LgwcujMVuH8RBJffE3ojxY3R7a5rfJQXoVDU2POHGzfeq4wZ/UssQKuIId/q
UW4U3V3XFZGxALzCGx1iWDw4pvsk99z7ecgTariRbcyLCglnN3rcnAdVId25
m8d5cfejkk82CfOwW1D7Wv+yZXiFYlLioTkP2dQNhIkkH+qkZ8Xp5c+BArXS
0t6VD+ti0q2+RcxBI//6/KASPlzzcGuz/745+Minal6kwo/Jv9jUXtE5kF2m
mLFgQMUGQ634I+dnoYb32vCqeCoGm1PtBaJmAXjXbdR6RMUS6neKJW0WvHn+
GfDYIYB3AixCU+Vn4SaXjNpjZ0G0NVVZ8+7ODJhwXY7vKxRE5sTBOLJkBl5R
1rwlhgVxqGTh35yUGfizJHl0nb8QLv9SK2vmPAMbF8U7kmKEMa3ur/zwwjR0
LOSsLnwgjIECYhezx6bBaUEsqJEigieF4iQq3k9DzLyo+Pc0EeSuWxZCVk5D
66yg17ZLouhjmrL8pfs0lMdzLfK4i2GHwB7PlJ4pSGI+z3hzTAyt33VLH2mf
Aq+QTJlLRWJY01+Qk9s0BbKeMsZag2J4O6EqLyV/Cs5bbIqk7V+BZQ66dj89
pyBRIGC8ykUczWH6ZP0MG9yStGOjY8Ux7vZYRd0kG0zmWPwWl8TxXv733r6v
bGBPJCl/6hPHxW2eIqUv2RDcXeTFRVuJ2j7XD80Vs8Elv/ujo5MEMtPXS5la
scFALN9H/qgENnNta4zYwgaJdHfmeK4EpqWfT3ppyIbuuPEVJz5IoKxKw8Vu
JTZs9+C1qXRYhWHRfTI6FDZsVDZqX7STxF+93vM991kgVrK470W4JCrMp1s2
NbLgj+TTkQvnJdFtUjCw6j8sqKTaLar1SKLgXOvH4UIWyE8EGdvvW403XOM0
dh1ncd7Fldobe6WwO9i677MlC45KzhT0HJbCBMaHKKXNLBiKtUtaOCeFg3EW
8gkGLKjDZY72r6VQ2bro8sH1LLB7Ezi7uHMNdtlnexPLWVDwa9M2Jwtp9Ox0
mhgaZgLFJkvr5AFpLOpdUyo7wISAurHVVSekUU396Fe/XiaYRBeOcz2SxqeF
2TtUXjDhCy9XdrWpDH6uf1e5uZEJCvKvB3g3yWKg4ZfQ+nQmnD2l3KHtIIsm
5baOjclMYP5IqHaNkMWY5as3PE5kwtNq3RN19bI4o0tdMxvFBH/TfGU3rbXo
r3Xf+Lc3E6qdvMMaVeUw5uwL0wpzJhRtn+fWFZHHL2Uro5rnGSDsmXBZSk4e
1zmK/EidZsCxaIoeRVse93SeWenNZIDbTd4Db23l0ZU4YqgzwQBZQZFHIRfl
0Vm0p01nkAFFXWvjK2XW4eMVvabVDxlQ7AAMRXUFpEzrwsxpBoiGPDkjZKqA
ch6lI01JDEg4banAsFLAnMwzZ48mMsCjece+thAFTHZzui8UywA5Kdtar3oF
VAruao0PZkDJZ6+gYiNF7OA58PeQA8feSd8kdyhhUfAUzqkyoGAqtfqLkxJ+
kqhOTVNmwIWMc9FlvkroW9CUv0aRAWnNBUJ6KUp4V+g1sV2OAeGCtRttnirh
o42HC7okGLC94fOpU5bK6F4tWniKmwF/uDYpEaCCvHM0KY8REsbyTP4071XB
ygfVfo5DJHzbgHePe6pghahL7t5BEvocrayFElXQNz0rwrqPhLZbByJVWlXQ
vEI9z6+bhLx9mR1uZqp4IUgzQe4JCZtLfx56YaSGhbbRuoFlJDCL2vb9u0sN
pZPMhDOvkVBZUGw+56qGoplJp5qukiCZbS+leVwNrRPqdAWKSfiT8OhV9hM1
vDDygN2dS8JVt3w92u71WOPrVvYhlQRuqR2Un/vV0X/L773nQ0i4u1JhcilY
Hb/eilOjBJNwePlCv1SCOqokylLDAkn4zNfYuPuqOu69M/Xa0Y+EJpacX813
dUzOHOAyPkCCz3t2V1TIBvz9c9WQqyMJnZkVhbyJGiihYunJNCehY+nl7a4s
DbSfyoy9tpmEx2F/3+Zd1cAMhrS8nRkJd+yMeNe3aSBTWJa/2ZiECsmXwTbL
NNHcypzM0ifhVMnk5ryzmsiIuTOfrk6CeY3+iGqBFg7czaCmrCbB5B+XWeKm
FirK0/u8JEkwyD4uca9FC5NpVb/MVpGgGf5sp/VnLUyQm2+fFidB1oBWHyan
jZrjLxQTRUmYeRif1FKmjbeMvAY7lpEw4HvgfDlNBx16LX1UWXQodr99N9ZL
BwfKc98bMung5SAwbOOvg9bXT6vsYtDhx5b6DexoHby0oBp1mE4HUpbr6fZ8
Hcx5Y3++fZIOQu+vTv38oIMaB77cy/tBBzMYcVO318U5d6Pqvj46XFntqVpr
o4djx5z6sh/R4fGTtZ4aTnrYyd9+/UkrHUaCBvNueejhL94GLcZDzr/msQtf
Wage9imyEmgP6FDh7zBakKOH2wLOTGxooUNNy67rSR/08Lnfq7WsBjo82K//
j5P7RrSNemYheIMOA1cEVi8E62Oe4H4BsRw6IFVw7FekPvKdPHErMpsTL0yw
5eMxfZTYMfCkP4sO4VuE9tdl6GND9CKtPJNTzzfhKwer9LGTyi1ukcGpR0VM
9eVvfRTn8TXOSaVDSZWkYX7gJuRnj/cnJdDhYIuis66/AX5u/FJwKYQOwYOd
5uxQA6xdqcglw3HkUojK/WgD7FJiPS4KpkPKtrusrakG+Ebow7bSIDpUvrO+
SKswwAay2bUmgNPfX1HvEr8bYFyk+qE+HzqckO60euNliGsn5yoCPDj3FR+M
QS5G+O7r2k+htnSwWeWd/CvSBHu8P7hf30QHK3wutSfYDLWDiAhDeTo8sujn
nzpnjpdKS+1khTnx2cLdPXaIVbUdkpOzBGis8tlabL0FPXRGh55OELDuysof
6fstUHcuM+2fYQIe0mdqA2iWOJH4kX3vPQESdQY3ggK3ovO7XealnQS0twlG
hEVvQyXRMsabVgKkSyT9/MO3o4MvFsU2c+KPxqQlJe1AdntLuXENAaNM8Z6s
Ezux7O9P7Q03CGDTthJXYneh2TWj951XCWhTe23ak7obj5wZczp4mYBNT87W
Tp2ywg8XMWvwIgEHn5baQq41ZhRa7bHJImB87d5n6aU2KNUt+Mr0DAFSoH/o
eeEezP+kf+vdaQK4Xodqq/5nL6ZtP0c4nSSgM/vIis0Otjhavqwq6DgBD0aP
svy6bTGIeji2K5aAzDBVQtF5H7rs8hCXOUpA4zAjob93H/4jZ31kIJyA5uQg
JXl3O2wQs5VPCSVARHTJ3WvQDu31UupzgwnI3jLEpeBij5k1o2f6AwggKv0f
RI7YY90l0TGqHwFl06JCTzwc0Gc//8ozhzj1HfMKK/npgDEqOh+nDhDAuLUA
CyGOeOg7f0aOJwG8D5qvO/52RMO5cYFQd84+j4wcRDjh410pPsb7Oed1CjUU
SCcs9ntPoAsB1/n8ylMOO+Oflzvl/JwJ+Cs+pH+M5Ywrx7M64xwJyOI5QguK
oGFm6K7TbfYEbOWerCyOomGrTMXSPY6nKQELb6NpWH3aLb6RY69Fr2v6x2h4
Ue7D0TKO9WZsJxaSaRhp/vt4Cscf/+icyM6j4clw19e7OZYbIG7cbqGh9van
fr12BPT0Bc/+vE/DU903hLs4Tv00Zi3dysl/u6/hKcdE7wg9oY2GHzco8dzh
uO1tt+nOVzSMkKA1XuLY92nd24FBGr7P+7HPk2PpDg0FkWEaqjifFqJx/Lbt
ZiR8pWE+EfzMlmOjx1fXlI3SsNJuFVpwLHg/+2DIHxrqOT6xUOa4tUW4+QpB
QyPPYj45jiPuplF7SBquP/folSTHg7dPVBtM0fDwfK8LlePspvkl/xkafs95
rsDF8bbGGLvCORomMxYnZvYRMFvPLOta4OR7FXeX5LimLmxqaYmGbzpMTv/m
+L8aNQHh
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*\\nStyleBox[\\\"c\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"", 
     TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*\\nStyleBox[\\\"a\\\",\\nFontSlant->\\\"Italic\\\"]\\) + \
\\!\\(\\*\\nStyleBox[\\\"b\\\",\\nFontSlant->\\\"Italic\\\"]\\)/\\!\\(\\*\\\
nStyleBox[\\\"c\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->Directive[FontSize -> 14],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotLabel->FormBox[
   "\"\\!\\(\\*\\nStyleBox[\\\"a\\\",\\nFontSlant->\\\"Italic\\\"]\\) = 1; \
\\!\\(\\*\\nStyleBox[\\\"b\\\",\\nFontSlant->\\\"Italic\\\"]\\) = 2\"", 
    TraditionalForm],
  PlotRange->{{0, 20}, {0, 5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.64187203688678*^9, 3.641872071712977*^9}}]
}, Open  ]],

Cell["Using a frame and annotating the frame edges:", "Text",
 CellChangeTimes->{{3.641872077332182*^9, 3.64187209723454*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"myFunc1", "[", 
    RowBox[{"1", ",", "2", ",", "c"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", "0", ",", "100"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "20"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "5"}], "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
   
   RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\!\(\*
StyleBox[\"c\",
FontSlant->\"Italic\"]\)\>\"", ",", "\"\<\!\(\*
StyleBox[\"a\",
FontSlant->\"Italic\"]\) + \!\(\*
StyleBox[\"b\",
FontSlant->\"Italic\"]\)/\!\(\*
StyleBox[\"c\",
FontSlant->\"Italic\"]\)\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<\!\(\*
StyleBox[\"a\",
FontSlant->\"Italic\"]\) = 1; \!\(\*
StyleBox[\"b\",
FontSlant->\"Italic\"]\) = 2\>\""}], ",", "\[IndentingNewLine]", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"FontSize", "\[Rule]", "14"}], "]"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.641871863749403*^9, 3.641872055157926*^9}, {
  3.6418721124782124`*^9, 3.641872204418214*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
+L8aNQHh
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
     "\"\\!\\(\\*\\nStyleBox[\\\"a\\\",\\nFontSlant->\\\"Italic\\\"]\\) + \\!\
\\(\\*\\nStyleBox[\\\"b\\\",\\nFontSlant->\\\"Italic\\\"]\\)/\\!\\(\\*\\\
nStyleBox[\\\"c\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"", TraditionalForm], 
     None}, {
     FormBox[
     "\"\\!\\(\\*\\nStyleBox[\\\"c\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"", 
      TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->Directive[FontSize -> 14],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotLabel->FormBox[
   "\"\\!\\(\\*\\nStyleBox[\\\"a\\\",\\nFontSlant->\\\"Italic\\\"]\\) = 1; \
\\!\\(\\*\\nStyleBox[\\\"b\\\",\\nFontSlant->\\\"Italic\\\"]\\) = 2\"", 
    TraditionalForm],
  PlotRange->{{0, 20}, {0, 5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6418721163529377`*^9, 3.6418721348875*^9}, {
  3.6418721789512978`*^9, 3.6418722050255613`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plotting discrete points", "Subsection",
 CellChangeTimes->{{3.641815938633369*^9, 3.641815942881504*^9}}],

Cell["\<\
Let us plot the recursion equation for the discrete-time logistic growth \
model:\
\>", "Text",
 CellChangeTimes->{{3.6418722653159733`*^9, 3.641872291059163*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotData1", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"t", ",", 
      RowBox[{"n", "[", "t", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "50"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.641872228589655*^9, 3.641872256188003*^9}, {
  3.6418723037827377`*^9, 3.641872312084586*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "14.95`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "22.31324875`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "33.22093259011031`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "49.27958370408714`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "72.70513687110665`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "106.41468684293679`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "153.95998747646502`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "219.0881423428209`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "304.6324064566173`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "410.54815815315106`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "531.5473421482542`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "656.0497247499447`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "768.873966452678`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "857.7273615346801`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "918.7429289393982`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "956.0701086710252`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", "977.0701366594247`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", "988.2721790133037`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "994.0673186141039`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "997.0160609528386`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "998.5035785303007`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"22", ",", "999.2506696265428`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", "999.6250540652671`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", "999.8124567404066`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25", ",", "999.9062107839662`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26", ",", "999.9531009937746`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27", ",", "999.9765493971289`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "999.988274423599`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"29", ",", "999.9941371430549`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"30", ",", "999.9970685543409`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"31", ",", "999.9985342728737`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"32", ",", "999.9992671353626`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"33", ",", "999.9996335674127`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"34", ",", "999.9998167836392`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"35", ",", "999.9999083918028`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"36", ",", "999.9999541958972`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"37", ",", "999.9999770979475`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"38", ",", "999.9999885489735`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"39", ",", "999.9999942744867`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"40", ",", "999.9999971372433`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"41", ",", "999.9999985686217`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"42", ",", "999.9999992843109`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"43", ",", "999.9999996421554`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"44", ",", "999.9999998210777`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"45", ",", "999.9999999105388`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"46", ",", "999.9999999552695`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"47", ",", "999.9999999776347`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"48", ",", "999.9999999888173`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"49", ",", "999.9999999944087`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"50", ",", "999.9999999972043`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.641872250785759*^9, 3.641872256596595*^9}, 
   3.641872312585683*^9, 3.641872357427045*^9, 3.641872415980195*^9, 
   3.641913396978013*^9, 3.642420716180608*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "plotData1", "]"}]], "Input",
 CellChangeTimes->{{3.6418722949800577`*^9, 3.6418723177002583`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.016666666666666666`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxVz19IU2EcxvFTgUY3aUp4seU0EYlN/DNdzdx55r+zIMgkMiRoGA5Ca0E3
ZRcOOheb1BamF4ZkKKjdVDdBCEGRTkTG0Au7CRlTstCLyUIazJ3OS7/3vPbC
4eXD9+I5b1mvv6vvqCRJ9frH7v9PBf7dKdnHzg8bWcLlr6nC2s5G8nEMjmyp
ygTIBZCjJb7laQ+5GOuVvn2LrYtcgrel75zDL3vIJoxqs46PrttkCxKZzZNr
vf3kcjREmq6fOfEA/L/MscfuxblH5EqsvNj57Z0IkKug7p9e7wuo5HO4+7o0
eZAXJFsRfrU7tRobJlfj05V5de/DU3INvoTKxyKJZ+RafCuKT0eCYXIdvNGa
AVuSux4//d0boYII2Y7B8edbliruBiTs1dfy7dyNWP1cdOuIk9sBv3rDJDVz
n8f7lau/hlzcF9D95P6OLHM74U3dSU8absLSzbJM3PBFzET7s9uGm6G8sebS
hl0w5xVrGcMyBvwhLWsYiI0sDOW4A4AVSVkzuhtL5r1JwwE3OsN/4qK34JiS
3Ra9BQ/P5tKit2K+UMuI3orvQS0rehvu6fOit8Ghz4veDpM+L3o72LzoHWDz
oneAzYuu4JQ+L7oC/fWHugdsXnQPe/2hfglsnvkvtLTxeg==
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 50.}, {0, 999.9999999972043}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.641872318236244*^9, 3.641872362247966*^9, 
  3.6418724198006897`*^9, 3.6419134198641663`*^9, 3.642420717923747*^9}]
}, Open  ]],

Cell["Improving the look and annotating the plot:", "Text",
 CellChangeTimes->{{3.6418724318287907`*^9, 3.64187243507508*^9}, {
  3.64187246516306*^9, 3.6418724689073467`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"listPlot1", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"plotData1", ",", "\[IndentingNewLine]", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Time \!\(\*
StyleBox[\"t\",
FontSlant->\"Italic\"]\)\>\"", ",", "\"\<Population size \!\(\*
StyleBox[\"n\",
FontSlant->\"Italic\"]\)(\!\(\*
StyleBox[\"t\",
FontSlant->\"Italic\"]\))\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"FontSize", "\[Rule]", "10"}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6418722949800577`*^9, 3.6418723177002583`*^9}, {
  3.641872441428368*^9, 3.641872519795665*^9}, {3.641872651132422*^9, 
  3.6418726708618298`*^9}, {3.64187279433967*^9, 3.641872845915772*^9}, {
  3.6424208007623167`*^9, 3.642420807079549*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[1, 0, 0], PointSize[0.016666666666666666`], AbsoluteThickness[
     1.6], PointBox[CompressedData["
1:eJxVz19IU2EcxvFTgUY3aUp4seU0EYlN/DNdzdx55r+zIMgkMiRoGA5Ca0E3
ZRcOOheb1BamF4ZkKKjdVDdBCEGRTkTG0Au7CRlTstCLyUIazJ3OS7/3vPbC
4eXD9+I5b1mvv6vvqCRJ9frH7v9PBf7dKdnHzg8bWcLlr6nC2s5G8nEMjmyp
ygTIBZCjJb7laQ+5GOuVvn2LrYtcgrel75zDL3vIJoxqs46PrttkCxKZzZNr
vf3kcjREmq6fOfEA/L/MscfuxblH5EqsvNj57Z0IkKug7p9e7wuo5HO4+7o0
eZAXJFsRfrU7tRobJlfj05V5de/DU3INvoTKxyKJZ+RafCuKT0eCYXIdvNGa
AVuSux4//d0boYII2Y7B8edbliruBiTs1dfy7dyNWP1cdOuIk9sBv3rDJDVz
n8f7lau/hlzcF9D95P6OLHM74U3dSU8absLSzbJM3PBFzET7s9uGm6G8sebS
hl0w5xVrGcMyBvwhLWsYiI0sDOW4A4AVSVkzuhtL5r1JwwE3OsN/4qK34JiS
3Ra9BQ/P5tKit2K+UMuI3orvQS0rehvu6fOit8Ghz4veDpM+L3o72LzoHWDz
oneAzYuu4JQ+L7oC/fWHugdsXnQPe/2hfglsnvkvtLTxeg==
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
     "\"Population size \
\\!\\(\\*\\nStyleBox[\\\"n\\\",\\nFontSlant->\\\"Italic\\\"]\\)(\\!\\(\\*\\\
nStyleBox[\\\"t\\\",\\nFontSlant->\\\"Italic\\\"]\\))\"", TraditionalForm], 
     None}, {
     FormBox[
     "\"Time \\!\\(\\*\\nStyleBox[\\\"t\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"\
", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->Directive[FontSize -> 10],
  Method->{},
  PlotRange->{{0, 50.}, {0, 999.9999999972043}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.641872448294444*^9, {3.641872487543942*^9, 3.641872520237567*^9}, {
   3.6418726544118156`*^9, 3.6418726714167213`*^9}, 3.641872817005837*^9, 
   3.6418728489045143`*^9, 3.641913519985385*^9, 3.6424207228088617`*^9, {
   3.642420783097197*^9, 3.64242080775238*^9}}]
}, Open  ]],

Cell[TextData[{
 "Joining the dots and restricting the plot range along the ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]]],
 " axis:"
}], "Text",
 CellChangeTimes->{{3.6418724318287907`*^9, 3.64187243507508*^9}, {
  3.64187246516306*^9, 3.6418724689073467`*^9}, {3.641872602316681*^9, 
  3.64187260480249*^9}, {3.6418728312277946`*^9, 3.6418728404342546`*^9}, {
  3.642420730448894*^9, 3.6424207318324947`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"listPlot2", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"plotData1", ",", "\[IndentingNewLine]", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Time \!\(\*
StyleBox[\"t\",
FontSlant->\"Italic\"]\)\>\"", ",", "\"\<Population size \!\(\*
StyleBox[\"n\",
FontSlant->\"Italic\"]\)(\!\(\*
StyleBox[\"t\",
FontSlant->\"Italic\"]\))\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"FontSize", "\[Rule]", "14"}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "25"}], "}"}], ",", "Full"}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6418722949800577`*^9, 3.6418723177002583`*^9}, {
  3.641872441428368*^9, 3.641872519795665*^9}, {3.64187260796416*^9, 
  3.641872611861516*^9}, {3.64187265816683*^9, 3.641872660165988*^9}, {
  3.641872851797875*^9, 3.641872852925764*^9}, {3.641913571501568*^9, 
  3.641913623813944*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.016666666666666666`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxVz19IU2EcxvFTgUY3aUp4seU0EYlN/DNdzdx55r+zIMgkMiRoGA5Ca0E3
ZRcOOheb1BamF4ZkKKjdVDdBCEGRTkTG0Au7CRlTstCLyUIazJ3OS7/3vPbC
4eXD9+I5b1mvv6vvqCRJ9frH7v9PBf7dKdnHzg8bWcLlr6nC2s5G8nEMjmyp
ygTIBZCjJb7laQ+5GOuVvn2LrYtcgrel75zDL3vIJoxqs46PrttkCxKZzZNr
vf3kcjREmq6fOfEA/L/MscfuxblH5EqsvNj57Z0IkKug7p9e7wuo5HO4+7o0
eZAXJFsRfrU7tRobJlfj05V5de/DU3INvoTKxyKJZ+RafCuKT0eCYXIdvNGa
AVuSux4//d0boYII2Y7B8edbliruBiTs1dfy7dyNWP1cdOuIk9sBv3rDJDVz
n8f7lau/hlzcF9D95P6OLHM74U3dSU8absLSzbJM3PBFzET7s9uGm6G8sebS
hl0w5xVrGcMyBvwhLWsYiI0sDOW4A4AVSVkzuhtL5r1JwwE3OsN/4qK34JiS
3Ra9BQ/P5tKit2K+UMuI3orvQS0rehvu6fOit8Ghz4veDpM+L3o72LzoHWDz
oneAzYuu4JQ+L7oC/fWHugdsXnQPe/2hfglsnvkvtLTxeg==
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
     "\"Population size \
\\!\\(\\*\\nStyleBox[\\\"n\\\",\\nFontSlant->\\\"Italic\\\"]\\)(\\!\\(\\*\\\
nStyleBox[\\\"t\\\",\\nFontSlant->\\\"Italic\\\"]\\))\"", TraditionalForm], 
     None}, {
     FormBox[
     "\"Time \\!\\(\\*\\nStyleBox[\\\"t\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"\
", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->Directive[FontSize -> 14],
  Method->{},
  PlotRange->{{0, 25}, {0, 999.9999999972043}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.641872448294444*^9, {3.641872487543942*^9, 3.641872520237567*^9}, 
   3.6418726122995663`*^9, 3.641872660751392*^9, 3.6418728535126753`*^9, 
   3.641913523772119*^9, {3.641913572243143*^9, 3.641913584202833*^9}, 
   3.641913625580193*^9, 3.642420733504593*^9, 3.642420785091384*^9}]
}, Open  ]],

Cell["Combining two plots:", "Text",
 CellChangeTimes->{{3.641872677531704*^9, 3.641872681122081*^9}, {
   3.6418727203317842`*^9, 3.641872725802269*^9}, 3.6424207494486103`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{"listPlot2", ",", "listPlot1"}], "}"}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.641872683275317*^9, 3.641872693107539*^9}, {
  3.641872728492257*^9, 3.6418727835763597`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.016666666666666666`], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJxVz19IU2EcxvFTgUY3aUp4seU0EYlN/DNdzdx55r+zIMgkMiRoGA5Ca0E3
ZRcOOheb1BamF4ZkKKjdVDdBCEGRTkTG0Au7CRlTstCLyUIazJ3OS7/3vPbC
4eXD9+I5b1mvv6vvqCRJ9frH7v9PBf7dKdnHzg8bWcLlr6nC2s5G8nEMjmyp
ygTIBZCjJb7laQ+5GOuVvn2LrYtcgrel75zDL3vIJoxqs46PrttkCxKZzZNr
vf3kcjREmq6fOfEA/L/MscfuxblH5EqsvNj57Z0IkKug7p9e7wuo5HO4+7o0
eZAXJFsRfrU7tRobJlfj05V5de/DU3INvoTKxyKJZ+RafCuKT0eCYXIdvNGa
AVuSux4//d0boYII2Y7B8edbliruBiTs1dfy7dyNWP1cdOuIk9sBv3rDJDVz
n8f7lau/hlzcF9D95P6OLHM74U3dSU8absLSzbJM3PBFzET7s9uGm6G8sebS
hl0w5xVrGcMyBvwhLWsYiI0sDOW4A4AVSVkzuhtL5r1JwwE3OsN/4qK34JiS
3Ra9BQ/P5tKit2K+UMuI3orvQS0rehvu6fOit8Ghz4veDpM+L3o72LzoHWDz
oneAzYuu4JQ+L7oC/fWHugdsXnQPe/2hfglsnvkvtLTxeg==
       
       "]]}}, {}}, {{}, {{}, 
     {RGBColor[1, 0, 0], PointSize[0.016666666666666666`], AbsoluteThickness[
      1.6], PointBox[CompressedData["
1:eJxVz19IU2EcxvFTgUY3aUp4seU0EYlN/DNdzdx55r+zIMgkMiRoGA5Ca0E3
ZRcOOheb1BamF4ZkKKjdVDdBCEGRTkTG0Au7CRlTstCLyUIazJ3OS7/3vPbC
4eXD9+I5b1mvv6vvqCRJ9frH7v9PBf7dKdnHzg8bWcLlr6nC2s5G8nEMjmyp
ygTIBZCjJb7laQ+5GOuVvn2LrYtcgrel75zDL3vIJoxqs46PrttkCxKZzZNr
vf3kcjREmq6fOfEA/L/MscfuxblH5EqsvNj57Z0IkKug7p9e7wuo5HO4+7o0
eZAXJFsRfrU7tRobJlfj05V5de/DU3INvoTKxyKJZ+RafCuKT0eCYXIdvNGa
AVuSux4//d0boYII2Y7B8edbliruBiTs1dfy7dyNWP1cdOuIk9sBv3rDJDVz
n8f7lau/hlzcF9D95P6OLHM74U3dSU8absLSzbJM3PBFzET7s9uGm6G8sebS
hl0w5xVrGcMyBvwhLWsYiI0sDOW4A4AVSVkzuhtL5r1JwwE3OsN/4qK34JiS
3Ra9BQ/P5tKit2K+UMuI3orvQS0rehvu6fOit8Ghz4veDpM+L3o72LzoHWDz
oneAzYuu4JQ+L7oC/fWHugdsXnQPe/2hfglsnvkvtLTxeg==
       "]]}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
     "\"Population size \
\\!\\(\\*\\nStyleBox[\\\"n\\\",\\nFontSlant->\\\"Italic\\\"]\\)(\\!\\(\\*\\\
nStyleBox[\\\"t\\\",\\nFontSlant->\\\"Italic\\\"]\\))\"", TraditionalForm], 
     None}, {
     FormBox[
     "\"Time \\!\\(\\*\\nStyleBox[\\\"t\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"\
", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->Directive[FontSize -> 14],
  Method->{},
  PlotRange->{{0, 25}, {0, 999.9999999972043}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6418726935104113`*^9, {3.64187274211482*^9, 3.641872754444693*^9}, 
   3.641872822732896*^9, 3.641872857639793*^9, 3.6419135329611483`*^9, 
   3.641913575808784*^9, 3.642420789877314*^9, 3.642420825541889*^9}]
}, Open  ]],

Cell["\<\
Note that the plot range is adopted from the first plot element in the list \
given to \[OpenCurlyDoubleQuote]Show\[CloseCurlyDoubleQuote], as are other \
plotting arguments (e.g. the size of the axes labels).\
\>", "Text",
 CellChangeTimes->{{3.641872862939456*^9, 3.641872915690239*^9}, {
  3.641913641072568*^9, 3.641913645059671*^9}, {3.642420764526553*^9, 
  3.6424207745021267`*^9}, {3.642420813983671*^9, 3.642420823109786*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Contour plots", "Subsection",
 CellChangeTimes->{{3.641815946977386*^9, 3.641815949425569*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"x", "+", 
    RowBox[{"2", 
     SuperscriptBox["y", "2"]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.641872930091991*^9, 3.641872957250881*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
QaovUaovlewp5Bcx8svpXty+Ib84M/HH7aUQKX+YZK9FSuXFSPZVvFS+TbLn
EqTy6Z6Q9muIUd/w++lI8HB9v6H7FjWfdj6iYzrPcTXrpkm4mp+O7wlMdN4n
09n9qtN+inAlvEXn78yfJlq2r65K/oB4Dmyi9iHG8YsY+cf8WB/L72wvYqwP
+VX50O1FxFzfUnpAfY3psf8Qu94ddE6AD6714YG6XogEkgdi5F/l74J2rmZR
1z+nPfpYXbDJXsXzKSk9IH28ml5b/3YSXcLUv4hRntifqK/Ub/39Drc/gqX3
K6kKX88zFfm9B66nKB8vV60P6bxN7m9sD9IR434F1yPE3H86TlrP4iR6pLQ/
CKf1HNdnxJie+TcsR/vgFfn3IH+I+XuOKCoPz595+XGSPRJH+dX2xFJ6HH+I
cT7h+ML6cL5jfsSYX/bvQDq2DzHqKzk/Yhx//D7Qzu8rh+j7LZyPiDE9u88Z
kn8/Jp8/I10azzTfXc3sbSR9pY1r0lc4v1G/IsbxOciV8CnVh/oV8zP9KvTx
jPLC8Yfy7O/KmE3yUvW0vp9j/TtEn8+I2X1xtM4/yg8xtgfbj5jft1ml87B4
6Twtjtrrkm+bSBrvOL5w/mD7EWP6K650L6i9KB+UH2JsD3tPYbZS/Vgf8z8y
R1H5KG8+n94oKS76Z7oPVe2BAnQPofqH+APeL/F7pUSpf+K4P+ReOwS46j3t
QKxeDJ2m8cr9Q30k/eVP43MnW9eCBOojNl6c47KQ69sd08EMXq5m3wYB1iev
j6gfEOP6g+Of6eMOdhjuqv86rXuqPvcXBl6PQLndUOUrsL3qt7vA/riu9gfp
259U/ggzfeebAN3V8UsYx7Pa//FwT+1/Wp9RvsgfYuwP7E8cf7J9ItsjsvwQ
Y/04/lDfoz5E/Y1YLT8crrnSv6X0sv5HrM4fXL9eqeN3ih3euOiXHIgDXPku
k35C/lzFr0F9dp/8B+Txh/oMMV9/yW+Lzv8Rq+2lfZ7A9iPG+YwY7SnE/L1A
ANkLiLE+xFgfYn6fFkD2CGLsL8R8fHhRfYj5ePGi8vh7S7O0nocSxvVC9ifl
74VCCav1RRDG8SCnx/0ipkeM6fn7mjjpvY6VMMqf04Ol9yxm6f1LKGGsHzHW
z9+7xEn5rYSxfr4/vEfnDNgfiLH/EWP/I+b+yiHED89vluihhJEfxNxfWfMv
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
/gMoNlMpNtMKP3So5vyYQdKHcMwa4fwkgOeDCOfHDEkNWx6qtCwe9n89fE1S
w5eOGkHGprda2CDpy7+c/3zmCPtj5MRxzvHfye3E7Nqr0xSkJ6t08ifJdtnD
GeQfOfntki3f/i+D/HXjS44QaW7PHTU6jeq+/pw1X/xjxbU+PqB46X/tPztl
amH9fdfqzLHOjx4/OPlEG+dHjx/ccsnXzo8eP7jkz/7Ojx4/eOX6Ij+d/Ft/
fzVtlz1jQiX9vdN/M8p0adAqWFxombei5o/He2DxV0/8P+jvu+anVBVfXPGh
8upfO9PX1sFHZFTLYzB/fNu01H+MJevq8XGrjvBNL7hdjy97rH+M86PHk6X9
yv/yDIb88WFVeeY4Xrrqk+IT1YmArq6/LEcLzf5sqdqfjt/r/dYhtncEXL2Q
Our3elmOpO7rg6e8teWLB9vKtX955HiilS+/n9LKp/ggIwfsCnj/0ED2/BRX
/39SpP2RUkrjR46H/3bz8JbfrNd/73qVadaIqI76+6lT30zZfOuSHm+1uutP
j++qyRf6uPjJ79+x79gI50f//eiN/W50TPHT3zsd6jF+VLH5frTfuvbj/+YO
/dKP9lvpbe5tP3TAFx5q/Su/Z9LGB0jjl9pfulAn50d/P9R6WRnnR38vNMbq
4/zo74O+q7TD+QmGI9p4lOObnrsFzbfU0N/f3Pm1bkxgvO4Xm1ai2f3u7/V4
nx/+a7v68AU93qfv6G59rOv09yr7y/g4m6z7Z2v9r0zSxssVdbwoLxcuXlZ/
zlEFZlfZ2Oy6Say1Hv1tXqFjSlzED7VDnHhWl1azulxPgCpGT+fHLOYPrnkz
9287GFfNnj4nwyTa3B9Yt+QGO9wMHL57TZpJdA183e6V3Q6lld8K31l6W5Ha
A3t4fZCq1Rev1gcn71Zdejz1nvJk2T/PCx0ywbMc25jCQ+8qaVE5bcURE8zm
7YHu9WZnFnTW/zZFeM9MM4FHWMLiDd0SYG2la313lHroaPpmVsNDbROgfcr1
1S96PaT7yayNz/dsfH6S9g+TLxf26vLAJJK18cbPZ2m8ibYuAz0wX/wmbbyL
nUfzDPBn5M8pzSex6ax3p47O9kyrcLpj0EA9HuUUtX7I4vxS/Ad1frxRJOxY
s3XMgEMlouCEcf2yMzlvHH3rR8GtOVFQ17VRfeOYbH8/vfXraNjwxZRp9Re/
dpwf6j56wYcYeFP/0Z4HR1454vOGqbuzP3MPvMg5kOIwDFQ2b3b2X9tX5iar
/77tWKeVf1wtX+mjlV9PLV85p5X3Vi2P7gtc6r9Spnx+ohStdyZy96loODn4
2KQvD75WpmrtW6u2j84HP6n949j6rVPB7NTvN/C89urgtv85P8oWjS7HI5xT
rmbJCyn3KD5iRXW/5vixWeyK7jsyFaXUF9GFbxnAfC19y6wlwTC2fpu7U1Z5
gb327jXdF5qhaL3qUX7D9d+Xx/GB/KnnOZlK9c33RtQ+bIdlaQldPxw/60C8
VcV033pJba8jdmYHzwU+3pBb8PGLIpVM4hv/p/DbZl/oOHxSyj7n+niS799F
/F8j6meUMsH5ulDMbUOASHswr3TO+zCYVvP2imVN3inftxj35aKvHitbT59d
ubCCG9T7d2a3JUsDICX1TvaR514Qx/NDNK8fFF4/+dMedcn/huNinr76On88
v30qXTmv0fF+32XO9tX94XD/PlLdvyuVyqYEKj3tYAo5vyW7zzXld37eIWxc
/qKBxs8dlR8Rx89TRDDvP9GOy0MM5uczog3vf5GuyXOqKk96b5zsOj/Lctgn
TzyY6tzPDWu2v+Onqo8dCRoeqWJlZKdDnb0axcOp6iP6nF/zkvyPY1zHfyYx
4mS107867d8Ju88XLZmlx/N86zpfuEv+Se9ULOeHUbx8R26efH/JH/9vosu+
yFTS21vbFSkVAdY25VOTR2Q5PPPIyfnj/6n2SKZjsXb+clI9f1EqVRkc3GRT
HETmFP13b9VMpe2SmuUu/uXUD41jR/x06LIDcUEV0/lE9q+tx0xIN4m3/T0z
xqxOgGbxte6WmHBfMS3+bdbptQlQwbXxuq+0Se7WYvQ+X3A8zP2mi3O8T3Hp
Sz+678f7+ieF2jU6GWMSrbT0Qk1P/rGtvuw7ucNSPR6Zc7Kf6PmzHl/Me3Bj
50ePF1joQyVnFv33qxoFzXZbFGOk90AfF6yfVa6m/ntWUS9P3Ct9V//9p8tV
Yp0f/fetZhzqIgqP13//yaWHjgaRvp+76+J+ty76+6fRpfuvGOERRO1zLTNL
Auk9U2PXwWggrSflFtf/4ekdPb7gycMzMwK/0OtbcNDP+dF/X0Gtx4fSh1Uc
G1pxrB4/+U3lc68rn8uh+IJjXfbJB4ov6FpOq7wnf5R6rvXlIcXvSXD96fEC
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
3LPvg+ONax8TAqP3d+rZ4cV7x+SUEm8754bA65NXG+1Y/N4h2aPKlfodKzY/
Y4TmX//6tGWZHLI31fOzD8pbrfwhavnK+v/t9rlY1wI3oofW+nO/Hi/SpNqv
yiut/jFq/cpUrf5MtX6lt3af/0C9z1de5uSde4SCr6vC90ozrX+Xqv0LE3n/
QjrvL+jE+wuWafK/rcofTmjy3aXKFyR5QpTrficefmnXpX/NvR56PO08d5Af
PaCL674nHl4mPfxf+3Ue8MXcknHemVZIii7Z7FIpD5D2AzA8kOkTSAnZN3/M
7AdKxQJfrbr7SI8vqe0XIIvrGxDbFrx2dHijDPoUPnnczz7QkOsbOKrpmxxV
38Ayrj/gG64/IFvTB2ZVH8A/mj5wU/UBNOHzGwx8/gLOz5Xq/KTzCW1/A4mn
7d9fS7WDIaDmv5Wb6r/fqe3HoOw7tn7DkW5NmzU+9EDpOPjUmE2r9PiG2n4N
OvL1HX7vXXPD6PlvlGNll12Fhnr8SW0/B6v5+g9dNf+Vfar/CnQYPPPK980/
KzVSLKMavQmkfu+h7v9gBLcXYDC3F6Ci5v+yXPV/gZp/WKuM8SwAva9v7XJq
ViBI+0cwcfsCcrl9AYL7z8CtLkNmX2/rBzMuNWlYq0Ig7SfKq/tPWMntBxij
2Q+jVfsBErj/DQyodDq95D/BsO/My7KHbgZAc26/wF/cfoG/ub0BM7i9Ab7c
fgC0H86p9gMM4/YAFOP2gLau0/oOPfl6DkX4+g2v+XpN403bf8M1bf0OUtdv
qPXLvcvXH9ohd9vrEnFuwfL5BCScb3OzUu3nypyF2wOLbzVBDb4/gdLcPwqO
Zo842dDvtVKk1/AebgtNoO5XnijpZb8odvga+tvQ/ojGo3b+AdX4/gSA70/g
C+5/BY6Vs8PuXv+obHm6osCwIVgf7Y9A2h/R+NXOV2Ah359ASb4/gXLcvwtu
rWm1ZVczTyjf7cKSjIYmkPZHIO2PQNrPgLSfAWl/AuF8/wGfx7L9BaRq+4dm
6v4BzvL9ATzj+wMYsPpU08CK8bC34st5i9qZneOU7RdgdEDxN9vfWWHWN0uG
Ty1vBk++f4CT1V9926lpAvSHpq1GmbX4Gck2uOHyF3zqeFJ85bY5Z20wPc89
aPVjR+qE4M3WBTaIzb30z7ANT8ifVh1XT5Ur01dFBta2QXf4MWZ+62fKUy3/
ZDW/gvnj1fzKZS19HzU9xfv8R/XnE6f5eBOSf584zMcH+U8uVf39RArvTyH5
/4l75ZT9m8fFwF3Xt1n0H5V38qXH88T3G9typmzNmWIW/fh9uBjI5S8Ufh8u
xnD5i6P8Plyc4vIXB7i/gTjH1wNRmPsbiKlc/4suXJ+TPG6q/pWitqafe6n6
WUj+luIO17dC8r8Ug7j+JP9WzR9TWK6NWp40JQFmvYq+Obl1MN3vBb/rl/cR
j7n/gtjF/T3EE24PiCTu7yEO8/VfrOP+G2Kx5v8yV/V/cVzV7LfvVfvNEaH5
vzRT/V8cGzR77bpqr5G/rDr+sx0f8q6Vm+vxP7+J8H8+smQEdK/8IPLcMPzd
YzqPp/hgmr8vLNbs64OqfQ1Yvub/CxW4vQy78o6b/9bje+7k/k6QpdnLr1R7
GW5xfyf4jtvHVJ/mvww/8/0W3dc+VP2Z4SzfP4Hk3wyJfD8EPnnugE/0eJ+r
NX+wg6o/GMTy/RCs0/zBNqn+YFCb73/AjfuDgTvf79D7PfV8Wv+9Uc2/G47y
8wW6r9b8vaEJPw8g+Wj+3852s/09yUfzB4eSfL8OLfP0RaAevzOA++/BfW2/
vlXdr4Pkvwdr+X4dDmv+e0mq/x5I+3VI4P575P+s+ceDdP5I/tCavzxI54Xk
H635z4N0vkf+FZo/PUjncdAkzz0hWI/XKflvgnQeB5O4/ybEa+dvBdTzN5D8
N+E6P2+D1tx/E6bz8zWoxv035fNsIZ3v0vt8n1/z/Inu0O9/af48sPjjvlHH
c+wwbEDHvbce6PEmpi8q1rXCK4toMMFW5YbxuFLs3IZ5zbIs4tsUz5BtTc8r
5zw3Btx30pfmGfrv7PnibSYsGjy2yCsLuP3i1W/uoStKyJbpe8dkWKBioeub
lwVcVA7uHPc0KdMCUvkglQ9YPsbjLD48z1PQDqfeZw/veuWgw/PI6PuQaYdK
z98Pzq14gOJz7ky5UKxTjgU+JuXVf0T5veWJtlXeYX27lFmPrzYomqPH67yZ
0mlo9xyLyNT2oz7qfpTidWrvCRxrmvX1CD2eADduRSbfX3FPOar5+2K8EozX
+fqoT6EPle4pkv+2KDXw4bj9gfeVBx4T5ty4r7/f0PxPhDTeaP3R/FEEzmfN
H0VI/ihC8kfR0pM/jZD8Z0R3bX6r/ll6fE3Nn0ZI/jTkX6X501D56I8l+QMJ
q6Y/5fiZmn8Qlfef6h9E97Pq/kyPn6n5CxG/q1V/JnFOW0/keJmafxO1J6PH
uEcLa3qKWrdL2mYsDIBu/c/FpqzNdSxbOnrft079c7php9bGts9l/zpa7zT/
MOWltl7K8S81/zOQ/Nk0/Uv+aiD5z4HkPwe9tftY/h6W7mPpvZ1mb5A/1VXV
347qc2j+U600ew/fI6K9t1W190DyByT/Kc0fkPynNH9A0jcVF253mqD6/c76
85HOD8ZX9YT/uTJ40/3I3pQvnB9v/f407/p7oh4PUjtvofPBRmmHG6Yddqf7
VBe5sLvYfD6n+8FuCTAl7zihNN6P5iqzFhm7PSpsoP2RWs8n8n+sNn+mM8VH
RZp/Wvo3iqNjevTVA3q8579d54N6fOdBF2qEtx2kx3Nu5PtqhrWRHq+vUF83
58csptZ5ufLR5wSI+etug1OfTWJO+rnypSraYc3NPENGj6fvcl/Z8tpRjPvj
0PtD9T3SK8fn6398uv5HLHzoVs350ePDVFw91vl5pXzidP33NF3vq14oxqFd
Cn5R0Qr3Ch8pVcH4Qjnj0d0RXtcKwcPTH1Y8nUHxBia5/AnTlOSsEUsOH7VC
raJdStXelab85dG/RfMxVlgccuwh3EpXbq38sfk/JZOUH722PMy+b5L5hymc
f5jL+ZfXAyGtB2JFzye7gm/EgMfwVRsf3X2lDEj7M3j8dTu0rHJ4yJO1xxXU
/9dV/a94aPq/VJpL/ysT8uZPih6vUN222eGG6/3Gv1Te12p5DkzPfs/Wmf6l
mt4hrR9CWj/EnzCo0ty12Yr9v8I/e1TzEVNDj/3e6Ui2Msb74Ni7VXzEonUt
yx6IdIeA8cHL5573FrvG/VC1hM0DPj1JGqTs8RZZZd+d/aqdN7xVv8W6pO8d
a9v7ws8nK3dZWNpbXOhecW3bgB3KtC5Dyr497SY6ln7RenKhS8q2yKWDSsxz
E52088lM9XxShHz98z2/zja4PHLDwlh3D/Hl8vNjy91LgF6fYo/W6+Aurvwy
/5u2HxOgcsH/5m36To9/qM0f0SDg5FHfcu+Vj1W/dErIIPamzbva9sEHxdK5
yNKYBgZhuKW+q/qkvq9yfJsnxl2flL3NSnfraDIIaf45AlpHPzZOdIe1137p
ULPNZ8fxwkva1H9WAAxXvG5OGvSJ4iNWVeenY210oXEX//IGnxWFHWaPT45a
pgo3yowJgDu7qu/uuzXX0Yy3D3Zq7QtR2wd+vD5llVaer1oe+UMuVPUP/M7l
C8O4fKEQf58GnZeful/0wnXFNndpRp2xbiDpKwjV5H9JlT9U+9y4dMfKCTDy
2oeyHVbr8RKHqvoMivP+gata/1RS+wd28Pdw8Mvk6fGrf7XDp1J1kxaH6fET
Nf0LU7TxmKiOR5jOxyP8y9/nwYNT5st+Lz4pEZvmTT3rq8dX1PQ3LNDGb6A6
fmEPH7+wQ3vft1d93wd1Mle5v9vrCW7tx+7uPNsbJP0Pb7TxjuN+Ax/vsIq/
D4RFI2vO627wg2dBPz38kOgNkHes3FOPn7i+3unWXyyOB39lrfNfL5XGLsfo
eOjcs8OLOVEvleXa+n5CXd8d5/OW1yg9vuhjzj+dJ7iG4yNvUY/zQ+cJ1hW3
fWr38BZn5n8/p+CMBDAWPVy5gdM+ieH3CcJTu2/g8ZPjYIlrH+8hpPckAu8X
Rqn3C0J6TyKk8UT2USXXeuAuNuaZTf31+Is4Xj6q40Wbn0Hw/eGmpno1ch3W
o6WXRBV02rMRf2d0cDyi+IpvazR7njbppVJNe1+A8TIwXsHsbzpkJV9/TvEW
37nSG6BoUNXMYtteKpUafx2b8twA32v+uDxecprimNBzwSiTG9Tg+oP2a1ev
hzfZsO2zcsjlr63HP73O3ycppzV98vmyS58oQ7T3SeXV90lKPU1/3Fb1h1KD
238Ub7GZKg/yR57t8l91gw6PllfsWzUYvplvDiu02QsUzf+Yx08JgrAyk/6u
ccYL0rX7ub/U+zl4r70vwvgsuH67tpd2T6h/9lC3E+PNMOy7t2vrjAqgeIqz
8o6zZgbAaT6+4OpM5cGkKQmw4mnC1YOtg2FH17Enzo+L0b7NcHrN3i9fpESD
KXDrhmNO+y5e6987av8qI7X3CRg/0dUe3wTt/UEqvW9UzrQZW/K6Seyw+62r
GHtVCWsV99vv50xiyfH5o2usSYBNvV726+qrx0OslqeOnzjT+zxr28qpr2Zm
FKve4KlJrK7ZtUUjgx1Si5azhGalKB3Wj9ni52WHe9klHx+anyLXB/N4fbK9
CV6pBzZuSXmk/HvrvzJZe01g6PFmbN/N/yked3z/jj1rgmNd8vg7qPB47TuV
qyOCan93xwSLeftd6uTDaT2+4YANqn3TUbVvxLEeanlavwipPNFQ67+hav+J
pVxf0f5u2fZotyLpXqITH09iqLaeWNX1hN7DqPtHN/EVn09iqOV5wLGaCbA2
udrr3Z8eKg+6M/7FqHvdGhTrFAPtOzZfNqHaa8dyzZ7yVO0px8W857Ll88cX
NKv2qDJSy99Bza+U0eSD8QP3Ldpx5t8cO3xbol/0kwcmEVup79BR1+ywusnM
H64+xv1AmuIyly9YRIbL/+yJcn2T3xD7dYtYfeXiuc+lnyt/mLpfCbvsxIuS
PjxdlQB5/12UdN/R6ZC9TKf/ouH8whtLv51qhn38PYIw8/7X9Fkk3Lmd9/eW
7N++qv1L8demtYu8+eKJcz/tst+uKS0Wtim3Js0iHHE+p3/5302lVduhPe3P
LKLasr1Vlu2Ng7lbyjk/mQ71nY0diu95snRSiYuOh3lu1D/bYUDlwYN6l/hP
QXpFlU729HjVniZ/vcOx/WvdMunx0Zybw4f9u/nK7XcMe3jzhyXlEsD/ptuc
s/2CQfIHpfhiZ07n/b2h+GMB6vmOTKd4HWX6Bv7beZMJQqZMGtPq7WPldI8u
35TcpccDKwld7yX9rccDK3g/3Lqtnx4PLHrciXaPa+r016XKx499HUj0aQez
I+ZPCyT/4eJN9pp3FEO6EY7dHRlw9hjGAwuDvq74Ce8o/lWTmC+CQrz1eFN5
h8evx+i/DzXhl/fjf3mv/z6T6ueh/x5TtwGFnB9/Oqc8ZvBWymXqv6uz6sam
EsuP6L9f9Nv2lnGmv/XfK+oy1S0oqY8Rarct9iDxkR0+F4vuXtc9WPRTkuxX
9tlBcfcesC4gWEzpeqBr8cd2WD54s8+U73zFgm2tC17cbYe45ndyb3b0FYe3
XdoxLdsOno13LK69bJui7h92KDXWP9y4OEePj38+/E2BUVWCaT1Y+Phn58dM
+/vVsVkb+t3wBan/6L7Bdf0eahb/BzOwXlo=
   "], {{
     {RGBColor[0.148, 0.33, 0.54], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
+l3qpeDcqb5nSz/n0OSJz/r8gnMM4pLH/S3uYXAfI83jXsF9xpzBplkb58jc
b6M+w3qXeP3k+9DExuTF1Gfpp45LHbw3eVw59s59SeZcZqy51msY4DmX+Vv4
TPbFHhnzmNfZ0vEJvoxYhfrDVUnsk3urtfdfoLFV7u9wRwrsn5PHvcDqcpwl
1tTX0oiXyeWudU53tOlW5Yh7Hi/FfE085ynm55X2F+gYOsz5BeeUzSxH1kz+
e6rfrbnznMV9Hu5eXVwOekUx7vpw5+dQ9X1ciprTplLsH5qcCB/IN/CDxG3k
M+TR3I0dZV9DPYE6/tVJ4Cey2Ovck1yCOgO17Wc95jrTxAP9PYY4nPtrYzzn
aZ7zW8/JOcfv/C75GzE8GD/XOF9zjm1/ge7MsUxr8z2+Ra3jOc9zRCnuyZ2V
R/7EHRpyKJ7rTB9ZCtzmLhvnacOsb9y9hr4rj7gKHa65710K/OMe7mzLuzKP
vT/nNXDnGJt6pBhrn2dMAAfBwxf8reVeP/HnC+bnUvej9w1sG9hFQ/t++Ma6
Hva7S0yzZu6g4bdYJzg60liKHb1o27nefOZbC+sEFrbQnjqVwwbr5CGvZyyX
AX53v99lneQp1HaoxZHj/B/FvVTw
         "]], PolygonBox[CompressedData["
1:eJwtlVlsllUQhs//f23/838fCkVr9MbEC40iGjQmGKgF3BE32qKocYEEol7Y
xAW0dMGlKOKCgIDKqrQNtomAXrjiEoVKLVgs0CI1eKeCgV5oVMD6vHm9eJN3
zsyZM2fOzJzzZtdVP5IPITwPSsCzaQgXFEI4H3yQhdAI5peFMCsXQmsM4R/0
raUhXIXt3/CXWXsM/aPgKWy3IS9Fl8dmCvo6rSUhzASL0LUXQ1hYYpu2on3K
9zz2N2A7CVwIH89aLbpLkCuQ5xLkROR1YAFyPWjOfKbOrsLfS+jGIpcjb8L+
EOdvA82c9yr6JdxpOzgB30V8A+g+Zc8cYuvEvhI+zNoD8OPoc/j6EbkHfi7x
fMXekFn3KzYtyHeyJ0GuxMc8+OvRd9nJ2n72/gw2Y9sKDsO/Y08ttuOQ++B3
ROcqByajn4v/Gey/DptG5KnIlyOfwH4EfC05G0JXQyhrlEvWGtC/QHy78LcK
f/Xoe8Du6DXpBvH/C/72srY3cQ6Vy2VgH/LjYAX8e9nDB8BB5AHQD39f/gr/
r8EXg17ktchN8gfegLeAGvhF+J8BX4zNSuQh4q9GrlI98R5HkW9FLo1+23Zw
JXwR9r/Bh4g3j20va73KBfgW3R7QkjgmxXYtNpdy1jgwE3lk6trp5YxR8D9Z
O47tk8gl8DejY1UOXovOuXKvN9RbLke+C16BfQ9nfcba6Jxzsh2eA7OJ7wiI
nN2UObeqkYPs7UPfh+0OcDv8nehcqQc64S8W/PbK0XPRNaJa6QIH4Ot50wbO
Xoi8Fbkb+y26O+jGvgu5OnFOlJsD0bUpm354B9iaOEcb4W8Vffd/wW3I7+Gz
Cd/NYAt8Omt1iWNW7Ddxn4eI7ySYBj+auncPY/87vIPzO5DHku9r0L9bcO2r
BlQLh6J7aQ3yIHwDeCZxTE9jfyS1L80YzZrl0bWnGlGtVLC2n1jPwv8EdHvA
7sQ9MSdzjahW3gZfYH8P8in4At0P/TBrs/KuodLMPape/Rof32A7mHo2qCd/
gn+o/su5Zz6C/wGOJa7RJLqH1EvqWfWucqhcngIT2b+B/DaWeMaMiK4Z1Y5i
VuyfRPeyaujj6Jml2aWeXa/awMfd6KeTkyXw9oJnmWbsfGwngzFlnmkXw88u
uhc0wz4v+A30Fn9hn8JHglXoTiKPgt8MHs47R7fA+1PPPs30ldE5Vq41YzVr
O/F5WZlnzo3IXdG1XIvPneqFzL5XI5fDs8xnP4j/7tQ9r97XDNcs15p08nkD
8jlFzxLl/EvOuo+1WvhU9PfD2+SvzDNuaeqeUG9oRu2L7nH1umqwTbM386zQ
zNbs1ozUrFQNF9T7qXOrGjyWuuZV+3280Wh4WeZeVs2E6B5Trynnyn1N9OxS
j6hX1JPqzSb2b+Quy1LXumbGCnhV6tk8jH4SfELqWlFNqbbGR5/9AyhHV4yu
3XqwDn87omtVf6r+1imZ/w717NXwTUX/ZfpDW+FXRPeCZoJmw72ZczkNPIHu
tMy9rBqI+hsy6/TnvaLazPyWmqHXZ45BsWgGpeiLmWe1Zl4eOYu+u2petV+Z
+q6asZq1mwuuFb2h3vLM1HfVG58BPz31bFaPj0H/H31/KvA=
         "]]}]}, 
     {RGBColor[0.50875, 0.48250000000000004`, 0.52], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmgm0VlUVx+/7hnvvd68mk0mZczYrDQ7EkDjgVCo40AOtlgqtUBByQC1M
ScUEBR9gpfR4gPieTCJkKydwyqFMUUBtUHNaKzUGQ1AGlf6/998sW+vddfZ3
xn322ee/h/P2O2fMqRdUkiTZq5ok+kuub0qSlfUkmS76WH1nqvE4lb9umN6a
JclA/R5Wcfstqj9L9HbVT2+4/gPRx6htaMV9j9bXXHHd4DxJ3hV9mspvlEky
W2v9qUiSi0XPFf2Y6LM1frC+8WKol+pnqf7RwnxcWPW6F1VNDxG9QOUlQT+f
m35R/fdKk2Rc1eOouyj6UHdp0JSXBf1H9f+9vnMkg+dUPpt6TJu+UVXLZLda
krwg+vKq+1N+Hzlo3RaVrSrXUqc9HqzfV1W9j2min9E+VsfvfdTeS991ql+h
eZbrW1LxeOZZoP1fqb1fqb6zVHev2r+k9q7irYfaHtTvB/Sd0eS5mIc9s88X
VN6vtvv0LVbbZWr7nta+W/OdV/Wc8IOcV8fekMO42MtkjR+k/terbNL8w/UN
Vf0Utd+ob7J+j8lc3qz6P2chM/E5UWteq++ppuBX30h0QOPuiN9b9LXrm6Q+
Z2rsuSqb1WdN5nF/Vfm05thY8dqr6u47Q30mVK2jnEWH6vdTvxMSn8Olwf/t
Kufpa6l6bDvybjLvyGv/4Jvy14llMCHkQN3no/55nfUpVfM6NvOem/X1Vd1U
fZsqlgn0RPWfWfVvaM6G8+Vsnqx6zKbY/7ebLBPkdE3q35ODP9bfOS91bxXW
ob9knr8lzuA5/d5X/f6Rm+8JoZ+rNd+q1LLm7HrHWrNCj+lzhPTgPbWfobEL
gkfkMk6/N4v+fm4MaI/+06qWaUvIFfq94LclZLqi6n7svbnuPvyerm9G6Nt5
QY/kDMX/GaqbrrU6ql6rNeQ3M/Y4MsbPSbzOzJh/Us19bxM9o/B601TunfrO
g0eDMo+dFvy3xNjWWGtG8sl+4P+Yumn2RXtH7H1W0IzrEK+LVC7W3NWq6Z9W
3D4r+p8f9FzozDKnbnxpnLo9N94sCMxBf/cPHe6jPgegDyp7l247XOUb4u11
fXtqrX+pfE3f7qKf0Bz/FH2yynWF69eqPD33+XLOd6p8hXuifZ2dejx1l6XG
I7Coe+Y1wIpdNGar6BNKj/tXrMVdeKnu+1DV2Jq+eeL5M+p3u8qbNEd/1fVN
LZOe+n246PNFL9O4w0T/Tv2GqP8AcEvlJfq+pbp29R1RWvYrxfur2sMa9gme
5b47P1D7j0Tnok8vfadOTN32q5rnpO1Hpet/qPLvGv+U5lmR+UzRaXAA/Kae
czhEfbeJnik+co15X3QT96Bu+kjVV9TvI9FjKsYF9g9+JCqbUuthj9J0d43d
UXcb9R/UPddR0Z825FZJ/RsaTKEenUSn+ocMu5Red7fS8mZdZL1B+3pT9e8W
3tOzsa/LJYf1GjdCX/fUMqSecnXQq4KeFHq+KtZlvjdCxwqtdwuYXbrvqhj7
itZ7TvTLhdd8Luo5595x1ktV10f0Qo0/pXT9mZLJ10V/Q3XztNdviv4mOJ35
rnJnsdGM3VX0AtEHlC6nq88S1Reqn6/fq7THLshW475Smv5UYV7heaH6f6n0
+jNEL9bYDDzU771LzzFN9QeL3kP1x4u3biq/mtouDShtX55SfX/165eZP7Bl
H/pr/KGl+f4wc5+9o35+3ff3xMTYyh28VuV30XPqVR6rr5fogSqPKr3ukSqP
13cr56/57qq7PzrZrPHb8J1K2wawClvfR/ULVb+79n5IaR4OK203sSk/SVxe
GzQ2ht/YhLbcPsCVgS1XhJ8woTQ9W+2PZMaHfxY+z75xpqNVjkp9b9HRPnGv
59Rdj56fVPq+f0/ltprl/PXEfgzrrso9zwXoaMV6hL6iS+gb54F+fjXOYkDI
75CQCfp2aKwLD9Ct+KiBrX8TzwdlXoP5z1HdmNQ+2aWl6Q61P6r6sanbb9TY
c1U+HjxeFbYDrLgsfAtk2BT29I2K/WF80dcq9nXxb9+CF+3hCNGvV+wP4wOz
Fuu8rN+vVuwPH52Yz69lll2q9otU36b6TPTFomeLXpdavmDRf0S3iR4ArfKV
ivcF9l1Ssa3E13og/K1bYn/0eTs1f/DwWG4er83sb+Br7Bu+z/6hY8s17sGq
/VKCgz/qI1i4N/f896isq7xQdbPU5e7cOnKqZHxk4f7LVNdEX2QNf+hX6nlm
hH3Hzi+q24fARnct7HMdntu2cdd3oM81r4eMRmTuA8+91e8jtddVPpSZpg7b
CF4wxxdLY8uBpW3aK2EH9y+NLfuq7Bk4+2mVe5XGjT1Vrk0td851Ue5xt6n8
uO69YRdW5JbVcpUD65YdvtUva5bd6Ip9gVnhD7SGD4KNqIYfgQ5v0zpbU+MW
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
zv8A2egLug==
         "]], PolygonBox[CompressedData["
1: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
         "]]}]}, 
     {RGBColor[0.7695833333333333, 0.5741666666666667, 0.3666666666666667], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFmHnUVlUVxq/f977vvedeZRAR+HACxbE0VzJKttDKCVEQUFpgWupHuhaI
gFOpoIJTaamAaeYACoogo4pWQq7MJscExf4JZXQFJoOz9vx4Nos/zjrn3Xff
fc/Zw7Of83b78dghY5qyLNuwR5Y1ax6oH69oHKR1iwQn5lm2WOu3JTtbo4/W
72geqtFX66s0D5DOIq1H59afKtneeneZxvVNlp0U8tlFltUkH6l5tX4P0+in
d+9pZNl7Gt21nlPLsuskf07raZK9r3Gw1jfXs+xhPXtG6yVllu0lO0tTlm2R
rY1an6n1Bum8pnfP0Binb/bVOF76GyV/XbJBGm9pnKXRU/JNkr+h9ZkaHWRj
lr41T/KV+j1Yo5fWP9P8oL77tNYf6lubpDc82Xa/sM8ZB4SvWmuWv6v3VmkM
0egt+VGSHanRqm9sjW9N0rOOWj+q9XzpLNS4ssn+bJFuF40T9OwR2ZwZZ+d8
d0vWTet1zV4Tt583WQ+dtZLfJfnpkk3QXs+RfKLmTpLPlnyBdB6V7Fo9X6b1
+mbH4IyIP++SAztC/0bJtmv9mNY3aD1ftq7Q3Fb+eE977CNbp0n2fcVlm/Q+
k/x9/C/56ZKfVPrMn0q+RvLekp8q+VmS760YzK0UG63baf1EZRv4ZLK+sW98
9ynyUzptpPO4dKbV/Iy9/T3ZP91l/wA9S9I/UPMKPT9f480m586D4R9iR370
idwkfuT7F3q+Re9u1nqG5nUaPaR/m+xeINkVsrlIY19izXe0l68bu33zdeyT
/BlRcw4dW9rGzNy5TE5vkH6ld7PcPuasX0UOTNe8VuOQiCMxPFDr+xveW3+t
C707pWb9J5Jz9nulc4scOy7zTM69pPdH1/yb9TGlbT+i36XsTK15zzfGe7fJ
Xhd9d0rkIfFnn+TMt0rnP3XwjdLn2Kz1kaVz6L9aj5O9y2vO+bmSX0VMNd8r
G89LtlQ6rbnxYmrgw+ioH77bGvKFhf2G/y6OeFFrB8vve+Kfyu+0Bv6sb7Ie
OsT5oahZYoz8PD3fXLfejzSmav270Hk5Wf+gwjVELT0r+U25ceJOPR9b81nA
hHFhs0/UOfk0LPAMGZhGfX8ZeDK+Zr+Anx/UXBfU7zdLY9vDemet3r2iZlwF
M8aFD/Evfj5De5iRGxff0fqq5By7UvMcjSfBIdkb3XDcyQX8AH6R89gg98DA
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
3do=
         "]], PolygonBox[CompressedData["
1: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
H/Ikf+k=
         "]]}]}, 
     {RGBColor[0.9208333333333334, 0.6720833333333334, 0.35458333333333336`], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmHnUVlUVxl/f733fe899+8NZQdRPZvBLoPrHWqCCTE7opyLigHwfkwMU
KmVZy8RaDCoolbJKcUhNzRhEEE1kFtBaDatoiQYITgkIIkOBWs/PZ7NWf9x1
9j13n33O2Wfv59nnntby7eYJ5VKptO+IUqlB7UtFqTRXwgtZqfSbSqk0rVoq
Ner9vrxUmlQrlW6vl0qXS+d49V+m9gI9B/T9c32/UU8Xye+nUukK6Q7VM0Dv
v9CYA7L1Del20vvT6l+quWbX3P9VyVO0iJP0bZXkF9U3Q/ZXSn5aNo9Vf0vu
eRg7U7rD1A7W+2rp3CX5Vukf0rgzMrdN2NGY9tK5Hhv6fpye5eqvZH5Hflu2
7qx5DTPKnusVyUu05hOlM1Rrnqrv0/T8XN8n16w/VPKiItas/d5btU6T2q7q
+23N9i+Wzn/0/l+tYaG+tYl9XVp4Dc1qq5n9uUL9N0ivs/Tfk82L9O3fkr9Q
3wtVr4exiyu2g88Yd0KMZZ5nNe/9ZZ8D8rKSbTwj+b6yx7WNsbPVPqjnTH1f
mdzXLvc8zPdZg88RX+Nn+hfGGppCB/mm3Hv+QDaGSPfimm2elvkd+XfyZ6P0
F6tvdM39R2rsyLr1b5ON/trXOOms1Tr6Sh4reY3kaxs85sjYI/t7FT/IP+30
/lpyHBFP25lL8j0a26HBZ8LZcHbPqn+65NPUv4WY1rez1D+8ZjtriMm69Sdo
PeuS+5mnc/iQeTn/2REzK8q2c4zkzdKZKbmP+s4vHEfztd8LC8f7Askr9e1+
6Ryr93caLJ+tvumadwZxVve5IB8lneVl2zyaeJadUzRmvdb1hPYyVXqnckZ1
x+1Irfn7+taVNWquB9S/WmMXqm3S2I815teSb5VOF+n8WDr9yaWK3wdIvqri
8U9Kbw/60hnIGUjupv5VkntL7lu2P/ALcfWc5G6Sf1Z27BMPs8rOV3KenCUe
u8T5cRacwz2SOzY49/AXZ8e53av3VZlzfCuYlNtn7SQf1PpXSO8LtYOkN1Jy
d307V/LlkjtLbq24/3QwTe2b+FbfV+s5R+/92JPGnyv5GrWtegZKblF7XcX7
xebNVb8j36lvIyTv1ro+lbxU8gG1O5Ln2J08bkT4arDmGBVr+Im+tUjek3ld
LWHzlqrXis5XkuN0nPY4X/4/TroL1E7V3kfID7fUfd5PSf/usmOTfRG336k7
T6ZId1vmGNwh+d3MMb4zd15x3pz1VvX3lrydOC/77Dn3IYVj/PnMmHpXYB35
Dg6CCVNqllnr4Xfwp1vI9DNucozdEDK5Scs3MHoRGKq+c9SuLzvO8Ftzcoxd
orZ7cuyfqHV1SM6J4/FP7rFb1PZKzr+2hTkLvsI/AyL3WTv5gu+mq//1suMG
/+PXxQ2OB+Lu5YhFcId4Ipb4TtygM6xunUWa96yK84Fc+GbFWEAuv1H22XOm
36o459njo4X3OS7Zf1PCn2DhRYFvYMvq8Ftr4XyBV4mFh6rGuRuT9/BYYZ+9
Hnu5Ptk+8wyKdbCGXpkx5ajI8fXh59GF8xT8RqdnZj5gDuYC38hndOAy4qFd
nN2UyHfOfWxhebzsPCQb6/CZ5EMNxgVsUDvMDq5pjHmIP+qLZ/7vzGgZ34U4
xLey80Yy7oF/YN5TcZZP6Cx2S34887nSt1Zjxyfv/XH4oep6Bqw5VfIpwQuz
giPhx19lHnco+Uw/iXNtzhyv7Jfz3xO4907UFUsK88lzh7Gs6tjAfr/c2H2+
bI5NzrE5hfELHHskc43TFByK7/Dhh8mxsKzseACz2PtrEd/E+Zw4qx6ZffSj
ZNy+Xe0tyRg4MTnX10VegwGsh1wiRolVbHUr3M96iVFilfVNixxnfbsq5g6+
rZHdk7WecdLfmztOz5SN25J55LvJebM2cGa/+vZWnA+jq85rfIuPd4c8KnSa
oibcEFgBN7SPeJgc/eRHv8hPcpN4nBS1Hzb2hR3qCPCcdYCb5Pm03Ln8aZxn
79wYNE/tmKp5gX6+7wmZGgSOWHMYEyreH/7bUbFf8Qv+wa/XR2wQI8QB8QaX
UbNRX1HfTgs8X07NrLVdw74k96l4Hcw7HjxX/01111/XRr1L/dW/5jrus+BB
+JD94wf2Pldj2kt+MWJsQJxjS9TS1AurwSBiS33zid+qeRiuZix8PbpifgJD
8uScGaWzfrhwfA5W38HIJfLoubr3u0jzFsl5P0a68yrOPfyRJfN/S9gg1ntH
DUB9CPYeijoCzKE2uyruEVeHDN+B/cQT8UPfNaGDPDx0iNOhUbvSXhEyvIkO
+x8QOsisi3oG/oOf4X5wdV9wPZx/ZdhhXLfANzAQnCIXzwtd8AhMAXvaRyy/
ntzfXrrDCtfhY4m9mutb+Jv6jFh6LPOZNMa5wC87g2PYM7lDvsIvuyI3H687
Jh/V2A5Vn+Ph2qtj3Guo1eijHp0n/Y7SWSL9J7WeifBk4VoG3AFzwLNjgxM/
jjqHeofakfz+nuS1yfqNcXfBJvMsqHgdncLf+Aw/Ux8xFxx0INb3StxTGMfa
VkSNsy5qWTDsh5rnjsx5f3PEHrXmrOBCePAG9c+tGPfBZDgALrhJ/YNzc9jT
hX25I/zJnbG5YswZkXwPuS5wuDHqJFruM/DX0uQYoVYak8yp7+nb8OR7y1Vq
L03O58uiJhwYHP1+bvkD6d+RO57G6RxGUctKb7TanbGeCWB5cNJQtcML5xd5
tiy3H/AHnAmHEmNXF44Z7ls9C+MYtfy1heMBbPhzMof+KRkzxgRm/j3Zzt84
39z5doP0ryt8psTLxmS+e1Pth7nrjH9pDZsDSzcFtvULfO4b2Mn7oqiD4Bdq
4EFRn4Dbo4IjqFmpXbsWjkvmHSl5o9byVuQ19RJnwflwN4K/GMM9jPMEk7lX
rYx6DKxYFXO3yv4xsnmJbG6K8dzb4M8BURfBY/2DNzck31X+ofaj3Gvcnvnu
dnZwaJ/gCmoD6hpwgJjZXPOauGteHrxBzlyQnM8XEmPJOTwkOV7xLXwBv1OT
UbNhs2dwPU+PqO+nJGP03sy81xznOCb82RRjGyNu92X+NjX57t4Ud/xW9bdE
PdEatQXzUq/1iloN2+QJNhfX/Y+mS+5z4Q4CLnTKjdtgP3yHDrXN7IrnASc7
574fcNehvsImedchN/7CDx1z5zScs6RiW/AmnLc4bD5YMU/AEfw/AYd5518I
8zFXOfMdFVxpI5sPqH+ZbLbNPX558l5bY+8n5TFW/UdkvruCT6uj7uBfEXVI
c6z5L8n3jb+qbch8v+X/REvYxIf4ZmPELf+fvpy35Fpmdtj9En/iv9WpuTES
fv40893wp9RcuesH/tP8Ie7/f1T7Seb76WTiJzcOg8dXJtczw5L3xpqIc3xw
MOpe/oOBn7zPqTu/dkp/ZtV+XxX3LmrGhzPXl+TJHcl1HnnyA7Vbc9vumPwf
EJ+9nPzfCt+/Inlb7jw4PflfGH56Nblmvzu4kpglnsEEapy28b+MHN0U/0B+
mZmX9mrsxLq58+a6/Qyvs/9/BgdsSub2k4N33s2dt18LrKU2Js83J9coW9Se
UZhbuVt0L8wR8OopcXdkbuqljsFbjOsQ/Dgxau9Jkctzg/f3Z66TqZfnxl2B
HH8pmff4V/T7ZN7jXxE168DAoB2ZMQfseaTwuuGKj5Lzi1x8ufA9l39XjTEn
vPlW8v+Ut9HPjLdg9vuZsQ7u+jD+78BL8HWn4OArCv/v4z8oePll7nAuuWv6
rxfOD/KEdZ9QOAaIhf3J58m96vPktTwU/NkYuM2Zw/HokbvkMDnbNXfsbY9a
iVoKn28KfqFm558n+uQ7/y/A2s6F8488ZJ3P152v5+l7m8KxRwzuSrZHHJ1U
OB6IC/KAfCA3e0SugLHbkv3ybjKWgClw/zvJcbA1+T8uY8kjeGdLzRxHyztz
9I+7yLnBU3AD3MG64Cti+3+XqAkd
         "]], PolygonBox[CompressedData["
1:eJwtlld0VVUQhg/JPfeeffKkNOnVhGIDfEEXIAiBKFJCSyippFCVtkDpNiDS
LBTXUooixQIEDBBaQAUp9i4goYP0bgFdfr/Dw6wz/8zsOXvPzJ7Z9XKeTh0e
53neLigCZYee19D3vMR4zxsceN4fzvO2ofgc3U34txM870DU80qRXQQvAZeD
j2BfjbXjwWPALcGjWd8SWW9+8Bmy+eiOICtBV4KsHP40PhqBXwffCy7GpnKM
/+J/HvwL6LPhc6FryLfgbzb72wg+i+4UlMT611jfkPUnne39VXADcENwOTiH
taX4W6o9sJejyGrg6xj6tfiag70P/wH6eGz/Qt8NvYfsb/j52FTD3yr0FbQ/
ZJ3RH0L/EbpZrP8F/mfoffBM8PfwX0LLwEXgffBHoDXg2eAI/AJ8Ffm25ifw
fPAM8Arwt+DD0Oo7/uPhF6Ov5NkZdJbvnNm+gv4r/RtZHDZ/sr8u7O9lZAPR
50M3kM+Dpvu2py/QLQTP9O0MB8HJnPEt33KwFl/DwbPAyfyvL/hfbHZiu4c9
/ANfAbrFvxYgq47tGXBj8BvsJxEcB74NXoi+BnhNYLnXGVYHlhPl5i5wA2wL
Q1urf26Gv4LNOdansv4CdiuRjfatpm6Ci6FtnuVEuZmCjwxss6AryNZB2z2L
iWIzFn95nCUfGgFuAdWMms8UdOsTrFYP4X8d/GLocNRqqCr/XgGNwjYP/9P4
12Vnd2E3/7gEn459B+zXY5OPv1+RfRixHCvXqhHlUrID8CXYbI63HCgXxeAN
4ExoemAxV+xV86r9T1lTA900fNRCvxtcU7bgOuALUBv48/hvgn1zZ7Vekf01
gx8K7UffCTrL/x4O7a4pxor1RegxdBeR3YeuKXQB/hGoM2sHsZ9+7Kc/NAXb
wcj2Yd8ROoO/j6HV+KrJftNZuxd9bfAM9PWw/wG8KmI1rlrvjc09vtWIaqUf
uI5vd6TcWc0rXrWR9UVXEjNeNrItRL8XfTJ0Cl1SYL1hA/Q7uuvOcqMedgM+
BSrDthV0DPslMYuVzqizFnC+PpwtHZqMr0+QLfStp80F33LWC3UHbsM/Ce2I
s5ifwNcT4O3wraHj4PasuYHtdag5vppB1yKWY+X6MtQO26vIHkJXO7Bc1kK/
C191A4udcrwHXD+wXqKY7nd2Rp11E9QIXU5ovU89MRc+C30HdO2R9YfPgzqB
O4Cz4V9y1ltV06rtVdAY3+6E7kZP9K0jtsdu8M87u1sjsVmu3g5uc0evs/QD
twM/Du4DvwibPXH2z8Xww53dZcVEsRkYWu/WDMiDzw9tFqiHFMAvjVktXoLu
B09WjcA3JgeT4C/ho63+jewB9NOd9TqdQWd5J2a6K9CDofmQr0ehLtiejlnt
qoYGgU/GrJa05wLNptByqRw3hk8MrXaU4yTFCpte+EpiP6Ph341ZLpVj5Xo9
uMyzmaLZco5vSpzdwWHKX8zuou7QEGd71F4V017Oaka1c1M546xZ+OgatR6m
XtbV2VkUA8VCd053TzPjN3QT8J/vWw57gMc622saeBz8VNYMiNqd1t3eEVjv
ScSmTL3J2azbCi6Fn4i/At9y3Be81dmsUQ/eAj8efZ5vM35tcOcNoFmK/2z8
j3TmWzEbBd8itLMpJudZ2x1Zq4j5kC/VnGpLslT4cYH5UgwUi0nYFPpW45nO
ZqBm4XLwN/BfO+M18zT7tjub7ZoJ2/SeQXa3Zz1evb4wwe5+MjYT1U+xORi1
N4/ePoMTrPfpvfQma0+gL8b/XP4ZVb3HrNfqTaS3kWxkKx+LdP4Emz0Z+H8G
/nrMZolmtGa1/ql/KydD0F9GnxmxmabZNgl9WtR6lHrVUCgjajLpJqhmPbsj
E+Gvsj4nYm8ovaWOEe+UeFszLMFmlGaVenAfdDnYdIxYTBVb3WHd5bbI0vVW
ilktVMLHStZmB8ZrhqXhr8zZW6ki63PR7XD2NqgMHgh+ytks+X/GaNbhry66
etCA0N5EehtJ1h+809nboapmLvabkNWPtxlTCn/OWe+bg34reENgbxPZbAys
R6lXKQYvOusZ6h0jkL2HbllovGI8VbM0sNlaHVlaaHvS3vRGPOosx8q13shZ
6LqHdlbdcd31GcRgdtRmhmaH3oB6C2rm/Qg/AGofsTuku6SerN4sWQZ8mrNY
687q7lYJ7W0kn0UJFkPFshLUA11qaLzeqHqrNnX2FldNN4HPRN/Atxo9Dt6I
z/q+yaTTDNAsUM5znb2B9RaWTUZoMVfsq0C9wD1D4/Xm09uvILBY6c2jt89z
znqLavBZ+P8Al/KglA==
         "]]}]}, 
     {RGBColor[0.9625, 0.77625, 0.48374999999999996`], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmWmQldURhi9z753vO99NqkypoMIgiLLKNsOiRh0Iq4CKmopRQBBcEBAV
EPd9SQKiJCUoLpj8zI8oKAwCalKaVEUYFjVu7LK6xCRaWSvR5H14e8r8+Ob0
PafPOX36dL/dfabr9BsunltXKpWG6k9Zbe9UKjVUSqU+ai/Wd7boiWrr1G7W
t1U8ffNSaaX4O6h/hr7R6r9S7eb6UqlV38SyW36fI/rYin9D820SfbrabkWp
dFBjp6jdr/aAvo5av2v87qK2KSuVfi/+3uI/Xfs+q33ba6+xsc5p7Tz+ZvBc
obERmjtZ7Yqq12HNvlXzvSW6s9Y9U+vsybzG5lhnXc1n7Kd9empsmr4e+qYG
PVnrD9c694q/g/iaRS8W3U70eI1P0Neuzvz8PkH0heJZpHmXld03NdZBH+gF
XbXtAf8y8beqf5vknCT6ZPWfK57OmWn2v1hzTxHdueS9F+n3FtGX6czD9PvS
5D5k454Glf0beq/G9+k7Sfy/0Hl3iX5Oa60Rz27RL4lnlfq3qB0tPbyn/b6j
8XfVHpOZHiPe9hrvo697O695XsU67a05T6s9TjKMTO7brTnbyp7PXGxqMPco
Gc5Ipt/V2Dx9Dfr2l3zWznH2hqBXie/a+A3dV/RrWusJ0YXudIvoAfk3snKn
39X6QzT+vn5X0Ku+7Vr/W4XpRvEvkW7GaM52/e6qb6e+FzXn59LDDtErNXe1
eHaF/dDuDvo58Xwgnmcz6w59NtFKtj2iB9V5bfjHq29c2AZ2wm/WGqd2dZ3X
Gah2ufi3hpzlis+FPZyo9v2Kz46+98Y9nsW66msQ3UfneUb08dhAzfztddYv
cvMMEj293nIgw5Sy7RabfLlqXaCHHqJfCn9foPFR+s4Xzw/KptvF/U/S73dK
7hsdPEc0d3zVa59XdX/bvJExlz0Zb6PHhwz4Wc+g19ZM6xqP+gk2x52yJ3vz
u5fWXxP6uUdnu0Zjj+X2uUkxh/OODLvCdrAh6NcL0z/RPgekr1b1TVXfMPVt
LluvW/V7vfZYn9kvW6req1/V/eAZd7Wu6vvakntua9gVOn0r8AcaG+RMveKM
f4j93lG7VzJswu9FnybeFyv261Faq1XnaFT/R+Cs+qYUPhNnQ4eHQ9+s+WHF
toRN7Rb/m2CD+Ltlxg3w42/JvvPXZHl6hJ7ByNVh25xjeOhhvsYXho/eHDR3
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
iVoK3SAb+kGvG0PPTxa+L+5tcHJtMkjtw+q/QGs+pPbEwvkV717rcs9tyX1v
YCZ3h447Rg5GHUU9dbDwO9bqeMsiDrAmedbe3D6zLzfuH923znFhV7yJvRf1
CW+BHQvHYt4mOxR+x+CNjXedCaH/LhGrOePOqENvV3u4cIw/Qh6ibzFvLoVz
S7COtxfwlrcF9EXdQP1ALF4b4+Rj3XK/vRzCxnO/gx1O5m0OfmrNHRFfGOd9
HJ/6ovBbzJe84eR+mzqSXPu0Bh99vOtR+7QrXIPVxVs4+AsOfpXsG19TfyTX
iqXCvsO5wKVZud+JrgRXcr9D1Qrnlltjj/65903q/3Oyj/1F7RfJefmXyXki
fk4ug26IRdTdf0qONbxbULuS9/0w8ovrqs4lyDvIUcAifOhQ1I9/zIzdTdr3
ucL8K0M3R+Ktiryc/GtKcn4Gpl6UXHuQR45IfidjzuTI15EN/CF/mR2xiRxq
TsSvYVEPES/Ii/F/6qvuue/44+ScYnHwgaubosbEbrFZcPbTzHFwTrItcOfk
0s1hM9z14cjbZorn48zxZVZyfv1CvOUQq4hZ1NDUS+TC05Mx6qdR+/MGMDDo
2wrjLZg9Ld5Mbs1dL2NDbf+HeTxkAJfB/Naom7h77p0YADaSx2JHP6saD3jP
aAqaPnwc+ubC/OTU/0yu5f4V/0dAHs6O/20PHOSd7LXA6/2RJxBbeR8h7x+m
uX+Pc/4j3i3AYeoU3t2XR+2DDl4PvOadm/9/4Be3FD4X9cH/APbxIck=
         "]], 
        PolygonBox[CompressedData["
1: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
         "]]}]}, 
     {RGBColor[1., 0.8833333333333333, 0.6249999999999999], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJw1lslzlVUQxW/Ie3nvu4+AsJAqE4YgIRASCDOEMIilUla5ECIstApFNg4k
zhCwUJlkwbCwUHfqX+CKhQwCgqAUuhAxAyBQBVKuLFjpSn+H0y5u9fn669v3
3r6nu2/Lpv61faNSSn8x6hl/VlPqQTEtp3QExQHGHfSNjGXoRyNb+XcS/Bi2
R2sp9ZZTOoxu1Cjb38bm63rP19wR5KXw9TN25VJKY4qUHgWfYM4q/OwDP4Of
PcjeBs/5f/1L4XNDJaWzZa/9BnYFfsbjp2B8gW42flrQHwevBNfQfwnuAncj
jzFqcY7jcZbfk21uIHvxv46RGVsq3pvO/To+K6z1EP76wFXwOPA59vJsg/fz
KvoG9GNlE/OfC3+L6r1OM7iJsYp5VewXoj+FvMW8+SXvT2sui3UnIGfUpdRW
5/12x54342N9xesqPoq74vwCh/sE39/GXUwP/fdl71UxnML+HmatycjBsv3f
TPbbHfHpC//iwVDZdktYZzHjq4jV6OzvM8i7Ve95anYspZdNzj776ex58qG1
9E/fwnfibqZgs4A1axXHZVvFfJzOPpez/grGtWR/WkPxPKJzIrdiu4b/GzQ4
T2Nh//PwPTE7rivA35Ud++vM6eT7InGo8H8W+AdwGdwOvgAugecgN2GPuzQp
7mkysh+bRejfzOajeDkmmRPiRkLfgc2P4Ibs/Z9hNPLdXuc5stdetKcx6Gdi
fx5Zn80T3aPiMA/dy+UHLlMT/sfz3Yy8hk0X+HHwELgdvBw8Au4ErwL/Bm4D
d4OX4uMUo1by3W4I/pyJe6wh9wd/Tmb/Xx/nEp+k1//TcadFNne1x+dr5mpH
8HVycGxq4ZxR7vyDHFeKe8LmMHOOkjsHkTuzudGInInNi9iwdPqY70fx+Qsf
n4M3ov8MuZ1vYFpQ+O7Fgb34+SDb/25iOYBeV9GJzQH0a9FfTq4vqjP7keew
mcleDjF3esn+2VLqAL+kHAUvVj4p/iXn5pbIC8Vmc+AO1pjE/67COS8b5e+D
2oR+VHZdUH24X3huX9QH5eXZyM0toZfPZehOM0Yzp5U5j4gjyPmMqeDFyLbQ
6798iFvyMzv2o31tqrlGDVSdW8ox1cod7Gk1cz5Frix85mH+zSgct4Hg0ayS
+a886Aw8u+TcEBYH9S1+zil8L7ofzZNPxVDcaY66pzzTmUaS80x8HAbv0/2x
zz01c1xcUd3bUXU/2Iy+pXBNUG0Q32QjLimPlUOqD6sL7+1qxfmnnLuafJ/t
sR/lme5zKGrsNMat5NqsGKk+9BTm4qBiUjIWJ+VjRvhRbRwue58fEoCnwXez
e9/Ohuh/2Ta3kX9k802829jg+eK9cmYw/Ijr4vzBqC3not/trtnnrprnyF71
U3Io5k4Ut5AX8LGr6jX6sL+Hr1Z8XEbfWjLXxXPVhtY41/rgo/J9aWGbKxXn
YlvYKDa90R/V79X37yN/ze4xV7L/qeepPtcl2+iNsC7minuqH+sC90bMhWvh
W/FXzesKXnUHb8SZJWXzRpzpKfuOdb/qDxeDA3VMGkT2q4ZX7VtvhLlV9w69
C25U3HfuRF40Rd9Rn1C/eLJwjT8fPPlX9VQ5mh1fxXlvvJFG4p2i+jchuHQo
ao5qz67ghjiyMPJXefx+5KByUe8hvYsmFe7b6t9j8dMSWLktvsu/7vqnqt9F
26v+3xL202IPygvN0T/VBJ1Jbwz19ycK95XrnONv8BV0r7GHV3SX4G8qPqfO
e7zi95lq35rCdrI/hv5mxX1f/b8/Yn4iYtkc8dSac2NdyXlxp29n19a3suur
8HDU2yWBH/AV/x9l98/l8QZQH1M/Ex8kuwOrXqpuig9bs/F72XWnKXglXU/Y
3Ct8Xp17IPr0NvX5qMF6C7+bvcY7yPlVvyv0vtD7Um+yp8D/AZDpK4U=
         "]], 
        PolygonBox[CompressedData["
1:eJwtlEtsV1UQxk/p/3LvPX8wEQGTaksLtqXYJ68W2iIPH8TEhQ3RhSaFlhUh
pVgBUdPGYpENZUHwnahLV6yIsdCd74g8awvlYWORNaxgBb+vn4svd747Z+bM
zJmZqp59XX3zQgh7QQGszUNI+C6HrEOeTEOoQ14J2uG7iyHsmB/CqdIQepGv
oa9H9zzYhP6jGEI1Dl/FyTDycc6c4fxW+IfwC2AMeT7n9yB/jH4I/VJ4JfYT
/PsZ/Swx/JmFMI3/JnSNYAv6++h3JL7jHnIf9t3YtxHPIPwYeA39CvSfIF8C
5+AZ9n3IF8FZeArfi3wZjMNzeD/yD/hby53r8JfB70bnUlcSwn/IE+hqOFsN
2ohnDD4RnJNyuwlfja4FvIg+RN/9N+IjeB0oK7jWK5GbQUXBNW9Cbs1de1IK
65GPUIPtKJ/kXxn8Ye7YdecD5C3ox8n1dQx6iH0Z982gH+NfuXIjnqngHJXr
vOhcJ/lXgvwsPhbBa8nvIr4WRtfyO+zXwF/O7WsjuI2vIvpW9N/CW9Dn8PXw
b+BN8Ar1D/7ewF+5csn9thwJVcj7dT75Pyb83c/dC1fh95C3g3P46gAz6EeL
rr166ATyOPYnsd8M3kf+EuxK3IMvYPsVvCdxz2yFnyCmNxPXcEj9GN0bXfBR
9UbqWqhH1CtfgJ2Je74D+7Op3049o94Zic5NPXYUeZiYBontNAl+z12f8a87
cY9swP5reG/inngp98xodmRzBHkEaP40A0eRGzPXUj2oXpzF/prqBf5Ffqvo
3lQN3i66R9QruvNz9Icz98JP8CvRb6q3lY878FeUE/7bwT/c8Wn0bCqGU9F3
6C7N1DC2A2ATvBMcRvcu2IBcJJ/Fud9Ab/EE/Gm9L+c3Jj5zAF0/vA25FQzA
34F3ILeDQ9ExKlbN/FXpo89G/D2l3OC/F2wj24PRtgv4t0SzAP+j4BgVq3bG
3O6gRuczz4xmRz3+jOLNrLsOpjNDsnbaB8g1uXtVM1qL/F507gvhS+G3qNma
gmesAt2PqXtXPf9XdEyK7TftxMw5KJdfQF3mmql2v4JV8OXRb6GeXxG9U7Rb
arUzUu887b5mcCP1DtYuXgWmUu9c7d4GcF27J/PsakYX4K8yenb15lXRO0m7
STkol0J0LHojvVVpdKya0X3w5syzrhmP2t303O7UO6c6+s319nqDhsw1Uq30
ZvXwhty7TjuuUbshujbqkbleyZ2rZk6ztzl3LpphzfK23LlrhjRLnblz18xr
9p+L3hWKSbE9Bh+vu2g=
         "]]}]}}, {{}, 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwV0LcyBFAYQOGrkp6BDawwI83IaeVQe4SlZlTsroIVOlSyF/AAGrWSSrZi
wY6SJ/Btceb8/7l35s7cWGphZr4khLCIos8rQ9itCOEPv7gpDWGNc1hFAd+4
1HeKd7GNFS2LfexhyfmmvoUNRMtDiCCOGJad13E9EmhEA9J6M7egCW1oRUbv
4E60oxtdOPTWAXrNd+708D338ZE+wA/2fn7kQT7Wh/jJnuRnHuYTfZTz9hF+
4TE+1Sf41T7Ob1ytRVCFZFkIk/q7/mWOarHiG+Yp/UMvmONaDYbN0/qn/mOu
1S78UYJH7Clzmm/st7jDlf0aGeSRxZx7s1hHDmfaPw6wOlw=
         "]], 
        LineBox[CompressedData["
1:eJwV0LVORUEUheG52DVcEyyhxO1NaKGiw67hFJDgBfI4BIeKDn0E4AGgggq+
Kf78e609mXMyPdP5iVwihJDHG44yIZzgGK/JEA74ELvYxx4e9F3pELpRi0fd
uW6Gv+Rv1GFWfsKF3Rz/6H5Rj3n5GZd2C/ynC9zAOX7BlV2eEyhDo10h/heu
7YqcT4VQzr3cZF8yL6IgV3AfN+uXzMsoypXczy36FfMqSnIVD3Crfs28Hu+S
kzzIbfqN+O34JtkQbniKJ3FrTuHMPORs2tnhaN0dMhiRs/rRaPke1RiTa/Tj
0fImcu7Zlt/NH/iM7yV3OteBduzIW/pT/gfFdjNy
         "]]},
       "50"],
      Annotation[#, 50, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwV0EdOQmEYheHfWEB0E8a6HmdiRxQExBXYdmFfgWWiFywz12EBezexJbb4
MHjzfucc4N7QlpruLdaFEHI4ioVQTYQw1RJCAbPxEDI8x1me4Twv8CTPc46X
fG+dH5tDWOMnfsALnrFsf+N3vOITH1jRf/MPvvCHX6zqI79dqj0HFZS91x52
bH187HMnqEdS3vDcXVu/+1R3hgYMyJu2yDboruiqaMSQvGUr2Ybd57oLNGFE
3raVbaPunHe41LdzjFO6MeTlK7mD45zWjaMgX8udnOAJXab238o3che3cla3
j0XPKuqSfCDf2SJ3t+7W3cP3fGj7B1eTQ8k=
         "]], LineBox[CompressedData["
1:eJwV0Lkyg3EYhfG/ytbH2hipqCytDjWRGTtJbLHFMmaYCVpDpVHK4gKIUutC
MJaIoHAHfimeec457/fNfElXaieWqQshpDHaEEKpOYR7XGGwKYQ/2299CJnG
EIblftsID/CPvSp/87b7jW2Lq3rF/sWbetG+wRW9bP/kdb1gT3NZX+UPXuOc
PY9leQVJLCGFU88scgJzWMA8TuwzPItJTGMKx/YJjmMMMYwjay/5lhc84wlD
uMMtOmvf4Jmi/6FDfq/9du/1oV3PuRXc2uQ3t157D1r1a7e8W4v86ha1P+jd
HLFdyOd4lC/ds/IBJ/mIE3zIe7yPXZzp/6UyOWs=
         "]]},
       "40"],
      Annotation[#, 40, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwVzskuQwEYhuHfSnEVNuYxVrasWlQiYStxAYSax9ZYN9CdhA6GJS6Aa8HO
VLTWHos33/e/3zk5p3VuYWq+ISJmkUpE3LVE3KOA4eaIGvfbGHGtJ/Uh/kbP
N0XU+WNZkyfyij+SP+4D+S0P5SW/L7/cWVmVOVnmK9jV97CFHWwj55kNuYlV
rGMNWX5ZrmARGSz9v88/+L9HnCLjP/PyFoO+UbJXuAG9ys14Zxr97qKtbOvT
P22TfBq97gtbydajf9gm+HF0u89tRVuX/m57cY/ZRvVOrgNv+jOf4kf0dq4N
r/oTn+TP3H/acTfx
         "]], LineBox[CompressedData["
1:eJwVz0VSQ1EYROE/TLAVIAHCdvAQCEyoStARrAZZAjJBKrgHdwsE2QryMTh1
bnffuq9eKj+VnkxExBAmqiJOqyOa+ISb+YzXayIuuEU+5xRf8ob+mlvlK77F
DaYrI+75AXd4wiNm9C9cwjPe8IpZ/Tt/oIwvfGJOX/D2QG1EjrOc53ks29p8
f8u9bXzr2uUFd1ZsHc47+l382DrlRduqrct5T7+PX1u3vGRbs/U4D+sObHUc
nNb1YkQ+lOs5wRldH0blI7mBK7hft+m9LI/pBp3H//9DbuRjd5Jc5ILuDypX
Oew=
         "]]},
       "30"],
      Annotation[#, 30, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwVzVc2Q2EUhuHtSltqKqKEIKahcyfKVZRlAMwEwRxEIlFylKkpF55cvOvd
37f3OX/x/LJy0RMRVdz0RkwMRkwiizxyuNZnON0XkeIUp/lK/9YfMS6/8Bi/
cmcg4plH5TaP8KH7IxzgVN51s4M/8zBa7k54W7eFX/MQnvTHvNn9p/fqvt8w
/+iadg2sy227B7s187fdo76OVbnV3emq2HOzjwoS+d6ubF7BIpaxhDv9Apcw
h3kUcauf4VlMYRoF1PRf3sv75wfn+JMT779zVu5whhM+439zaSjn
         "]], 
        LineBox[CompressedData["
1:eJwV0EkyQ2EUhuFjpFuFDehKEoIxVZiYZmYBiQE2wCSNvjfVlEIWEaGwGap0
iYiU5w7ees/3/efe+9cdWCos5rsiIoeFnojr7ojp/oiXvogO/jApTyGLCTwn
Z/baPO+ZcV0GT8m+/pfn9GO6NFJo6097nfEZV+2ccEs+4h8+5jv9ITflfW7w
Ad/ob7Fr3sMWdrCNDTsV3kQRZZSwrr93jzrKWHOPEtewar5yvsKP3ttEA6Py
pX6EH+RvfGFYvtAPcV3+xAcG5dnkH5gzSWd+s7fs+zPmtC6Fd/OrvqA/l/8B
dEU7dQ==
         "]]},
       "20"],
      Annotation[#, 20, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwV0kdwj0EYgPGPiDQkghmOrspND5HovXeDGTMc5aSO3pNgSKKHJOpI1HBQ
o4woaXq0aDedi3rht4cnz9t295/9tv3srHHzGkVR1N6f1XFR9Ccxiv7iFhYm
RdFRtUV8Mz6KNmGxeDPfQiXW6UdqjfDPmhhujPXqsaHGTTgy25Q3yOPDvDwu
zHICb1Q/af0oebo8hn+gl1oaRov3JtiLf6K3Wh/0RToK9fbhl95W+RF7HLPn
NvFttTsYg8cYi/HYaWYcZ5vL5z3yAs7DEzy1th7bxUv1DvMy3sHP1J+jwtp6
+VVu6/zCcL6Zu/IH4VzuEu5O7Zq4hzgWBfKmnIbO4l7cxn5duYO8hTgFyai0
7q76BPTVmxjuHbvFazlHf4P4MdegLvxv4b7UdvEFnMd1vXZ+4wlxnfg53wt3
ZK5EXIZV4mL+6txv+I4c5CIbi3zKc2bWiD/hI77gMz5gvbVZ+sf5IPLFD5zx
Qnyf8+QHxBW4gou4FO433K31c/Xn4J68NnwXtQLk4ZDaKzSE74/LqFL/zVuw
xLr5PINnYSaqwlu1TytzrdES3dVS+TROoZ+5THRTfyN/i3foKX/Nr9CATmY6
IgPVetX2LQ1vIbwVPMINtZdmX2C5ub1q78VV6ivlRfIVvJ8fYlt4dyhU2837
UGo2V75APBkZ1k/iTC4Pb0n/iO94FAdxGIeQq15u5oC4mbliTuISPqNexIny
/ZzAo50xnUfxNB7JI1BrNl7eXDyVh/Mw1KjHyZuJh2JI+M7OHBzuQy+JE9Ef
ZeE3mp2CAfJBGIiz8s16LcWp4Z0jBckYg//VDZ/3
         "]]},
       "10"],
      Annotation[#, 10, "Tooltip"]& ], {}, {}}}],
  AspectRatio->1,
  DisplayFunction->Identity,
  Frame->True,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic},
  PlotRange->{{0, 10}, {-5, 5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.641872958030549*^9, 3.641913690634611*^9}]
}, Open  ]],

Cell["Again some styling:", "Text",
 CellChangeTimes->{{3.641873122994176*^9, 3.641873126400725*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"x", "+", 
    RowBox[{"2", 
     SuperscriptBox["y", "2"]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\!\(\*
StyleBox[\"x\",
FontSlant->\"Italic\"]\)\>\"", ",", " ", "\"\<\!\(\*
StyleBox[\"y\",
FontSlant->\"Italic\"]\)\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"x", "+", 
     RowBox[{"2", 
      SuperscriptBox["y", "2"]}]}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{
      RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Times\>\""}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ContourLabels", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.641872930091991*^9, 3.641872957250881*^9}, {
  3.641873010452726*^9, 3.641873130682955*^9}, {3.6418733009722033`*^9, 
  3.641873337364037*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1: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
BKm+RKm+VLKnkF/EyC+ne3H7hvzizMQft5dCpPxhkr0WKZUXI9lX8VL5Nsme
S5DKp3tC2q8hRn3D76cjwcP1/YbuW9R82vmIjuk8x9Wsmybhan46vicw0Xmf
TGf3q077KcKV8BadvzN/mmjZvroq+QPiObCJ2ocYxy9i5B/zY30sv7O9iLE+
5FflQ7cXEXN9S+kB9TWmx/5D7Hp30DkBPrjWhwfqeiESSB6IkX+VvwvauZpF
Xf+c9uhjdcEmexXPp6T0gPTxanpt/dtJdAlT/yJGeWJ/or5Sv/X3O9z+CJbe
r6QqfD3PVOT3Hrieony8XLU+pPM2ub+xPUhHjPsVXI8Qc//pOGk9i5PokdL+
IJzWc1yfEWN65t+wHO2DV+Tfg/wh5u85oqg8PH/m5cdJ9kgc5VfbE0vpcfwh
xvmE4wvrw/mO+RFjftm/A+nYPsSor+T8iHH88ftAO7+vHKLvt3A+Isb07D5n
SP79mHz+jHRpPNN8dzWzt5H0lTauSV/h/Eb9ihjH5yBXwqdUH+pXzM/0q9DH
M8oLxx/Ks78rYzbJS9XT+n6O9e8QfT4jZvfF0Tr/KD/E2B5sP2J+32aVzsPi
pfO0OGqvS75tImm84/jC+YPtR4zpr7jSvaD2onxQfoixPew9hdlK9WN9zP/I
HEXlo7z5fHqjpLjon+k+VLUHCtA9hOof4g94v8TvlRKl/onj/pB77RDgqve0
A7F6MXSaxiv3D/WR9Jc/jc+dbF0LEqiP2HhxjstCrm93TAczeLmafRsEWJ+8
PqJ+QIzrD45/po872GG4q/7rtO6p+txfGHg9AuV2Q5WvwPaq3+4C++O62h+k
b39S+SPM9J1vAnRXxy9hHM9q/8fDPbX/aX1G+SJ/iLE/sD9x/Mn2iWyPyPJD
jPXj+EN9j/oQ9TditfxwuOZK/5bSy/ofsTp/cP16pY7fKXZ446JfciAOcOW7
TPoJ+XMVvwb12X3yH5DHH+ozxHz9Jb8tOv9HrLaX9nkC248Y5zNitKcQ8/cC
AWQvIMb6EGN9iPl9WgDZI4ixvxDz8eFF9SHm48WLyuPvLc3Seh5KGNcL2Z+U
vxcKJazWF0EYx4OcHveLmB4xpufva+Kk9zpWwih/Tg+W3rOYpfcvoYSxfsRY
P3/vEifltxLG+vn+8B6dM2B/IMb+R4z9j5j7K4cQPzy/WaKHEkZ+EHN/Zc2/
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
2nF+qPvoBR9i4E39R3seHHnliM8bpu7O/sw98CLnQIrDMFDZvNnZf21fmZus
/vu2Y51W/nG1fKWPVn49tXzlnFbeW7U8ui9wqf9KmfL5iVK03pnI3aei4eTg
Y5O+PPhamaq1b63aPjof/KT2j2Prt04Fs1O/38Dz2quD2/7n/ChbNLocj3BO
uZolL6Tco/iIFdX9muPHZrEruu/IVJRSX0QXvmUA87X0LbOWBMPY+m3uTlnl
Bfbau9d0X2iGovWqR/kN139fHscH8qee52Qq1TffG1H7sB2WpSV0/XD8rAPx
VhXTfesltb2O2JkdPBf4eENuwccvilQyiW/8n8Jvm32h4/BJKfuc6+NJvn8X
8X+NqJ9RygTn60Ixtw0BIu3BvNI578NgWs3bK5Y1ead832Lcl4u+eqxsPX12
5cIKblDv35ndliwNgJTUO9lHnntBHM8P0bx+UHj95E971CX/G46Lefrq6/zx
/PapdOW8Rsf7fZc521f3h8P9+0h1/65UKpsSqPS0gynk/JbsPteU3/l5h7Bx
+YsGGj93VH5EHD9PEcG8/0Q7Lg8xmJ/PiDa8/0W6Js+pqjzpvXGy6/wsy2Gf
PPFgqnM/N6zZ/o6fqj52JGh4pIqVkZ0OdfZqFA+nqo/oc37NS/I/jnEd/5nE
iJPVTv/qtH8n7D5ftGSWHs/zret84S75J71TsZwfRvHyHbl58v0lf/y/iS77
IlNJb29tV6RUBFjblE9NHpHl8MwjJ+eP/6faI5mOxdr5y0n1/EWpVGVwcJNN
cRCZU/TfvVUzlbZLapa7+JdTPzSOHfHTocsOxAVVTOcT2b+2HjMh3STe9vfM
GLM6AZrF17pbYsJ9xbT4t1mn1yZABdfG677SJrlbi9H7fMHxMPebLs7xPsWl
L/3ovh/v658UatfoZIxJtNLSCzU9+ce2+rLv5A5L9Xhkzsl+oufPenwx78GN
nR89XmChD5WcWfTfr2oUNNttUYyR3gN9XLB+Vrma+u9ZRb08ca/0Xf33ny5X
iXV+9N+3mnGoiyg8Xv/9J5ceOhpE+n7urov73bro759Gl+6/YoRHELXPtcws
CaT3TI1dB6OBtJ6UW1z/h6d39PiCJw/PzAj8Qq9vwUE/50f/fQW1Hh9KH1Zx
bGjFsXr85DeVz72ufC6H4guOddknHyi+oGs5rfKe/FHqudaXhxS/J8H1p8cL
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
lnJ9Rfu7Zduj3Yqke4lOfDyJodp6YlXXE3oPo+4f3cRXfD6JoZbnAcdqJsDa
5Gqvd396qDzozvgXo+51a1CsUwy079h82YRqrx3LNXvKU7WnHBfznsuWzx9f
0Kzao8pILX8HNb9SRpMPxg/ct2jHmX9z7PBtiX7RTx6YRGylvkNHXbPD6iYz
f7j6GPcDaYrLXL5gERku/7MnyvVNfkPs1y1i9ZWL5z6Xfq78Yep+JeyyEy9K
+vB0VQLk/XdR0n1Hp0P2Mp3+i4bzC28s/XaqGfbx9wjCzPtf02eRcOd23t9b
sn/7qvYvxV+b1i7y5osnzv20y367prRY2KbcmjSLcMT5nP7lfzeVVm2H9rQ/
s4hqy/ZWWbY3DuZuKef8ZDrUdzZ2KL7nydJJJS46Hua5Uf9shwGVBw/qXeI/
BekVVTrZ0+NVe5r89Q7H9q91y6THR3NuDh/27+Yrt98x7OHNH5aUSwD/m25z
zvYLBskflOKLnTmd9/eG4o8FqOc7Mp3idZTpG/hv500mCJkyaUyrt4+V0z26
fFNylx4PrCR0vZf0tx4PrOD9cOu2fno8sOhxJ9o9rqnTX5cqHz/2dSDRpx3M
jpg/LZD8h4s32WveUQzpRjh2d2TA2WMYDywM+rriJ7yj+FdNYr4ICvHW403l
HR6/HqP/PtSEX96P/+W9/vtMqp+H/ntM3QYUcn786ZzymMFbKZep/67Oqhub
Siw/ov9+0W/bW8aZ/tZ/r6jLVLegpD5GqN222IPER3b4XCy6e133YNFPSbJf
2WcHxd17wLqAYDGl64GuxR/bYfngzT5TvvMVC7a1Lnhxtx3imt/JvdnRVxze
dmnHtGw7eDbesbj2sm2Kun/YodRY/3Dj4hw9Pv758DcFRlUJpvVg4eOfnR8z
7e9Xx2Zt6HfDF6T+o/sG1/V7KJ7v4O89HK8s+x/I/k2yP518Py/rS1kfyvzI
523/BxLio3E=
     "], {{{
        EdgeForm[], 
        RGBColor[0.148, 0.33, 0.54], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
+l3qpeDcqb5nSz/n0OSJz/r8gnMM4pLH/S3uYXAfI83jXsF9xpzBplkb58jc
b6M+w3qXeP3k+9DExuTF1Gfpp45LHbw3eVw59s59SeZcZqy51msY4DmX+Vv4
TPbFHhnzmNfZ0vEJvoxYhfrDVUnsk3urtfdfoLFV7u9wRwrsn5PHvcDqcpwl
1tTX0oiXyeWudU53tOlW5Yh7Hi/FfE085ynm55X2F+gYOsz5BeeUzSxH1kz+
e6rfrbnznMV9Hu5eXVwOekUx7vpw5+dQ9X1ciprTplLsH5qcCB/IN/CDxG3k
M+TR3I0dZV9DPYE6/tVJ4Cey2Ovck1yCOgO17Wc95jrTxAP9PYY4nPtrYzzn
aZ7zW8/JOcfv/C75GzE8GD/XOF9zjm1/ge7MsUxr8z2+Ra3jOc9zRCnuyZ2V
R/7EHRpyKJ7rTB9ZCtzmLhvnacOsb9y9hr4rj7gKHa65710K/OMe7mzLuzKP
vT/nNXDnGJt6pBhrn2dMAAfBwxf8reVeP/HnC+bnUvej9w1sG9hFQ/t++Ma6
Hva7S0yzZu6g4bdYJzg60liKHb1o27nefOZbC+sEFrbQnjqVwwbr5CGvZyyX
AX53v99lneQp1HaoxZHj/B/FvVTw
           "]], 
          PolygonBox[CompressedData["
1:eJwtlVlsllUQhs//f23/838fCkVr9MbEC40iGjQmGKgF3BE32qKocYEEol7Y
xAW0dMGlKOKCgIDKqrQNtomAXrjiEoVKLVgs0CI1eKeCgV5oVMD6vHm9eJN3
zsyZM2fOzJzzZtdVP5IPITwPSsCzaQgXFEI4H3yQhdAI5peFMCsXQmsM4R/0
raUhXIXt3/CXWXsM/aPgKWy3IS9Fl8dmCvo6rSUhzASL0LUXQ1hYYpu2on3K
9zz2N2A7CVwIH89aLbpLkCuQ5xLkROR1YAFyPWjOfKbOrsLfS+jGIpcjb8L+
EOdvA82c9yr6JdxpOzgB30V8A+g+Zc8cYuvEvhI+zNoD8OPoc/j6EbkHfi7x
fMXekFn3KzYtyHeyJ0GuxMc8+OvRd9nJ2n72/gw2Y9sKDsO/Y08ttuOQ++B3
ROcqByajn4v/Gey/DptG5KnIlyOfwH4EfC05G0JXQyhrlEvWGtC/QHy78LcK
f/Xoe8Du6DXpBvH/C/72srY3cQ6Vy2VgH/LjYAX8e9nDB8BB5AHQD39f/gr/
r8EXg17ktchN8gfegLeAGvhF+J8BX4zNSuQh4q9GrlI98R5HkW9FLo1+23Zw
JXwR9r/Bh4g3j20va73KBfgW3R7QkjgmxXYtNpdy1jgwE3lk6trp5YxR8D9Z
O47tk8gl8DejY1UOXovOuXKvN9RbLke+C16BfQ9nfcba6Jxzsh2eA7OJ7wiI
nN2UObeqkYPs7UPfh+0OcDv8nehcqQc64S8W/PbK0XPRNaJa6QIH4Ot50wbO
Xoi8Fbkb+y26O+jGvgu5OnFOlJsD0bUpm354B9iaOEcb4W8Vffd/wW3I7+Gz
Cd/NYAt8Omt1iWNW7Ddxn4eI7ySYBj+auncPY/87vIPzO5DHku9r0L9bcO2r
BlQLh6J7aQ3yIHwDeCZxTE9jfyS1L80YzZrl0bWnGlGtVLC2n1jPwv8EdHvA
7sQ9MSdzjahW3gZfYH8P8in4At0P/TBrs/KuodLMPape/Rof32A7mHo2qCd/
gn+o/su5Zz6C/wGOJa7RJLqH1EvqWfWucqhcngIT2b+B/DaWeMaMiK4Z1Y5i
VuyfRPeyaujj6Jml2aWeXa/awMfd6KeTkyXw9oJnmWbsfGwngzFlnmkXw88u
uhc0wz4v+A30Fn9hn8JHglXoTiKPgt8MHs47R7fA+1PPPs30ldE5Vq41YzVr
O/F5WZlnzo3IXdG1XIvPneqFzL5XI5fDs8xnP4j/7tQ9r97XDNcs15p08nkD
8jlFzxLl/EvOuo+1WvhU9PfD2+SvzDNuaeqeUG9oRu2L7nH1umqwTbM386zQ
zNbs1ozUrFQNF9T7qXOrGjyWuuZV+3280Wh4WeZeVs2E6B5Trynnyn1N9OxS
j6hX1JPqzSb2b+Quy1LXumbGCnhV6tk8jH4SfELqWlFNqbbGR5/9AyhHV4yu
3XqwDn87omtVf6r+1imZ/w717NXwTUX/ZfpDW+FXRPeCZoJmw72ZczkNPIHu
tMy9rBqI+hsy6/TnvaLazPyWmqHXZ45BsWgGpeiLmWe1Zl4eOYu+u2petV+Z
+q6asZq1mwuuFb2h3vLM1HfVG58BPz31bFaPj0H/H31/KvA=
           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.50875, 0.48250000000000004`, 0.52], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNmgm0VlUVx+/7hnvvd68mk0mZczYrDQ7EkDjgVCo40AOtlgqtUBByQC1M
ScUEBR9gpfR4gPieTCJkKydwyqFMUUBtUHNaKzUGQ1AGlf6/998sW+vddfZ3
xn322ee/h/P2O2fMqRdUkiTZq5ok+kuub0qSlfUkmS76WH1nqvE4lb9umN6a
JclA/R5Wcfstqj9L9HbVT2+4/gPRx6htaMV9j9bXXHHd4DxJ3hV9mspvlEky
W2v9qUiSi0XPFf2Y6LM1frC+8WKol+pnqf7RwnxcWPW6F1VNDxG9QOUlQT+f
m35R/fdKk2Rc1eOouyj6UHdp0JSXBf1H9f+9vnMkg+dUPpt6TJu+UVXLZLda
krwg+vKq+1N+Hzlo3RaVrSrXUqc9HqzfV1W9j2min9E+VsfvfdTeS991ql+h
eZbrW1LxeOZZoP1fqb1fqb6zVHev2r+k9q7irYfaHtTvB/Sd0eS5mIc9s88X
VN6vtvv0LVbbZWr7nta+W/OdV/Wc8IOcV8fekMO42MtkjR+k/terbNL8w/UN
Vf0Utd+ob7J+j8lc3qz6P2chM/E5UWteq++ppuBX30h0QOPuiN9b9LXrm6Q+
Z2rsuSqb1WdN5nF/Vfm05thY8dqr6u47Q30mVK2jnEWH6vdTvxMSn8Olwf/t
Kufpa6l6bDvybjLvyGv/4Jvy14llMCHkQN3no/55nfUpVfM6NvOem/X1Vd1U
fZsqlgn0RPWfWfVvaM6G8+Vsnqx6zKbY/7ebLBPkdE3q35ODP9bfOS91bxXW
ob9knr8lzuA5/d5X/f6Rm+8JoZ+rNd+q1LLm7HrHWrNCj+lzhPTgPbWfobEL
gkfkMk6/N4v+fm4MaI/+06qWaUvIFfq94LclZLqi6n7svbnuPvyerm9G6Nt5
QY/kDMX/GaqbrrU6ql6rNeQ3M/Y4MsbPSbzOzJh/Us19bxM9o/B601TunfrO
g0eDMo+dFvy3xNjWWGtG8sl+4P+Yumn2RXtH7H1W0IzrEK+LVC7W3NWq6Z9W
3D4r+p8f9FzozDKnbnxpnLo9N94sCMxBf/cPHe6jPgegDyp7l247XOUb4u11
fXtqrX+pfE3f7qKf0Bz/FH2yynWF69eqPD33+XLOd6p8hXuifZ2dejx1l6XG
I7Coe+Y1wIpdNGar6BNKj/tXrMVdeKnu+1DV2Jq+eeL5M+p3u8qbNEd/1fVN
LZOe+n246PNFL9O4w0T/Tv2GqP8AcEvlJfq+pbp29R1RWvYrxfur2sMa9gme
5b47P1D7j0Tnok8vfadOTN32q5rnpO1Hpet/qPLvGv+U5lmR+UzRaXAA/Kae
czhEfbeJnik+co15X3QT96Bu+kjVV9TvI9FjKsYF9g9+JCqbUuthj9J0d43d
UXcb9R/UPddR0Z825FZJ/RsaTKEenUSn+ocMu5Red7fS8mZdZL1B+3pT9e8W
3tOzsa/LJYf1GjdCX/fUMqSecnXQq4KeFHq+KtZlvjdCxwqtdwuYXbrvqhj7
itZ7TvTLhdd8Luo5595x1ktV10f0Qo0/pXT9mZLJ10V/Q3XztNdviv4mOJ35
rnJnsdGM3VX0AtEHlC6nq88S1Reqn6/fq7THLshW475Smv5UYV7heaH6f6n0
+jNEL9bYDDzU771LzzFN9QeL3kP1x4u3biq/mtouDShtX55SfX/165eZP7Bl
H/pr/KGl+f4wc5+9o35+3ff3xMTYyh28VuV30XPqVR6rr5fogSqPKr3ukSqP
13cr56/57qq7PzrZrPHb8J1K2wawClvfR/ULVb+79n5IaR4OK203sSk/SVxe
GzQ2ht/YhLbcPsCVgS1XhJ8woTQ9W+2PZMaHfxY+z75xpqNVjkp9b9HRPnGv
59Rdj56fVPq+f0/ltprl/PXEfgzrrso9zwXoaMV6hL6iS+gb54F+fjXOYkDI
75CQCfp2aKwLD9Ct+KiBrX8TzwdlXoP5z1HdmNQ+2aWl6Q61P6r6sanbb9TY
c1U+HjxeFbYDrLgsfAtk2BT29I2K/WF80dcq9nXxb9+CF+3hCNGvV+wP4wOz
Fuu8rN+vVuwPH52Yz69lll2q9otU36b6TPTFomeLXpdavmDRf0S3iR4ArfKV
ivcF9l1Ssa3E13og/K1bYn/0eTs1f/DwWG4er83sb+Br7Bu+z/6hY8s17sGq
/VKCgz/qI1i4N/f896isq7xQdbPU5e7cOnKqZHxk4f7LVNdEX2QNf+hX6nlm
hH3Hzi+q24fARnct7HMdntu2cdd3oM81r4eMRmTuA8+91e8jtddVPpSZpg7b
CF4wxxdLY8uBpW3aK2EH9y+NLfuq7Bk4+2mVe5XGjT1Vrk0td851Ue5xt6n8
uO69YRdW5JbVcpUD65YdvtUva5bd6Ip9gVnhD7SGD4KNqIYfgQ5v0zpbU+MW
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
zv8A2egLug==
           "]], 
          PolygonBox[CompressedData["
1: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
           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.7695833333333333, 0.5741666666666667, 0.3666666666666667], 
        
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxFmHnUVlUVxq/f977vvedeZRAR+HACxbE0VzJKttDKCVEQUFpgWupHuhaI
gFOpoIJTaamAaeYACoogo4pWQq7MJscExf4JZXQFJoOz9vx4Nos/zjrn3Xff
fc/Zw7Of83b78dghY5qyLNuwR5Y1ax6oH69oHKR1iwQn5lm2WOu3JTtbo4/W
72geqtFX66s0D5DOIq1H59afKtneeneZxvVNlp0U8tlFltUkH6l5tX4P0+in
d+9pZNl7Gt21nlPLsuskf07raZK9r3Gw1jfXs+xhPXtG6yVllu0lO0tTlm2R
rY1an6n1Bum8pnfP0Binb/bVOF76GyV/XbJBGm9pnKXRU/JNkr+h9ZkaHWRj
lr41T/KV+j1Yo5fWP9P8oL77tNYf6lubpDc82Xa/sM8ZB4SvWmuWv6v3VmkM
0egt+VGSHanRqm9sjW9N0rOOWj+q9XzpLNS4ssn+bJFuF40T9OwR2ZwZZ+d8
d0vWTet1zV4Tt583WQ+dtZLfJfnpkk3QXs+RfKLmTpLPlnyBdB6V7Fo9X6b1
+mbH4IyIP++SAztC/0bJtmv9mNY3aD1ftq7Q3Fb+eE977CNbp0n2fcVlm/Q+
k/x9/C/56ZKfVPrMn0q+RvLekp8q+VmS760YzK0UG63baf1EZRv4ZLK+sW98
9ynyUzptpPO4dKbV/Iy9/T3ZP91l/wA9S9I/UPMKPT9f480m586D4R9iR370
idwkfuT7F3q+Re9u1nqG5nUaPaR/m+xeINkVsrlIY19izXe0l68bu33zdeyT
/BlRcw4dW9rGzNy5TE5vkH6ld7PcPuasX0UOTNe8VuOQiCMxPFDr+xveW3+t
C707pWb9J5Jz9nulc4scOy7zTM69pPdH1/yb9TGlbT+i36XsTK15zzfGe7fJ
Xhd9d0rkIfFnn+TMt0rnP3XwjdLn2Kz1kaVz6L9aj5O9y2vO+bmSX0VMNd8r
G89LtlQ6rbnxYmrgw+ioH77bGvKFhf2G/y6OeFFrB8vve+Kfyu+0Bv6sb7Ie
OsT5oahZYoz8PD3fXLfejzSmav270Hk5Wf+gwjVELT0r+U25ceJOPR9b81nA
hHFhs0/UOfk0LPAMGZhGfX8ZeDK+Zr+Anx/UXBfU7zdLY9vDemet3r2iZlwF
M8aFD/Evfj5De5iRGxff0fqq5By7UvMcjSfBIdkb3XDcyQX8AH6R89gg98DA
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
3do=
           "]], 
          PolygonBox[CompressedData["
1:eJwllmesV0UQxW8e/Ln/vRceRfqT3o1BNFTFmICF3h+gEQhoAkrCo3dEkCZq
6CrYqPIEHk0REJWuYkVjA/wkHRQLVSn6OzkfJndmz+zs7N6Zs1trUEGPYTlR
FO1EiiPdU77Foqh1iSjqib4mjqKq6HnIPdj1kVz0svgsAjuYRFFXAjzN2Giw
+5C66BcyUXQTrB72Mzme0wD9wxBFi1loOmO3slF0L2OnczynNfpX4CvBd5DL
l+idkTOsVRu7E/pE5DHw7swZi15IDvWYewa7M/G2IbvwbctYX+L1SL2XncR4
D2wQ8iB2EXYhej74WOY+wFhv9IXEHEr85sRYgN4bOYdvXex89P3sqTP+lfG/
C/8D2F1yfEZ3Yx/CHpDjnO7HXh3btwrSBHs9MS4Rr4h469A/QBax3jTm3CSf
l7CHYDcDfzF4juae5TwvE7sm9hR8U8Zqo4/Bpw/+3RgbgV4rNVaGNRaydlfG
zqLXIV4X9Dzwyfhm8amGPjDrs2qD9MGeik8/4vXAZxL67al9SxNjAfE+ZmwJ
+HPg/2V9Rjqr8eS3nvz2MzYQ36aM7UOviSzH/y3kU3yrY7+B/jpyQPGxl6Ev
RfZhfxP879dgH0avDb6quGvic+xbiWtLZ6yz/j64dgvBf0BfioxGH4vcIN85
2MfwzUcu6zyYUzbjPXwE1h27HHYlcn4i6z1pbxrrBjYEOy/jnA8G56hcX0Oq
gc3EPop/L+Qi8Y/on5LPevCj6NORI2A9kb/ArxHzXMY9o94p0J7ROyIXwIdj
f43eCfkDux1rHEY/w5zG/ItXwUcReyJ2EfMX41OO3EvzjxqCF2FviNzDa5m7
Af+Z+Gfx74ddhD0LO8Hujz0f/5L4llCNMv9K4lpTTau2LyVeWzWv2u+NzEJv
y7wdqXtQvfgoMccH15xqLxCvOvi7SEXGboC/nJozxB0lwetgtyWH82DnkEbE
fgQJqnV8roO1Sjz3AvYl7H+YPxJ7hOKx3sbYvXSTeGuJdxW7AGwYskhnxdgQ
sHr4zGH+uOBcC1jjWXwbpT47cZS4SnM0dzhyLXaNqlbfRGowv2rqs5qAf8XU
NaZaq8lYM+zmqfWT4E1T95B66XF8pqBfx39McdeoarVu6rNQT6u3a6Q+O/Wo
elV71F71z/9l7pLg3CaQ/wbOZm5wr4kzXgjuMfXaCqRW1v9Y/1pn2g7/+vqf
YCc5z/NgbZCzxT3WIDEni5vLqAawGyb+N6fw/w1sALKZ9VLwDmDtE+tXwG+A
dcQulTGn7SSXrbFjqefUe/OCuU0cOx99cvDZDAefhu8eYuwh1lOcwfPovVJz
s9bU2uJIcWUu/p2ItyW2Xlo1mlik647ZFXxn6e5Sz10FW438nGOOWyO+Cu7l
meDbEteYam0wY1eIvTn2XaE9aW+XYnOJen62uCqYGyfpTmDuJuxQzHdKmazv
HN096lH16lbwBH2cOAZsJfkdJ7/TjN2RmIPFxbqjdFftDuamGfhXwd6Oz+yM
OfELsE3E3MjZ3MK/kLkjdWep/vGZCrYuMTerJxYH/yP9K3FALnqLxFwjjmmZ
uOfUe+KMUujNEnOTOKk5+hjWGMpae/HZC/5dMFeLg79VruAZ8BR8XuweUa9o
rDL6L8HcqDv6GPrDiblJe9Be3o79ltAaWks1oFpQD6uXfwrmenHsj8E5KBfd
OXN1V+BzooTfDHcSew8+lbUf3dHgf8fmanHyDLA/Y3OzamIa9jakFP4T1d/4
V0i9l/HY5bPmXHGvenhZcA+qF8VJr2C/L37M+M77DPu2rOfqn5dP3UPqpZbg
x1m7QtZr5ep9gn8H7SFjztyK/4rYd7f2pL39nnWttGL+CXFp1rWkmtsSzGni
Nr0JRgdzorjxInhbcluDfaqE3zRNsA8Fc4VqSrW1MvZb5yQ+q1PXlGpLb5aH
EteUaks9upu1PwnmRu1Ze1cPq5f1RpsA1jE4V3G8uH5VbC5WDspFHCQuagH+
a+w1tbbeLI2JV5i4F3WHt8/6ztHdUxW8T+I3j94+qvlRqgekSjHfUXn4tw+O
/aTucPw7BJ+9OE/cNzjrWHqD9AXvlbhWFCNf/ZCYy/vpfca6LVLrp9Qv6JWy
7n3VzHb1V2Ksv963+LdKreuNq7duj8S9rJrsib489ttWHCAueCf4X+kOL0T/
H/Ikf+k=
           "]]}]}, {
        EdgeForm[], 
        RGBColor[
        0.9208333333333334, 0.6720833333333334, 0.35458333333333336`], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNmHnUVlUVxl/f733fe899+8NZQdRPZvBLoPrHWqCCTE7opyLigHwfkwMU
KmVZy8RaDCoolbJKcUhNzRhEEE1kFtBaDatoiQYITgkIIkOBWs/PZ7NWf9x1
9j13n33O2Wfv59nnntby7eYJ5VKptO+IUqlB7UtFqTRXwgtZqfSbSqk0rVoq
Ner9vrxUmlQrlW6vl0qXS+d49V+m9gI9B/T9c32/UU8Xye+nUukK6Q7VM0Dv
v9CYA7L1Del20vvT6l+quWbX3P9VyVO0iJP0bZXkF9U3Q/ZXSn5aNo9Vf0vu
eRg7U7rD1A7W+2rp3CX5Vukf0rgzMrdN2NGY9tK5Hhv6fpye5eqvZH5Hflu2
7qx5DTPKnusVyUu05hOlM1Rrnqrv0/T8XN8n16w/VPKiItas/d5btU6T2q7q
+23N9i+Wzn/0/l+tYaG+tYl9XVp4Dc1qq5n9uUL9N0ivs/Tfk82L9O3fkr9Q
3wtVr4exiyu2g88Yd0KMZZ5nNe/9ZZ8D8rKSbTwj+b6yx7WNsbPVPqjnTH1f
mdzXLvc8zPdZg88RX+Nn+hfGGppCB/mm3Hv+QDaGSPfimm2elvkd+XfyZ6P0
F6tvdM39R2rsyLr1b5ON/trXOOms1Tr6Sh4reY3kaxs85sjYI/t7FT/IP+30
/lpyHBFP25lL8j0a26HBZ8LZcHbPqn+65NPUv4WY1rez1D+8ZjtriMm69Sdo
PeuS+5mnc/iQeTn/2REzK8q2c4zkzdKZKbmP+s4vHEfztd8LC8f7Askr9e1+
6Ryr93caLJ+tvumadwZxVve5IB8lneVl2zyaeJadUzRmvdb1hPYyVXqnckZ1
x+1Irfn7+taVNWquB9S/WmMXqm3S2I815teSb5VOF+n8WDr9yaWK3wdIvqri
8U9Kbw/60hnIGUjupv5VkntL7lu2P/ALcfWc5G6Sf1Z27BMPs8rOV3KenCUe
u8T5cRacwz2SOzY49/AXZ8e53av3VZlzfCuYlNtn7SQf1PpXSO8LtYOkN1Jy
d307V/LlkjtLbq24/3QwTe2b+FbfV+s5R+/92JPGnyv5GrWtegZKblF7XcX7
xebNVb8j36lvIyTv1ro+lbxU8gG1O5Ln2J08bkT4arDmGBVr+Im+tUjek3ld
LWHzlqrXis5XkuN0nPY4X/4/TroL1E7V3kfID7fUfd5PSf/usmOTfRG336k7
T6ZId1vmGNwh+d3MMb4zd15x3pz1VvX3lrydOC/77Dn3IYVj/PnMmHpXYB35
Dg6CCVNqllnr4Xfwp1vI9DNucozdEDK5Scs3MHoRGKq+c9SuLzvO8Ftzcoxd
orZ7cuyfqHV1SM6J4/FP7rFb1PZKzr+2hTkLvsI/AyL3WTv5gu+mq//1suMG
/+PXxQ2OB+Lu5YhFcId4Ipb4TtygM6xunUWa96yK84Fc+GbFWEAuv1H22XOm
36o459njo4X3OS7Zf1PCn2DhRYFvYMvq8Ftr4XyBV4mFh6rGuRuT9/BYYZ+9
Hnu5Ptk+8wyKdbCGXpkx5ajI8fXh59GF8xT8RqdnZj5gDuYC38hndOAy4qFd
nN2UyHfOfWxhebzsPCQb6/CZ5EMNxgVsUDvMDq5pjHmIP+qLZ/7vzGgZ34U4
xLey80Yy7oF/YN5TcZZP6Cx2S34887nSt1Zjxyfv/XH4oep6Bqw5VfIpwQuz
giPhx19lHnco+Uw/iXNtzhyv7Jfz3xO4907UFUsK88lzh7Gs6tjAfr/c2H2+
bI5NzrE5hfELHHskc43TFByK7/Dhh8mxsKzseACz2PtrEd/E+Zw4qx6ZffSj
ZNy+Xe0tyRg4MTnX10VegwGsh1wiRolVbHUr3M96iVFilfVNixxnfbsq5g6+
rZHdk7WecdLfmztOz5SN25J55LvJebM2cGa/+vZWnA+jq85rfIuPd4c8KnSa
oibcEFgBN7SPeJgc/eRHv8hPcpN4nBS1Hzb2hR3qCPCcdYCb5Pm03Ln8aZxn
79wYNE/tmKp5gX6+7wmZGgSOWHMYEyreH/7bUbFf8Qv+wa/XR2wQI8QB8QaX
UbNRX1HfTgs8X07NrLVdw74k96l4Hcw7HjxX/01111/XRr1L/dW/5jrus+BB
+JD94wf2Pldj2kt+MWJsQJxjS9TS1AurwSBiS33zid+qeRiuZix8PbpifgJD
8uScGaWzfrhwfA5W38HIJfLoubr3u0jzFsl5P0a68yrOPfyRJfN/S9gg1ntH
DUB9CPYeijoCzKE2uyruEVeHDN+B/cQT8UPfNaGDPDx0iNOhUbvSXhEyvIkO
+x8QOsisi3oG/oOf4X5wdV9wPZx/ZdhhXLfANzAQnCIXzwtd8AhMAXvaRyy/
ntzfXrrDCtfhY4m9mutb+Jv6jFh6LPOZNMa5wC87g2PYM7lDvsIvuyI3H687
Jh/V2A5Vn+Ph2qtj3Guo1eijHp0n/Y7SWSL9J7WeifBk4VoG3AFzwLNjgxM/
jjqHeofakfz+nuS1yfqNcXfBJvMsqHgdncLf+Aw/Ux8xFxx0INb3StxTGMfa
VkSNsy5qWTDsh5rnjsx5f3PEHrXmrOBCePAG9c+tGPfBZDgALrhJ/YNzc9jT
hX25I/zJnbG5YswZkXwPuS5wuDHqJFruM/DX0uQYoVYak8yp7+nb8OR7y1Vq
L03O58uiJhwYHP1+bvkD6d+RO57G6RxGUctKb7TanbGeCWB5cNJQtcML5xd5
tiy3H/AHnAmHEmNXF44Z7ls9C+MYtfy1heMBbPhzMof+KRkzxgRm/j3Zzt84
39z5doP0ryt8psTLxmS+e1Pth7nrjH9pDZsDSzcFtvULfO4b2Mn7oqiD4Bdq
4EFRn4Dbo4IjqFmpXbsWjkvmHSl5o9byVuQ19RJnwflwN4K/GMM9jPMEk7lX
rYx6DKxYFXO3yv4xsnmJbG6K8dzb4M8BURfBY/2DNzck31X+ofaj3Gvcnvnu
dnZwaJ/gCmoD6hpwgJjZXPOauGteHrxBzlyQnM8XEmPJOTwkOV7xLXwBv1OT
UbNhs2dwPU+PqO+nJGP03sy81xznOCb82RRjGyNu92X+NjX57t4Ud/xW9bdE
PdEatQXzUq/1iloN2+QJNhfX/Y+mS+5z4Q4CLnTKjdtgP3yHDrXN7IrnASc7
574fcNehvsImedchN/7CDx1z5zScs6RiW/AmnLc4bD5YMU/AEfw/AYd5518I
8zFXOfMdFVxpI5sPqH+ZbLbNPX558l5bY+8n5TFW/UdkvruCT6uj7uBfEXVI
c6z5L8n3jb+qbch8v+X/REvYxIf4ZmPELf+fvpy35Fpmdtj9En/iv9WpuTES
fv40893wp9RcuesH/tP8Ie7/f1T7Seb76WTiJzcOg8dXJtczw5L3xpqIc3xw
MOpe/oOBn7zPqTu/dkp/ZtV+XxX3LmrGhzPXl+TJHcl1HnnyA7Vbc9vumPwf
EJ+9nPzfCt+/Inlb7jw4PflfGH56Nblmvzu4kpglnsEEapy28b+MHN0U/0B+
mZmX9mrsxLq58+a6/Qyvs/9/BgdsSub2k4N33s2dt18LrKU2Js83J9coW9Se
UZhbuVt0L8wR8OopcXdkbuqljsFbjOsQ/Dgxau9Jkctzg/f3Z66TqZfnxl2B
HH8pmff4V/T7ZN7jXxE168DAoB2ZMQfseaTwuuGKj5Lzi1x8ufA9l39XjTEn
vPlW8v+Ut9HPjLdg9vuZsQ7u+jD+78BL8HWn4OArCv/v4z8oePll7nAuuWv6
rxfOD/KEdZ9QOAaIhf3J58m96vPktTwU/NkYuM2Zw/HokbvkMDnbNXfsbY9a
iVoKn28KfqFm558n+uQ7/y/A2s6F8488ZJ3P152v5+l7m8KxRwzuSrZHHJ1U
OB6IC/KAfCA3e0SugLHbkv3ybjKWgClw/zvJcbA1+T8uY8kjeGdLzRxHyztz
9I+7yLnBU3AD3MG64Cti+3+XqAkd
           "]], 
          PolygonBox[CompressedData["
1:eJwtlld0VVUQhg/JPfeeffKkNOnVhGIDfEEXIAiBKFJCSyippFCVtkDpNiDS
LBTXUooixQIEDBBaQAUp9i4goYP0bgFdfr/Dw6wz/8zsOXvPzJ7Z9XKeTh0e
53neLigCZYee19D3vMR4zxsceN4fzvO2ofgc3U34txM870DU80qRXQQvAZeD
j2BfjbXjwWPALcGjWd8SWW9+8Bmy+eiOICtBV4KsHP40PhqBXwffCy7GpnKM
/+J/HvwL6LPhc6FryLfgbzb72wg+i+4UlMT611jfkPUnne39VXADcENwOTiH
taX4W6o9sJejyGrg6xj6tfiag70P/wH6eGz/Qt8NvYfsb/j52FTD3yr0FbQ/
ZJ3RH0L/EbpZrP8F/mfoffBM8PfwX0LLwEXgffBHoDXg2eAI/AJ8Ffm25ifw
fPAM8Arwt+DD0Oo7/uPhF6Ov5NkZdJbvnNm+gv4r/RtZHDZ/sr8u7O9lZAPR
50M3kM+Dpvu2py/QLQTP9O0MB8HJnPEt33KwFl/DwbPAyfyvL/hfbHZiu4c9
/ANfAbrFvxYgq47tGXBj8BvsJxEcB74NXoi+BnhNYLnXGVYHlhPl5i5wA2wL
Q1urf26Gv4LNOdansv4CdiuRjfatpm6Ci6FtnuVEuZmCjwxss6AryNZB2z2L
iWIzFn95nCUfGgFuAdWMms8UdOsTrFYP4X8d/GLocNRqqCr/XgGNwjYP/9P4
12Vnd2E3/7gEn459B+zXY5OPv1+RfRixHCvXqhHlUrID8CXYbI63HCgXxeAN
4ExoemAxV+xV86r9T1lTA900fNRCvxtcU7bgOuALUBv48/hvgn1zZ7Vekf01
gx8K7UffCTrL/x4O7a4pxor1RegxdBeR3YeuKXQB/hGoM2sHsZ9+7Kc/NAXb
wcj2Yd8ROoO/j6HV+KrJftNZuxd9bfAM9PWw/wG8KmI1rlrvjc09vtWIaqUf
uI5vd6TcWc0rXrWR9UVXEjNeNrItRL8XfTJ0Cl1SYL1hA/Q7uuvOcqMedgM+
BSrDthV0DPslMYuVzqizFnC+PpwtHZqMr0+QLfStp80F33LWC3UHbsM/Ce2I
s5ifwNcT4O3wraHj4PasuYHtdag5vppB1yKWY+X6MtQO26vIHkJXO7Bc1kK/
C191A4udcrwHXD+wXqKY7nd2Rp11E9QIXU5ovU89MRc+C30HdO2R9YfPgzqB
O4Cz4V9y1ltV06rtVdAY3+6E7kZP9K0jtsdu8M87u1sjsVmu3g5uc0evs/QD
twM/Du4DvwibPXH2z8Xww53dZcVEsRkYWu/WDMiDzw9tFqiHFMAvjVktXoLu
B09WjcA3JgeT4C/ho63+jewB9NOd9TqdQWd5J2a6K9CDofmQr0ehLtiejlnt
qoYGgU/GrJa05wLNptByqRw3hk8MrXaU4yTFCpte+EpiP6Ph341ZLpVj5Xo9
uMyzmaLZco5vSpzdwWHKX8zuou7QEGd71F4V017Oaka1c1M546xZ+OgatR6m
XtbV2VkUA8VCd053TzPjN3QT8J/vWw57gMc622saeBz8VNYMiNqd1t3eEVjv
ScSmTL3J2azbCi6Fn4i/At9y3Be81dmsUQ/eAj8efZ5vM35tcOcNoFmK/2z8
j3TmWzEbBd8itLMpJudZ2x1Zq4j5kC/VnGpLslT4cYH5UgwUi0nYFPpW45nO
ZqBm4XLwN/BfO+M18zT7tjub7ZoJ2/SeQXa3Zz1evb4wwe5+MjYT1U+xORi1
N4/ePoMTrPfpvfQma0+gL8b/XP4ZVb3HrNfqTaS3kWxkKx+LdP4Emz0Z+H8G
/nrMZolmtGa1/ql/KydD0F9GnxmxmabZNgl9WtR6lHrVUCgjajLpJqhmPbsj
E+Gvsj4nYm8ovaWOEe+UeFszLMFmlGaVenAfdDnYdIxYTBVb3WHd5bbI0vVW
ilktVMLHStZmB8ZrhqXhr8zZW6ki63PR7XD2NqgMHgh+ytks+X/GaNbhry66
etCA0N5EehtJ1h+809nboapmLvabkNWPtxlTCn/OWe+bg34reENgbxPZbAys
R6lXKQYvOusZ6h0jkL2HbllovGI8VbM0sNlaHVlaaHvS3vRGPOosx8q13shZ
6LqHdlbdcd31GcRgdtRmhmaH3oB6C2rm/Qg/AGofsTuku6SerN4sWQZ8mrNY
687q7lYJ7W0kn0UJFkPFshLUA11qaLzeqHqrNnX2FldNN4HPRN/Atxo9Dt6I
z/q+yaTTDNAsUM5znb2B9RaWTUZoMVfsq0C9wD1D4/Xm09uvILBY6c2jt89z
znqLavBZ+P8Al/KglA==
           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.9625, 0.77625, 0.48374999999999996`], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNmWmQldURhi9z753vO99NqkypoMIgiLLKNsOiRh0Iq4CKmopRQBBcEBAV
EPd9SQKiJCUoLpj8zI8oKAwCalKaVEUYFjVu7LK6xCRaWSvR5H14e8r8+Ob0
PafPOX36dL/dfabr9BsunltXKpWG6k9Zbe9UKjVUSqU+ai/Wd7boiWrr1G7W
t1U8ffNSaaX4O6h/hr7R6r9S7eb6UqlV38SyW36fI/rYin9D820SfbrabkWp
dFBjp6jdr/aAvo5av2v87qK2KSuVfi/+3uI/Xfs+q33ba6+xsc5p7Tz+ZvBc
obERmjtZ7Yqq12HNvlXzvSW6s9Y9U+vsybzG5lhnXc1n7Kd9empsmr4e+qYG
PVnrD9c694q/g/iaRS8W3U70eI1P0Neuzvz8PkH0heJZpHmXld03NdZBH+gF
XbXtAf8y8beqf5vknCT6ZPWfK57OmWn2v1hzTxHdueS9F+n3FtGX6czD9PvS
5D5k454Glf0beq/G9+k7Sfy/0Hl3iX5Oa60Rz27RL4lnlfq3qB0tPbyn/b6j
8XfVHpOZHiPe9hrvo697O695XsU67a05T6s9TjKMTO7brTnbyp7PXGxqMPco
Gc5Ipt/V2Dx9Dfr2l3zWznH2hqBXie/a+A3dV/RrWusJ0YXudIvoAfk3snKn
39X6QzT+vn5X0Ku+7Vr/W4XpRvEvkW7GaM52/e6qb6e+FzXn59LDDtErNXe1
eHaF/dDuDvo58Xwgnmcz6w59NtFKtj2iB9V5bfjHq29c2AZ2wm/WGqd2dZ3X
Gah2ufi3hpzlis+FPZyo9v2Kz46+98Y9nsW66msQ3UfneUb08dhAzfztddYv
cvMMEj293nIgw5Sy7RabfLlqXaCHHqJfCn9foPFR+s4Xzw/KptvF/U/S73dK
7hsdPEc0d3zVa59XdX/bvJExlz0Zb6PHhwz4Wc+g19ZM6xqP+gk2x52yJ3vz
u5fWXxP6uUdnu0Zjj+X2uUkxh/OODLvCdrAh6NcL0z/RPgekr1b1TVXfMPVt
LluvW/V7vfZYn9kvW6req1/V/eAZd7Wu6vvakntua9gVOn0r8AcaG+RMveKM
f4j93lG7VzJswu9FnybeFyv261Faq1XnaFT/R+Cs+qYUPhNnQ4eHQ9+s+WHF
toRN7Rb/m2CD+Ltlxg3w42/JvvPXZHl6hJ7ByNVh25xjeOhhvsYXho/eHDR3
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
iVoK3SAb+kGvG0PPTxa+L+5tcHJtMkjtw+q/QGs+pPbEwvkV717rcs9tyX1v
YCZ3h447Rg5GHUU9dbDwO9bqeMsiDrAmedbe3D6zLzfuH923znFhV7yJvRf1
CW+BHQvHYt4mOxR+x+CNjXedCaH/LhGrOePOqENvV3u4cIw/Qh6ibzFvLoVz
S7COtxfwlrcF9EXdQP1ALF4b4+Rj3XK/vRzCxnO/gx1O5m0OfmrNHRFfGOd9
HJ/6ovBbzJe84eR+mzqSXPu0Bh99vOtR+7QrXIPVxVs4+AsOfpXsG19TfyTX
iqXCvsO5wKVZud+JrgRXcr9D1Qrnlltjj/65903q/3Oyj/1F7RfJefmXyXki
fk4ug26IRdTdf0qONbxbULuS9/0w8ovrqs4lyDvIUcAifOhQ1I9/zIzdTdr3
ucL8K0M3R+Ktiryc/GtKcn4Gpl6UXHuQR45IfidjzuTI15EN/CF/mR2xiRxq
TsSvYVEPES/Ii/F/6qvuue/44+ScYnHwgaubosbEbrFZcPbTzHFwTrItcOfk
0s1hM9z14cjbZorn48zxZVZyfv1CvOUQq4hZ1NDUS+TC05Mx6qdR+/MGMDDo
2wrjLZg9Ld5Mbs1dL2NDbf+HeTxkAJfB/Naom7h77p0YADaSx2JHP6saD3jP
aAqaPnwc+ubC/OTU/0yu5f4V/0dAHs6O/20PHOSd7LXA6/2RJxBbeR8h7x+m
uX+Pc/4j3i3AYeoU3t2XR+2DDl4PvOadm/9/4Be3FD4X9cH/APbxIck=
           "]], 
          PolygonBox[CompressedData["
1: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
           "]]}]}, {
        EdgeForm[], 
        RGBColor[1., 0.8833333333333333, 0.6249999999999999], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJw1lslzlVUQxW/Ie3nvu4+AsJAqE4YgIRASCDOEMIilUla5ECIstApFNg4k
zhCwUJlkwbCwUHfqX+CKhQwCgqAUuhAxAyBQBVKuLFjpSn+H0y5u9fn669v3
3r6nu2/Lpv61faNSSn8x6hl/VlPqQTEtp3QExQHGHfSNjGXoRyNb+XcS/Bi2
R2sp9ZZTOoxu1Cjb38bm63rP19wR5KXw9TN25VJKY4qUHgWfYM4q/OwDP4Of
PcjeBs/5f/1L4XNDJaWzZa/9BnYFfsbjp2B8gW42flrQHwevBNfQfwnuAncj
jzFqcY7jcZbfk21uIHvxv46RGVsq3pvO/To+K6z1EP76wFXwOPA59vJsg/fz
KvoG9GNlE/OfC3+L6r1OM7iJsYp5VewXoj+FvMW8+SXvT2sui3UnIGfUpdRW
5/12x54342N9xesqPoq74vwCh/sE39/GXUwP/fdl71UxnML+HmatycjBsv3f
TPbbHfHpC//iwVDZdktYZzHjq4jV6OzvM8i7Ve95anYspZdNzj776ex58qG1
9E/fwnfibqZgs4A1axXHZVvFfJzOPpez/grGtWR/WkPxPKJzIrdiu4b/GzQ4
T2Nh//PwPTE7rivA35Ud++vM6eT7InGo8H8W+AdwGdwOvgAugecgN2GPuzQp
7mkysh+bRejfzOajeDkmmRPiRkLfgc2P4Ibs/Z9hNPLdXuc5stdetKcx6Gdi
fx5Zn80T3aPiMA/dy+UHLlMT/sfz3Yy8hk0X+HHwELgdvBw8Au4ErwL/Bm4D
d4OX4uMUo1by3W4I/pyJe6wh9wd/Tmb/Xx/nEp+k1//TcadFNne1x+dr5mpH
8HVycGxq4ZxR7vyDHFeKe8LmMHOOkjsHkTuzudGInInNi9iwdPqY70fx+Qsf
n4M3ov8MuZ1vYFpQ+O7Fgb34+SDb/25iOYBeV9GJzQH0a9FfTq4vqjP7keew
mcleDjF3esn+2VLqAL+kHAUvVj4p/iXn5pbIC8Vmc+AO1pjE/67COS8b5e+D
2oR+VHZdUH24X3huX9QH5eXZyM0toZfPZehOM0Yzp5U5j4gjyPmMqeDFyLbQ
6798iFvyMzv2o31tqrlGDVSdW8ox1cod7Gk1cz5Frix85mH+zSgct4Hg0ayS
+a886Aw8u+TcEBYH9S1+zil8L7ofzZNPxVDcaY66pzzTmUaS80x8HAbv0/2x
zz01c1xcUd3bUXU/2Iy+pXBNUG0Q32QjLimPlUOqD6sL7+1qxfmnnLuafJ/t
sR/lme5zKGrsNMat5NqsGKk+9BTm4qBiUjIWJ+VjRvhRbRwue58fEoCnwXez
e9/Ohuh/2Ta3kX9k802829jg+eK9cmYw/Ijr4vzBqC3not/trtnnrprnyF71
U3Io5k4Ut5AX8LGr6jX6sL+Hr1Z8XEbfWjLXxXPVhtY41/rgo/J9aWGbKxXn
YlvYKDa90R/V79X37yN/ze4xV7L/qeepPtcl2+iNsC7minuqH+sC90bMhWvh
W/FXzesKXnUHb8SZJWXzRpzpKfuOdb/qDxeDA3VMGkT2q4ZX7VtvhLlV9w69
C25U3HfuRF40Rd9Rn1C/eLJwjT8fPPlX9VQ5mh1fxXlvvJFG4p2i+jchuHQo
ao5qz67ghjiyMPJXefx+5KByUe8hvYsmFe7b6t9j8dMSWLktvsu/7vqnqt9F
26v+3xL202IPygvN0T/VBJ1Jbwz19ycK95XrnONv8BV0r7GHV3SX4G8qPqfO
e7zi95lq35rCdrI/hv5mxX1f/b8/Yn4iYtkc8dSac2NdyXlxp29n19a3suur
8HDU2yWBH/AV/x9l98/l8QZQH1M/Ex8kuwOrXqpuig9bs/F72XWnKXglXU/Y
3Ct8Xp17IPr0NvX5qMF6C7+bvcY7yPlVvyv0vtD7Um+yp8D/AZDpK4U=
           "]], 
          PolygonBox[CompressedData["
1:eJwtlEtsV1UQxk/p/3LvPX8wEQGTaksLtqXYJ68W2iIPH8TEhQ3RhSaFlhUh
pVgBUdPGYpENZUHwnahLV6yIsdCd74g8awvlYWORNaxgBb+vn4svd747Z+bM
zJmZqp59XX3zQgh7QQGszUNI+C6HrEOeTEOoQ14J2uG7iyHsmB/CqdIQepGv
oa9H9zzYhP6jGEI1Dl/FyTDycc6c4fxW+IfwC2AMeT7n9yB/jH4I/VJ4JfYT
/PsZ/Swx/JmFMI3/JnSNYAv6++h3JL7jHnIf9t3YtxHPIPwYeA39CvSfIF8C
5+AZ9n3IF8FZeArfi3wZjMNzeD/yD/hby53r8JfB70bnUlcSwn/IE+hqOFsN
2ohnDD4RnJNyuwlfja4FvIg+RN/9N+IjeB0oK7jWK5GbQUXBNW9Cbs1de1IK
65GPUIPtKJ/kXxn8Ye7YdecD5C3ox8n1dQx6iH0Z982gH+NfuXIjnqngHJXr
vOhcJ/lXgvwsPhbBa8nvIr4WRtfyO+zXwF/O7WsjuI2vIvpW9N/CW9Dn8PXw
b+BN8Ar1D/7ewF+5csn9thwJVcj7dT75Pyb83c/dC1fh95C3g3P46gAz6EeL
rr166ATyOPYnsd8M3kf+EuxK3IMvYPsVvCdxz2yFnyCmNxPXcEj9GN0bXfBR
9UbqWqhH1CtfgJ2Je74D+7Op3049o94Zic5NPXYUeZiYBontNAl+z12f8a87
cY9swP5reG/inngp98xodmRzBHkEaP40A0eRGzPXUj2oXpzF/prqBf5Ffqvo
3lQN3i66R9QruvNz9Icz98JP8CvRb6q3lY878FeUE/7bwT/c8Wn0bCqGU9F3
6C7N1DC2A2ATvBMcRvcu2IBcJJ/Fud9Ab/EE/Gm9L+c3Jj5zAF0/vA25FQzA
34F3ILeDQ9ExKlbN/FXpo89G/D2l3OC/F2wj24PRtgv4t0SzAP+j4BgVq3bG
3O6gRuczz4xmRz3+jOLNrLsOpjNDsnbaB8g1uXtVM1qL/F507gvhS+G3qNma
gmesAt2PqXtXPf9XdEyK7TftxMw5KJdfQF3mmql2v4JV8OXRb6GeXxG9U7Rb
arUzUu887b5mcCP1DtYuXgWmUu9c7d4GcF27J/PsakYX4K8yenb15lXRO0m7
STkol0J0LHojvVVpdKya0X3w5syzrhmP2t303O7UO6c6+s319nqDhsw1Uq30
ZvXwhty7TjuuUbshujbqkbleyZ2rZk6ztzl3LpphzfK23LlrhjRLnblz18xr
9p+L3hWKSbE9Bh+vu2g=
           "]]}]}}, {{}, {
        Directive[
         GrayLevel[0], 
         Opacity[0.5], 
         CapForm["Butt"]], 
        LineBox[CompressedData["
1:eJwV0LcyBFAYQOGrkp6BDawwI83IaeVQe4SlZlTsroIVOlSyF/AAGrWSSrZi
wY6SJ/Btceb8/7l35s7cWGphZr4khLCIos8rQ9itCOEPv7gpDWGNc1hFAd+4
1HeKd7GNFS2LfexhyfmmvoUNRMtDiCCOGJad13E9EmhEA9J6M7egCW1oRUbv
4E60oxtdOPTWAXrNd+708D338ZE+wA/2fn7kQT7Wh/jJnuRnHuYTfZTz9hF+
4TE+1Sf41T7Ob1ytRVCFZFkIk/q7/mWOarHiG+Yp/UMvmONaDYbN0/qn/mOu
1S78UYJH7Clzmm/st7jDlf0aGeSRxZx7s1hHDmfaPw6wOlw=
         "]], 
        LineBox[CompressedData["
1:eJwV0LVORUEUheG52DVcEyyhxO1NaKGiw67hFJDgBfI4BIeKDn0E4AGgggq+
Kf78e609mXMyPdP5iVwihJDHG44yIZzgGK/JEA74ELvYxx4e9F3pELpRi0fd
uW6Gv+Rv1GFWfsKF3Rz/6H5Rj3n5GZd2C/ynC9zAOX7BlV2eEyhDo10h/heu
7YqcT4VQzr3cZF8yL6IgV3AfN+uXzMsoypXczy36FfMqSnIVD3Crfs28Hu+S
kzzIbfqN+O34JtkQbniKJ3FrTuHMPORs2tnhaN0dMhiRs/rRaPke1RiTa/Tj
0fImcu7Zlt/NH/iM7yV3OteBduzIW/pT/gfFdjNy
         "]]}, {
        Directive[
         GrayLevel[0], 
         Opacity[0.5], 
         CapForm["Butt"]], 
        LineBox[CompressedData["
1:eJwV0EdOQmEYheHfWEB0E8a6HmdiRxQExBXYdmFfgWWiFywz12EBezexJbb4
MHjzfucc4N7QlpruLdaFEHI4ioVQTYQw1RJCAbPxEDI8x1me4Twv8CTPc46X
fG+dH5tDWOMnfsALnrFsf+N3vOITH1jRf/MPvvCHX6zqI79dqj0HFZS91x52
bH187HMnqEdS3vDcXVu/+1R3hgYMyJu2yDboruiqaMSQvGUr2Ybd57oLNGFE
3raVbaPunHe41LdzjFO6MeTlK7mD45zWjaMgX8udnOAJXab238o3che3cla3
j0XPKuqSfCDf2SJ3t+7W3cP3fGj7B1eTQ8k=
         "]], 
        LineBox[CompressedData["
1:eJwV0Lkyg3EYhfG/ytbH2hipqCytDjWRGTtJbLHFMmaYCVpDpVHK4gKIUutC
MJaIoHAHfimeec457/fNfElXaieWqQshpDHaEEKpOYR7XGGwKYQ/2299CJnG
EIblftsID/CPvSp/87b7jW2Lq3rF/sWbetG+wRW9bP/kdb1gT3NZX+UPXuOc
PY9leQVJLCGFU88scgJzWMA8TuwzPItJTGMKx/YJjmMMMYwjay/5lhc84wlD
uMMtOmvf4Jmi/6FDfq/9du/1oV3PuRXc2uQ3t157D1r1a7e8W4v86ha1P+jd
HLFdyOd4lC/ds/IBJ/mIE3zIe7yPXZzp/6UyOWs=
         "]]}, {
        Directive[
         GrayLevel[0], 
         Opacity[0.5], 
         CapForm["Butt"]], 
        LineBox[CompressedData["
1:eJwVzskuQwEYhuHfSnEVNuYxVrasWlQiYStxAYSax9ZYN9CdhA6GJS6Aa8HO
VLTWHos33/e/3zk5p3VuYWq+ISJmkUpE3LVE3KOA4eaIGvfbGHGtJ/Uh/kbP
N0XU+WNZkyfyij+SP+4D+S0P5SW/L7/cWVmVOVnmK9jV97CFHWwj55kNuYlV
rGMNWX5ZrmARGSz9v88/+L9HnCLjP/PyFoO+UbJXuAG9ys14Zxr97qKtbOvT
P22TfBq97gtbydajf9gm+HF0u89tRVuX/m57cY/ZRvVOrgNv+jOf4kf0dq4N
r/oTn+TP3H/acTfx
         "]], 
        LineBox[CompressedData["
1:eJwVz0VSQ1EYROE/TLAVIAHCdvAQCEyoStARrAZZAjJBKrgHdwsE2QryMTh1
bnffuq9eKj+VnkxExBAmqiJOqyOa+ISb+YzXayIuuEU+5xRf8ob+mlvlK77F
DaYrI+75AXd4wiNm9C9cwjPe8IpZ/Tt/oIwvfGJOX/D2QG1EjrOc53ks29p8
f8u9bXzr2uUFd1ZsHc47+l382DrlRduqrct5T7+PX1u3vGRbs/U4D+sObHUc
nNb1YkQ+lOs5wRldH0blI7mBK7hft+m9LI/pBp3H//9DbuRjd5Jc5ILuDypX
Oew=
         "]]}, {
        Directive[
         GrayLevel[0], 
         Opacity[0.5], 
         CapForm["Butt"]], 
        LineBox[CompressedData["
1:eJwVzVc2Q2EUhuHtSltqKqKEIKahcyfKVZRlAMwEwRxEIlFylKkpF55cvOvd
37f3OX/x/LJy0RMRVdz0RkwMRkwiizxyuNZnON0XkeIUp/lK/9YfMS6/8Bi/
cmcg4plH5TaP8KH7IxzgVN51s4M/8zBa7k54W7eFX/MQnvTHvNn9p/fqvt8w
/+iadg2sy227B7s187fdo76OVbnV3emq2HOzjwoS+d6ubF7BIpaxhDv9Apcw
h3kUcauf4VlMYRoF1PRf3sv75wfn+JMT779zVu5whhM+439zaSjn
         "]], 
        LineBox[CompressedData["
1:eJwV0EkyQ2EUhuFjpFuFDehKEoIxVZiYZmYBiQE2wCSNvjfVlEIWEaGwGap0
iYiU5w7ees/3/efe+9cdWCos5rsiIoeFnojr7ojp/oiXvogO/jApTyGLCTwn
Z/baPO+ZcV0GT8m+/pfn9GO6NFJo6097nfEZV+2ccEs+4h8+5jv9ITflfW7w
Ad/ob7Fr3sMWdrCNDTsV3kQRZZSwrr93jzrKWHOPEtewar5yvsKP3ttEA6Py
pX6EH+RvfGFYvtAPcV3+xAcG5dnkH5gzSWd+s7fs+zPmtC6Fd/OrvqA/l/8B
dEU7dQ==
         "]]}, {
        Directive[
         GrayLevel[0], 
         Opacity[0.5], 
         CapForm["Butt"]], 
        LineBox[CompressedData["
1:eJwV0kdwj0EYgPGPiDQkghmOrspND5HovXeDGTMc5aSO3pNgSKKHJOpI1HBQ
o4woaXq0aDedi3rht4cnz9t295/9tv3srHHzGkVR1N6f1XFR9Ccxiv7iFhYm
RdFRtUV8Mz6KNmGxeDPfQiXW6UdqjfDPmhhujPXqsaHGTTgy25Q3yOPDvDwu
zHICb1Q/af0oebo8hn+gl1oaRov3JtiLf6K3Wh/0RToK9fbhl95W+RF7HLPn
NvFttTsYg8cYi/HYaWYcZ5vL5z3yAs7DEzy1th7bxUv1DvMy3sHP1J+jwtp6
+VVu6/zCcL6Zu/IH4VzuEu5O7Zq4hzgWBfKmnIbO4l7cxn5duYO8hTgFyai0
7q76BPTVmxjuHbvFazlHf4P4MdegLvxv4b7UdvEFnMd1vXZ+4wlxnfg53wt3
ZK5EXIZV4mL+6txv+I4c5CIbi3zKc2bWiD/hI77gMz5gvbVZ+sf5IPLFD5zx
Qnyf8+QHxBW4gou4FO433K31c/Xn4J68NnwXtQLk4ZDaKzSE74/LqFL/zVuw
xLr5PINnYSaqwlu1TytzrdES3dVS+TROoZ+5THRTfyN/i3foKX/Nr9CATmY6
IgPVetX2LQ1vIbwVPMINtZdmX2C5ub1q78VV6ivlRfIVvJ8fYlt4dyhU2837
UGo2V75APBkZ1k/iTC4Pb0n/iO94FAdxGIeQq15u5oC4mbliTuISPqNexIny
/ZzAo50xnUfxNB7JI1BrNl7eXDyVh/Mw1KjHyZuJh2JI+M7OHBzuQy+JE9Ef
ZeE3mp2CAfJBGIiz8s16LcWp4Z0jBckYg//VDZ/3
         "]]}, {}, {}}, {
       InsetBox[
        FormBox["10", TraditionalForm], 3003], 
       InsetBox[
        FormBox["20", TraditionalForm], 3004], 
       InsetBox[
        FormBox["20", TraditionalForm], 3005], 
       InsetBox[
        FormBox["30", TraditionalForm], 3006], 
       InsetBox[
        FormBox["30", TraditionalForm], 3007], 
       InsetBox[
        FormBox["40", TraditionalForm], 3008], 
       InsetBox[
        FormBox["40", TraditionalForm], 3009], 
       InsetBox[
        FormBox["50", TraditionalForm], 3010], 
       InsetBox[
        FormBox["50", TraditionalForm], 3011]}}], {
    DisplayFunction -> Identity, AspectRatio -> 1, DisplayFunction :> 
     Identity, Frame -> True, FrameLabel -> {
       FormBox[
       "\"\\!\\(\\*\\nStyleBox[\\\"x\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"", 
        TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*\\nStyleBox[\\\"y\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"", 
        TraditionalForm]}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> 
     Directive[FontSize -> 18, FontFamily -> "Times"], 
     Method -> {"DefaultBoundaryStyle" -> Automatic}, PlotLabel -> FormBox[
       RowBox[{"x", "+", 
         RowBox[{"2", " ", 
           SuperscriptBox["y", "2"]}]}], TraditionalForm], 
     PlotRange -> {{0, 10}, {-5, 5}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{
             
             RasterBox[{{{0.148, 0.33, 0.54}}, {{0.50875, 
              0.48250000000000004`, 0.52}}, {{0.7695833333333333, 
              0.5741666666666667, 0.3666666666666667}}, {{0.9208333333333334, 
              0.6720833333333335, 0.3545833333333334}}, {{0.9625, 0.77625, 
              0.48374999999999996`}}, {{1., 0.8833333333333333, 
              0.6249999999999999}}}, {{
                Rational[-15, 2], -75}, {
                Rational[15, 2], 75}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], -75}, {
                  Rational[-15, 2], -75}, {
                  Rational[-15, 2], 75}, {
                  Rational[15, 2], 75}}, {{
                 7.5, -75}, {-7.5, -75}, {-7.5, 75}, {7.5, 75}}]]}, {
              CapForm[None], {{
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -50.}, {
                    Rational[15, 2], -50.}}, {{-7.5, -50.}, {7.5, -50.}}]]}, {
               
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -25.}, {
                    Rational[15, 2], -25.}}, {{-7.5, -25.}, {7.5, -25.}}]]}, {
               
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 0.}, {
                    Rational[15, 2], 0.}}, {{-7.5, 0.}, {7.5, 0.}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 25.}, {
                    Rational[15, 2], 25.}}, {{-7.5, 25.}, {7.5, 25.}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 50.}, {
                    Rational[15, 2], 50.}}, {{-7.5, 50.}, {7.5, 50.}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 75.}, {
                    Rational[15, 2], 75.}}, {{-7.5, 75.}, {7.5, 75.}}]]}}}, {
             Antialiasing -> False, 
              StyleBox[
               LineBox[{{7.5, -75.}, {7.5, 75.}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -50.}, 
                    Offset[{4., 0}, {7.5, -50.}]}, {{7.5, -25.}, 
                    Offset[{4., 0}, {7.5, -25.}]}, {{7.5, 0.}, 
                    Offset[{4., 0}, {7.5, 0.}]}, {{7.5, 25.}, 
                    Offset[{4., 0}, {7.5, 25.}]}, {{7.5, 50.}, 
                    Offset[{4., 0}, {7.5, 50.}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["10", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -50.}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["20", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -25.}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["30", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 0.}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["40", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 25.}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["50", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 50.}], {-1, 0.}, Automatic, {1, 
                    0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    Directive[FontSize -> 18, FontFamily -> "Times"]]}, 
                    StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1], 
                    Directive[FontSize -> 18, FontFamily -> "Times"]]}, 
                   StripOnInput -> False], "GraphicsLabel", StripOnInput -> 
                  False]}, "GraphicsTicks", StripOnInput -> False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 150}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {
          Directive[FontSize -> 18, FontFamily -> "Times"], FontFamily -> 
          "Arial"}, Background -> Automatic, StripOnInput -> False], 
        TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"M10DefaultDensityGradient\"", ",", "#1"}], 
                   "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.`", ",", "60.`"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"10.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "GrayLevel[0]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"20.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "GrayLevel[0]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"30.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "GrayLevel[0]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"40.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "GrayLevel[0]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"50.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "GrayLevel[0]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"60.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "GrayLevel[0]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                 RowBox[{"FontFamily", "\[Rule]", "\"Times\""}]}], "]"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6418730392940617`*^9, 3.641873070619602*^9}, {
  3.6418731156653*^9, 3.6418731319955378`*^9}, {3.6418733075811577`*^9, 
  3.6418733379336853`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Interactive plots", "Subsection",
 CellChangeTimes->{{3.6418159711452312`*^9, 3.641815979041257*^9}, 
   3.64187316917889*^9}],

Cell["\<\
Interactive plots can be drawn using \[OpenCurlyDoubleQuote]Manipulate\
\[CloseCurlyDoubleQuote]. Although this command can also be used in other \
contexts, I use it most often when plotting.\
\>", "Text",
 CellChangeTimes->{{3.6418731726568317`*^9, 3.641873206105083*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ContourPlot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"x", "+", 
      RowBox[{"a", " ", 
       SuperscriptBox["y", "2"]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\!\(\*
StyleBox[\"x\",
FontSlant->\"Italic\"]\)\>\"", ",", " ", "\"\<\!\(\*
StyleBox[\"y\",
FontSlant->\"Italic\"]\)\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"\"\<x + \>\"", "<>", 
       RowBox[{"ToString", "[", "a", "]"}], "<>", 
       "\"\< \!\(\*SuperscriptBox[\(y\), \(2\)]\)\>\""}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
        RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica Neue\>\""}]}], 
       "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ContourLabels", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", 
       RowBox[{"-", "0.5"}]}], "}"}], ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.6418732125196447`*^9, 3.641873276818523*^9}, {
  3.641873356871521*^9, 3.641873437591262*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = -0.3799999999999999, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`a$$], -0.5}, -5, 5}}, Typeset`size$$ = {
    422., {188., 192.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`a$39041$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = -0.5}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$39041$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      ContourPlot[$CellContext`x + $CellContext`a$$ $CellContext`y^2, \
{$CellContext`x, 0, 10}, {$CellContext`y, -5, 5}, 
        FrameLabel -> {
         "\!\(\*\nStyleBox[\"x\",\nFontSlant->\"Italic\"]\)", 
          "\!\(\*\nStyleBox[\"y\",\nFontSlant->\"Italic\"]\)"}, PlotLabel -> 
        StringJoin["x + ", 
          ToString[$CellContext`a$$], 
          " \!\(\*SuperscriptBox[\(y\), \(2\)]\)"], LabelStyle -> 
        Directive[FontSize -> 14, FontFamily -> "Helvetica Neue"], 
        PlotLegends -> Automatic, ContourLabels -> True], 
      "Specifications" :> {{{$CellContext`a$$, -0.5}, -5, 5}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{467., {232., 237.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.6418733688748503`*^9, 3.641873438218645*^9}, 
   3.641913849215169*^9}]
}, Open  ]],

Cell["Using the \[OpenCurlyDoubleQuote]Manipulate\[CloseCurlyDoubleQuote] \
command in another context:", "Text",
 CellChangeTimes->{{3.642420845573511*^9, 3.642420904445037*^9}, {
  3.642421064931278*^9, 3.642421067611519*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{"x", ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "1"}], "}"}], ",", 
     RowBox[{"-", "10"}], ",", "10", ",", "2"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.6419138999018917`*^9, 3.641913914453703*^9}, {
  3.641913987376099*^9, 3.641913989997223*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`x$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`x$$], 1}, -10, 10, 2}}, Typeset`size$$ = {
    8., {0., 9.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`x$7327$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`x$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`x$$, $CellContext`x$7327$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> $CellContext`x$$, 
      "Specifications" :> {{{$CellContext`x$$, 1}, -10, 10, 2}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{247., {49., 54.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.641913915012138*^9, 3.641913991049756*^9, 
  3.642420870372817*^9, 3.642420907053643*^9}]
}, Open  ]],

Cell[TextData[{
 "Essentially, you can \[OpenCurlyDoubleQuote]manipulate\
\[CloseCurlyDoubleQuote] any ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " expression. Just be aware of the fact that ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " internally pre-computes that expression for the range of variables you \
indicate. This may be overly costly for complicated expressions!"
}], "Text",
 CellChangeTimes->{{3.642420911492999*^9, 3.642420964972767*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Equations", "Section",
 CellChangeTimes->{{3.6418159844412537`*^9, 3.641815985361349*^9}}],

Cell[CellGroupData[{

Cell["Solving equations (symbolically and numerically)", "Subsection",
 CellChangeTimes->{{3.641816499893957*^9, 3.64181651457404*^9}}],

Cell[TextData[{
 "First of all, it is time to introduce the \[OpenCurlyDoubleQuote]equals\
\[CloseCurlyDoubleQuote] operator \[OpenCurlyDoubleQuote]",
 Cell[BoxData[
  FormBox["\[Equal]", TraditionalForm]]],
 "\[CloseCurlyDoubleQuote], and higlight the difference to the \
\[OpenCurlyDoubleQuote]assignment\[CloseCurlyDoubleQuote] operator \
\[OpenCurlyDoubleQuote]",
 Cell[BoxData[
  FormBox["=", TraditionalForm]]],
 "\[CloseCurlyDoubleQuote]. Equations are expressed as follows:"
}], "Text",
 CellChangeTimes->{{3.6418963994655647`*^9, 3.641896485375408*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"a", " ", "x"}], "+", "c"}], "\[Equal]", "5"}]], "Input",
 CellChangeTimes->{{3.6418969961861773`*^9, 3.641897003071395*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"c", "+", 
   RowBox[{"a", " ", "x"}]}], "\[Equal]", "5"}]], "Output",
 CellChangeTimes->{3.6418970045659018`*^9, 3.6419140725279818`*^9}]
}, Open  ]],

Cell["\<\
We can also assign an equation to a variable for easier access later on. You \
can use both the immediate and delayed assignment for this:\
\>", "Text",
 CellChangeTimes->{{3.641896943863387*^9, 3.641896975173809*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myEq1", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"a", " ", "x"}], "+", "c"}], "\[Equal]", "5"}]}]], "Input",
 CellChangeTimes->{{3.641896487864349*^9, 3.641896492432541*^9}, {
   3.641896900201811*^9, 3.641896929607163*^9}, 3.641896979740831*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"c", "+", 
   RowBox[{"a", " ", "x"}]}], "\[Equal]", "5"}]], "Output",
 CellChangeTimes->{3.641897008627468*^9, 3.641914089252117*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"myEq1Alt", ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"a", " ", "x"}], "+", "c"}], "\[Equal]", "9"}]}]], "Input",
 CellChangeTimes->{{3.6418969821750517`*^9, 3.641896992871348*^9}}],

Cell[CellGroupData[{

Cell[BoxData["myEq1"], "Input",
 CellChangeTimes->{{3.6418970133910646`*^9, 3.641897014591107*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"c", "+", 
   RowBox[{"a", " ", "x"}]}], "\[Equal]", "5"}]], "Output",
 CellChangeTimes->{3.641897015055697*^9, 3.641914127074945*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["myEq1Alt"], "Input",
 CellChangeTimes->{{3.6418970161301937`*^9, 3.641897021951273*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"c", "+", 
   RowBox[{"a", " ", "x"}]}], "\[Equal]", "9"}]], "Output",
 CellChangeTimes->{3.6418970223421803`*^9, 3.641914132534375*^9}]
}, Open  ]],

Cell[TextData[{
 "To solve an equation symbolically for a variable of interest (e.g. ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " here), we use"
}], "Text",
 CellChangeTimes->{{3.6418970346083727`*^9, 3.641897072213522*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"a", " ", "x"}], "+", "c"}], "\[Equal]", "5"}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6418970486466017`*^9, 3.641897075287196*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    FractionBox[
     RowBox[{"5", "-", "c"}], "a"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.641897075851282*^9, 3.641914151471366*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " returns a (potentially nested) list representing the set of all solutions \
it can find."
}], "Text",
 CellChangeTimes->{{3.6418970812614117`*^9, 3.641897114541503*^9}}],

Cell["\<\
We can also solve an equation that is accessed as a variable:\
\>", "Text",
 CellChangeTimes->{{3.641897122181368*^9, 3.641897141885221*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{"myEq1Alt", ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.641897143590557*^9, 3.641897151312478*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    FractionBox[
     RowBox[{"9", "-", "c"}], "a"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.64189715167667*^9, 3.641914181291005*^9}]
}, Open  ]],

Cell[TextData[{
 "If we try to solve a transcendental equation, ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " complains because in general such equations cannot be solved \
analytically:"
}], "Text",
 CellChangeTimes->{{3.641897244485064*^9, 3.64189727081291*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "a"}], " ", "x"}]], "+", "x"}], "\[Equal]", 
    RowBox[{"b", " ", 
     SuperscriptBox["x", "2"]}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.6418971644547*^9, 3.641897175366973*^9}, {
  3.641897223857307*^9, 3.6418972381745872`*^9}}],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "a"}], " ", "x"}]], "+", "x"}], "\[Equal]", 
    RowBox[{"a", " ", 
     SuperscriptBox["x", "2"]}]}], ",", "x"}], "]"}]], "Output",
 CellChangeTimes->{
  3.6418976587253*^9, {3.64191420094914*^9, 3.641914204156432*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"x", "\[Equal]", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "a"}], " ", "x"}]]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.641897554516079*^9, 3.641897575741293*^9}, {
  3.641897664749792*^9, 3.641897683748434*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    FractionBox[
     RowBox[{"ProductLog", "[", "a", "]"}], "a"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.641897576787866*^9, {3.641897670751543*^9, 3.641897685359371*^9}, 
   3.641914209864016*^9}]
}, Open  ]],

Cell["\<\
However, you can sometimes find (a) numerical solution(s) for a specific set \
of parameter values using \[OpenCurlyDoubleQuote]NSolve\
\[CloseCurlyDoubleQuote]. Let us try this for the transcendental equation we \
just encountered:\
\>", "Text",
 CellChangeTimes->{{3.641897284702351*^9, 3.641897348772719*^9}, {
  3.6418976121885*^9, 3.641897613476078*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{"x", "\[Equal]", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "0.5"}], " ", "x"}]]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.641897353110114*^9, 3.641897383406728*^9}, {
  3.641897440136856*^9, 3.641897486510461*^9}, {3.641897522438402*^9, 
  3.641897547509697*^9}, {3.6418975851449547`*^9, 3.6418975954042997`*^9}, {
  3.6418976947059307`*^9, 3.641897697989264*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", "0.7034674224983917`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.6418973689963503`*^9, 3.641897384197536*^9}, {
   3.641897460295429*^9, 3.6418974870269737`*^9}, {3.641897532377393*^9, 
   3.641897548119103*^9}, 3.6418975961317053`*^9, 3.641897698780203*^9, 
   3.641914252425123*^9, 3.641914312840166*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "NSolve"}]], "Input",
 CellChangeTimes->{{3.641914262071925*^9, 3.6419142645012083`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\!\(\*RowBox[{\\\"NSolve\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"vars\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\) attempts to find numerical approximations to the \
solutions of the system \!\(\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\) of \
equations or inequalities for the variables \!\(\*StyleBox[\\\"vars\\\", \
\\\"TI\\\"]\). \\n\!\(\*RowBox[{\\\"NSolve\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"vars\\\", \
\\\"TI\\\"], \\\",\\\", \\\"Reals\\\"}], \\\"]\\\"}]\) finds solutions over \
the domain of real numbers.\"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/NSolve"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.642420977593957*^9},
 CellTags->"Info3642395777-6639012"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solving systems of equations", "Subsection",
 CellChangeTimes->{{3.641816521293853*^9, 3.6418165247899103`*^9}, 
   3.641873003952175*^9}],

Cell["To solve a system of equations, we proceed as follows:", "Text",
 CellChangeTimes->{{3.641897718590992*^9, 3.641897735713698*^9}}],

Cell[BoxData[{
 RowBox[{"myEq2", ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"a", " ", "x"}], " ", "+", "y"}], "\[Equal]", 
   "c"}]}], "\[IndentingNewLine]", 
 RowBox[{"myEq3", ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"b", " ", "x"}], "-", "y"}], "\[Equal]", "d"}]}]}], "Input",
 CellChangeTimes->{{3.6418977372927847`*^9, 3.6418977792368183`*^9}, {
  3.641897813285334*^9, 3.641897844747444*^9}, {3.64189788539825*^9, 
  3.641897901884491*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"myEq2", ",", "myEq3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6418977843874702`*^9, 3.641897799420526*^9}, {
  3.641897852533249*^9, 3.641897853828794*^9}, {3.641897913236905*^9, 
  3.6418979150607433`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "c"}], "-", "d"}], 
       RowBox[{"2", " ", "a"}]]}]}], ",", 
    RowBox[{"y", "\[Rule]", 
     FractionBox[
      RowBox[{"c", "-", "d"}], "2"]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6418978003575077`*^9, {3.6418978464517393`*^9, 3.64189785425837*^9}, {
   3.641897903664424*^9, 3.641897917002801*^9}, 3.6419143643711977`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Using assumptions", "Subsection",
 CellChangeTimes->{{3.641816531786888*^9, 3.64181653996561*^9}}],

Cell[TextData[{
 "Sometimes, it is crucial to tell ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " about assumptions you are happy to make. This often allows for much \
simpler solutions, sometimes it even makes the difference to ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " finding a solution at all."
}], "Text",
 CellChangeTimes->{{3.641898261371673*^9, 3.641898318183794*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sqrt", "[", 
  SuperscriptBox["x", "2"], "]"}]], "Input",
 CellChangeTimes->{{3.6418983315529003`*^9, 3.641898335993065*^9}}],

Cell[BoxData[
 SqrtBox[
  SuperscriptBox["x", "2"]]], "Output",
 CellChangeTimes->{3.6418983365778513`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Sqrt", "[", 
    SuperscriptBox["x", "2"], "]"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"x", ">", "0"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.641898339633456*^9, 3.641898371441024*^9}}],

Cell[BoxData["x"], "Output",
 CellChangeTimes->{{3.641898358495838*^9, 3.6418983719967546`*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Dealing with inequalities", "Subsection",
 CellChangeTimes->{{3.641816527381723*^9, 3.6418165303659773`*^9}}],

Cell["A useful command in the context of inequalities is \
\[OpenCurlyDoubleQuote]Reduce\[CloseCurlyDoubleQuote].", "Text",
 CellChangeTimes->{{3.641898383592081*^9, 3.6418983957670717`*^9}, {
  3.641898427751471*^9, 3.6418984280947104`*^9}, {3.641898497008183*^9, 
  3.6418984974703817`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0", "<", "x", "<", "2"}], ",", 
     RowBox[{"1", "<", "x", "<", "4"}]}], "}"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.641898510103134*^9, 3.641898523215494*^9}}],

Cell[BoxData[
 RowBox[{"1", "<", "x", "<", "2"}]], "Output",
 CellChangeTimes->{3.641898523604035*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "<", "1"}], ",", 
     RowBox[{"x", ">", "3"}]}], "}"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.6418985277429256`*^9, 3.641898537223277*^9}}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.641898537628833*^9}]
}, Open  ]],

Cell[TextData[{
 "Again, telling ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " about assumptions you are happy to make can simplify things a lot:"
}], "Text",
 CellChangeTimes->{{3.641898605366767*^9, 3.6418986238609743`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Reduce", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"a", " ", "x"}], "+", 
      RowBox[{"b", " ", 
       SuperscriptBox["x", "2"]}]}], "<", "c"}], ",", "x"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{3.641898690717946*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "\[Element]", "Reals"}], "&&", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"c", "<", "0"}], "&&", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"a", "\[NotEqual]", "0"}], "||", 
            RowBox[{
             SqrtBox[
              FractionBox["c", "b"]], "<", "x"}], "||", 
            RowBox[{
             RowBox[{
              SqrtBox[
               FractionBox["c", "b"]], "+", "x"}], "<", "0"}]}], ")"}], "&&", 
          
          RowBox[{"(", 
           RowBox[{
            RowBox[{"a", "\[Equal]", "0"}], "||", 
            RowBox[{
             RowBox[{
              SuperscriptBox["b", "2"], " ", 
              SqrtBox[
               FractionBox[
                RowBox[{
                 SuperscriptBox["a", "2"], "+", 
                 RowBox[{"4", " ", "b", " ", "c"}]}], 
                SuperscriptBox["b", "2"]]]}], "<", 
             RowBox[{"b", " ", 
              RowBox[{"(", 
               RowBox[{"a", "+", 
                RowBox[{"2", " ", "b", " ", "x"}]}], ")"}]}]}], "||", 
            RowBox[{
             RowBox[{"b", " ", 
              RowBox[{"(", 
               RowBox[{"a", "+", 
                RowBox[{"b", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SqrtBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["a", "2"], "+", 
                    RowBox[{"4", " ", "b", " ", "c"}]}], 
                    SuperscriptBox["b", "2"]]], "+", 
                   RowBox[{"2", " ", "x"}]}], ")"}]}]}], ")"}]}], "<", 
             "0"}]}], ")"}], "&&", 
          RowBox[{"b", "<", "0"}]}], ")"}], "||", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"b", "\[Equal]", "0"}], "&&", 
          RowBox[{"a", "\[NotEqual]", "0"}], "&&", 
          RowBox[{
           RowBox[{"a", " ", "x"}], "<", "c"}]}], ")"}], "||", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"a", "\[NotEqual]", "0"}], "&&", 
          RowBox[{"b", ">", "0"}], "&&", 
          RowBox[{
           RowBox[{"c", " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              RowBox[{"4", " ", "b", " ", "c"}]}], ")"}]}], "<", "0"}], "&&", 
          
          RowBox[{
           SqrtBox[
            FractionBox[
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              RowBox[{"4", " ", "b", " ", "c"}]}], 
             SuperscriptBox["b", "2"]]], ">", 
           RowBox[{
            FractionBox["a", "b"], "+", 
            RowBox[{"2", " ", "x"}]}]}], "&&", 
          RowBox[{
           RowBox[{"b", " ", 
            RowBox[{"(", 
             RowBox[{"a", "+", 
              RowBox[{"b", " ", 
               RowBox[{"(", 
                RowBox[{
                 SqrtBox[
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["a", "2"], "+", 
                    RowBox[{"4", " ", "b", " ", "c"}]}], 
                   SuperscriptBox["b", "2"]]], "+", 
                 RowBox[{"2", " ", "x"}]}], ")"}]}]}], ")"}]}], ">", "0"}]}], 
         ")"}]}], ")"}]}], ")"}], "||", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"c", "\[Equal]", "0"}], "&&", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"a", "\[NotEqual]", "0"}], "||", 
            RowBox[{"x", "\[NotEqual]", "0"}]}], ")"}], "&&", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"a", "\[Equal]", "0"}], "||", 
            RowBox[{
             SqrtBox[
              FractionBox[
               SuperscriptBox["a", "2"], 
               SuperscriptBox["b", "2"]]], "<", 
             RowBox[{
              FractionBox["a", "b"], "+", 
              RowBox[{"2", " ", "x"}]}]}], "||", 
            RowBox[{
             RowBox[{"b", " ", 
              RowBox[{"(", 
               RowBox[{"a", "+", 
                RowBox[{"b", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SqrtBox[
                    FractionBox[
                    SuperscriptBox["a", "2"], 
                    SuperscriptBox["b", "2"]]], "+", 
                   RowBox[{"2", " ", "x"}]}], ")"}]}]}], ")"}]}], "<", 
             "0"}]}], ")"}], "&&", 
          RowBox[{"b", "<", "0"}]}], ")"}], "||", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"b", "\[Equal]", "0"}], "&&", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"a", "<", "0"}], "&&", 
              RowBox[{"x", ">", "0"}]}], ")"}], "||", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"a", ">", "0"}], "&&", 
              RowBox[{"x", "<", "0"}]}], ")"}]}], ")"}]}], ")"}], "||", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"a", "\[NotEqual]", "0"}], "&&", 
          RowBox[{"b", ">", "0"}], "&&", 
          RowBox[{
           SqrtBox[
            FractionBox[
             SuperscriptBox["a", "2"], 
             SuperscriptBox["b", "2"]]], ">", 
           RowBox[{
            FractionBox["a", "b"], "+", 
            RowBox[{"2", " ", "x"}]}]}], "&&", 
          RowBox[{
           RowBox[{"b", " ", 
            RowBox[{"(", 
             RowBox[{"a", "+", 
              RowBox[{"b", " ", 
               RowBox[{"(", 
                RowBox[{
                 SqrtBox[
                  FractionBox[
                   SuperscriptBox["a", "2"], 
                   SuperscriptBox["b", "2"]]], "+", 
                 RowBox[{"2", " ", "x"}]}], ")"}]}]}], ")"}]}], ">", "0"}]}], 
         ")"}]}], ")"}]}], ")"}], "||", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"c", ">", "0"}], "&&", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"a", "\[Equal]", "0"}], "&&", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{
                SqrtBox[
                 FractionBox["c", "b"]], "+", "x"}], ">", "0"}], "&&", 
              RowBox[{"x", "<", 
               SqrtBox[
                FractionBox["c", "b"]]}]}], ")"}], "||", 
            RowBox[{"b", "\[LessEqual]", "0"}]}], ")"}]}], ")"}], "||", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"b", "\[Equal]", "0"}], "&&", 
          RowBox[{"a", "\[NotEqual]", "0"}], "&&", 
          RowBox[{
           RowBox[{"a", " ", "x"}], "<", "c"}]}], ")"}], "||", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"a", "\[NotEqual]", "0"}], "&&", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"4", " ", "b"}], "+", 
                FractionBox[
                 SuperscriptBox["a", "2"], "c"]}], "\[Equal]", "0"}], "&&", 
              RowBox[{
               RowBox[{"b", " ", 
                RowBox[{"(", 
                 RowBox[{"a", "+", 
                  RowBox[{"b", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["a", "2"], "+", 
                    RowBox[{"4", " ", "b", " ", "c"}]}], 
                    SuperscriptBox["b", "2"]]], "+", 
                    RowBox[{"2", " ", "x"}]}], ")"}]}]}], ")"}]}], 
               "\[NotEqual]", "0"}]}], ")"}], "||", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"b", "<", "0"}], "&&", 
              RowBox[{
               RowBox[{"c", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["a", "2"], "+", 
                  RowBox[{"4", " ", "b", " ", "c"}]}], ")"}]}], ">", "0"}], "&&", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"b", " ", 
                  RowBox[{"(", 
                   RowBox[{"a", "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["a", "2"], "+", 
                    RowBox[{"4", " ", "b", " ", "c"}]}], 
                    SuperscriptBox["b", "2"]]], "+", 
                    RowBox[{"2", " ", "x"}]}], ")"}]}]}], ")"}]}], "<", "0"}],
                 "||", 
                RowBox[{
                 RowBox[{"b", " ", 
                  RowBox[{"(", 
                   RowBox[{"a", "-", 
                    RowBox[{"b", " ", 
                    SqrtBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["a", "2"], "+", 
                    RowBox[{"4", " ", "b", " ", "c"}]}], 
                    SuperscriptBox["b", "2"]]]}], "+", 
                    RowBox[{"2", " ", "b", " ", "x"}]}], ")"}]}], ">", 
                 "0"}]}], ")"}]}], ")"}], "||", 
            RowBox[{
             RowBox[{"c", " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["a", "2"], "+", 
                RowBox[{"4", " ", "b", " ", "c"}]}], ")"}]}], "<", "0"}], "||", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"b", ">", "0"}], "&&", 
              RowBox[{
               SqrtBox[
                FractionBox[
                 RowBox[{
                  SuperscriptBox["a", "2"], "+", 
                  RowBox[{"4", " ", "b", " ", "c"}]}], 
                 SuperscriptBox["b", "2"]]], ">", 
               RowBox[{
                FractionBox["a", "b"], "+", 
                RowBox[{"2", " ", "x"}]}]}], "&&", 
              RowBox[{
               RowBox[{"b", " ", 
                RowBox[{"(", 
                 RowBox[{"a", "+", 
                  RowBox[{"b", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["a", "2"], "+", 
                    RowBox[{"4", " ", "b", " ", "c"}]}], 
                    SuperscriptBox["b", "2"]]], "+", 
                    RowBox[{"2", " ", "x"}]}], ")"}]}]}], ")"}]}], ">", 
               "0"}]}], ")"}]}], ")"}]}], ")"}]}], ")"}]}], ")"}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.641898691141822*^9}]
}, Open  ]],

Cell[TextData[{
 "Let us tell ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " what we are willing to assume about the parameters and variables:"
}], "Text",
 CellChangeTimes->{{3.642421004485117*^9, 3.642421034475909*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Reduce", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"a", " ", "x"}], "+", 
       RowBox[{"b", " ", 
        SuperscriptBox["x", "2"]}]}], "<", "c"}], ",", "x"}], "]"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"c", "<", "0"}], ",", 
      RowBox[{"a", ">", "0"}], ",", 
      RowBox[{"b", ">", "0"}], ",", 
      RowBox[{"x", "\[Element]", "Reals"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6418985768225107`*^9, 3.6418985910065937`*^9}, {
  3.641898626654986*^9, 3.641898667718382*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    SuperscriptBox["a", "2"], "+", 
    RowBox[{"4", " ", "b", " ", "c"}]}], ">", "0"}], "&&", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"a", "+", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["a", "2"], "+", 
        RowBox[{"4", " ", "b", " ", "c"}]}]]}], 
     RowBox[{"2", " ", "b"}]]}], "<", "x", "<", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "a"}], "+", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["a", "2"], "+", 
       RowBox[{"4", " ", "b", " ", "c"}]}]]}], 
    RowBox[{"2", " ", "b"}]]}]}]], "Output",
 CellChangeTimes->{
  3.641898592016168*^9, {3.641898633447051*^9, 3.641898670387182*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calculus", "Section",
 CellChangeTimes->{{3.641815988753191*^9, 3.641815989745372*^9}}],

Cell[CellGroupData[{

Cell["Derivatives", "Subsection",
 CellChangeTimes->{{3.641816546119219*^9, 3.6418165536298943`*^9}}],

Cell["\<\
To take the derivative of a function, you either use the prime notation or \
the command \[OpenCurlyDoubleQuote]D\[CloseCurlyDoubleQuote]:\
\>", "Text",
 CellChangeTimes->{{3.6418987288133287`*^9, 3.641898751619026*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"myf", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], "+", 
   SuperscriptBox["x", "2"]}]}]], "Input",
 CellChangeTimes->{{3.641898758748312*^9, 3.641898775541326*^9}, {
  3.6418991851206293`*^9, 3.641899185342173*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"myf", "'"}], "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.641898771461175*^9, 3.641898781483838*^9}, {
  3.6418991884403553`*^9, 3.641899188662278*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", "x"}], "+", 
  RowBox[{"Cos", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{3.641898782143569*^9, 3.6418991890191717`*^9, 
  3.641914480107892*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"myf", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.641898784016241*^9, 3.641898789139997*^9}, {
  3.6418991922078953`*^9, 3.641899192422079*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", "x"}], "+", 
  RowBox[{"Cos", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{3.6418987895459623`*^9, 3.641899193280075*^9, 
  3.641914487621217*^9}]
}, Open  ]],

Cell["Taking the second derivative:", "Text",
 CellChangeTimes->{{3.641898811116684*^9, 3.6418988186343803`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"myf", "''"}], "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.641898821915354*^9, 3.641898824019269*^9}, {
  3.6418991962878647`*^9, 3.641899196510253*^9}}],

Cell[BoxData[
 RowBox[{"2", "-", 
  RowBox[{"Sin", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{3.641898824383236*^9, 3.641899197033051*^9, 
  3.641914495403816*^9}]
}, Open  ]],

Cell["Or:", "Text",
 CellChangeTimes->{{3.641898827370061*^9, 3.6418988299538193`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"myf", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.641898832210929*^9, 3.641898836939425*^9}, {
  3.641899199703923*^9, 3.641899199926008*^9}}],

Cell[BoxData[
 RowBox[{"2", "-", 
  RowBox[{"Sin", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{3.641898837266555*^9, 3.6418992002685833`*^9, 
  3.6419145076031303`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Integrals", "Subsection",
 CellChangeTimes->{{3.641816558765666*^9, 3.641816560141885*^9}}],

Cell["To obtain an indefinite integral, we use", "Text",
 CellChangeTimes->{{3.641898893202366*^9, 3.641898906800709*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"2", "x"}], "+", 
    RowBox[{"Cos", "[", "x", "]"}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.6418989089459333`*^9, 3.641898917842024*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["x", "2"], "+", 
  RowBox[{"Sin", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{3.641898918257678*^9, 3.641914526573719*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"myFunc2", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.6418989251377497`*^9, 3.641898934577775*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox["x", "3"], " ", "\[Alpha]"}], "3"], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["x", "2"], " ", "\[Beta]"}], "2"], "+", 
  RowBox[{"x", " ", "\[Gamma]"}]}]], "Output",
 CellChangeTimes->{3.6418989349207087`*^9}]
}, Open  ]],

Cell["\<\
For a definite integral, we have to give the boundaries of integration:\
\>", "Text",
 CellChangeTimes->{{3.6418989517279863`*^9, 3.6418989664878273`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"2", "x"}], "+", 
    RowBox[{"Cos", "[", "x", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6418989089459333`*^9, 3.641898917842024*^9}, {
  3.641898974297544*^9, 3.6418989797204857`*^9}}],

Cell[BoxData[
 SuperscriptBox["\[Pi]", "2"]], "Output",
 CellChangeTimes->{3.641898918257678*^9, 3.6418989802075567`*^9, 
  3.6419145417454*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"myFunc2", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6418989089459333`*^9, 3.641898917842024*^9}, {
  3.641898974297544*^9, 3.641899000488822*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"375", " ", "\[Alpha]"}], "-", 
  FractionBox[
   RowBox[{"75", " ", "\[Beta]"}], "2"], "+", 
  RowBox[{"15", " ", "\[Gamma]"}]}]], "Output",
 CellChangeTimes->{3.641899000876239*^9}]
}, Open  ]],

Cell["Numerical integration is done using \[OpenCurlyDoubleQuote]NIntegrate\
\[CloseCurlyDoubleQuote]:", "Text",
 CellChangeTimes->{{3.641899036656066*^9, 3.641899044134818*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{"Sin", "[", 
    RowBox[{"Sin", "[", "x", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.641899047039816*^9, 3.641899058831848*^9}}],

Cell[BoxData["1.2470560582440042`"], "Output",
 CellChangeTimes->{3.641899059323551*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Linear algebra", "Section",
 CellChangeTimes->{{3.6418159924814034`*^9, 3.641815995017321*^9}}],

Cell[CellGroupData[{

Cell["Writing vectors and matrices", "Subsection",
 CellChangeTimes->{{3.6418996348554077`*^9, 3.6418996399978456`*^9}}],

Cell[TextData[{
 "As mentioned above, the universal data structure used by ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " are (nested) lists. A vector is therefore represented as a one-dimensional \
list; a matrix as a nested list of depth 2, i.e. with two levels."
}], "Text",
 CellChangeTimes->{{3.64189907508757*^9, 3.641899133709399*^9}, {
  3.642421102366692*^9, 3.642421109611044*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "p", "]"}]], "Input",
 CellChangeTimes->{{3.6419145984653473`*^9, 3.641914609057789*^9}}],

Cell[BoxData[
 RowBox[{"myVec1", ":=", 
  RowBox[{"{", 
   RowBox[{"v1", ",", "v2", ",", "v3"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6418991354863462`*^9, 3.6418991552327023`*^9}}],

Cell[BoxData[{
 RowBox[{"myMat1", ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"d", ",", "e", ",", "f"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"g", ",", "h", ",", "i"}], "}"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"myMat2", ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"p", ",", "q"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "s"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "u"}], "}"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.641899157390176*^9, 3.641899179006448*^9}, {
  3.6418992854055758`*^9, 3.641899311348275*^9}}],

Cell[CellGroupData[{

Cell[BoxData["myVec1"], "Input",
 CellChangeTimes->{{3.64189921820507*^9, 3.6418992200771227`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"v1", ",", "v2", ",", "v3"}], "}"}]], "Output",
 CellChangeTimes->{3.641899220456377*^9, 3.641914571340555*^9}]
}, Open  ]],

Cell["\<\
Again, we can use \[OpenCurlyDoubleQuote]MatrixForm\[CloseCurlyDoubleQuote] \
or \[OpenCurlyDoubleQuote]TableForm\[CloseCurlyDoubleQuote] to obtain a more \
userfriendly display of nested lists:\
\>", "Text",
 CellChangeTimes->{{3.642421120680114*^9, 3.6424211714186563`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myVec1", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.641899223735462*^9, 3.641899231397121*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"v1"},
      {"v2"},
      {"v3"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6418992318991003`*^9, 3.641914573714136*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myMat1", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.6418992347685204`*^9, 3.641899240220827*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"a", "b", "c"},
     {"d", "e", "f"},
     {"g", "h", "i"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.641899240533763*^9, {3.641914585271358*^9, 3.641914615001747*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", "myMat1", "]"}]], "Input",
 CellChangeTimes->{{3.642421182380022*^9, 3.6424211966677*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"a", "b", "c"},
    {"d", "e", "f"},
    {"g", "h", "i"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6424211865969057`*^9, 3.64242119718557*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Matrix operations", "Subsection",
 CellChangeTimes->{{3.641816566101836*^9, 3.641816568837689*^9}}],

Cell["We multiply matrices or vectors using \[OpenCurlyDoubleQuote].\
\[CloseCurlyDoubleQuote]:", "Text",
 CellChangeTimes->{{3.6418992630848*^9, 3.64189927621111*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myMat1", ".", "myMat2"}]], "Input",
 CellChangeTimes->{{3.641899315428974*^9, 3.641899319547586*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"a", " ", "p"}], "+", 
      RowBox[{"b", " ", "r"}], "+", 
      RowBox[{"c", " ", "t"}]}], ",", 
     RowBox[{
      RowBox[{"a", " ", "q"}], "+", 
      RowBox[{"b", " ", "s"}], "+", 
      RowBox[{"c", " ", "u"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"d", " ", "p"}], "+", 
      RowBox[{"e", " ", "r"}], "+", 
      RowBox[{"f", " ", "t"}]}], ",", 
     RowBox[{
      RowBox[{"d", " ", "q"}], "+", 
      RowBox[{"e", " ", "s"}], "+", 
      RowBox[{"f", " ", "u"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"g", " ", "p"}], "+", 
      RowBox[{"h", " ", "r"}], "+", 
      RowBox[{"i", " ", "t"}]}], ",", 
     RowBox[{
      RowBox[{"g", " ", "q"}], "+", 
      RowBox[{"h", " ", "s"}], "+", 
      RowBox[{"i", " ", "u"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6418993199809017`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.641899325567317*^9, 3.641899332067415*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"a", " ", "p"}], "+", 
       RowBox[{"b", " ", "r"}], "+", 
       RowBox[{"c", " ", "t"}]}], 
      RowBox[{
       RowBox[{"a", " ", "q"}], "+", 
       RowBox[{"b", " ", "s"}], "+", 
       RowBox[{"c", " ", "u"}]}]},
     {
      RowBox[{
       RowBox[{"d", " ", "p"}], "+", 
       RowBox[{"e", " ", "r"}], "+", 
       RowBox[{"f", " ", "t"}]}], 
      RowBox[{
       RowBox[{"d", " ", "q"}], "+", 
       RowBox[{"e", " ", "s"}], "+", 
       RowBox[{"f", " ", "u"}]}]},
     {
      RowBox[{
       RowBox[{"g", " ", "p"}], "+", 
       RowBox[{"h", " ", "r"}], "+", 
       RowBox[{"i", " ", "t"}]}], 
      RowBox[{
       RowBox[{"g", " ", "q"}], "+", 
       RowBox[{"h", " ", "s"}], "+", 
       RowBox[{"i", " ", "u"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.641899332345181*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myVec1", ".", "myMat1"}]], "Input",
 CellChangeTimes->{{3.641899342244913*^9, 3.641899345323195*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"a", " ", "v1"}], "+", 
    RowBox[{"d", " ", "v2"}], "+", 
    RowBox[{"g", " ", "v3"}]}], ",", 
   RowBox[{
    RowBox[{"b", " ", "v1"}], "+", 
    RowBox[{"e", " ", "v2"}], "+", 
    RowBox[{"h", " ", "v3"}]}], ",", 
   RowBox[{
    RowBox[{"c", " ", "v1"}], "+", 
    RowBox[{"f", " ", "v2"}], "+", 
    RowBox[{"i", " ", "v3"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.641899345767949*^9}]
}, Open  ]],

Cell[TextData[{
 "The operators \[OpenCurlyDoubleQuote]+\[OpenCurlyDoubleQuote], \
\[OpenCurlyDoubleQuote]-\[OpenCurlyDoubleQuote], and \
\[OpenCurlyDoubleQuote]",
 Cell[BoxData[
  FormBox["^", TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\[CloseCurlyDoubleQuote] work element-wise:"
}], "Text",
 CellChangeTimes->{{3.641899374283154*^9, 3.64189939855331*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myMat1", "+", "3"}]], "Input",
 CellChangeTimes->{{3.641899401858392*^9, 3.6418994068039837`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"3", "+", "a"}], ",", 
     RowBox[{"3", "+", "b"}], ",", 
     RowBox[{"3", "+", "c"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"3", "+", "d"}], ",", 
     RowBox[{"3", "+", "e"}], ",", 
     RowBox[{"3", "+", "f"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"3", "+", "g"}], ",", 
     RowBox[{"3", "+", "h"}], ",", 
     RowBox[{"3", "+", "i"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.641899407179372*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myMat2", "+", "myVec1"}]], "Input",
 CellChangeTimes->{{3.6418994107849283`*^9, 3.641899417018381*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"p", "+", "v1"}], ",", 
     RowBox[{"q", "+", "v1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r", "+", "v2"}], ",", 
     RowBox[{"s", "+", "v2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"t", "+", "v3"}], ",", 
     RowBox[{"u", "+", "v3"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.641899417381591*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Determinant, inverse, transpose, trace", "Subsection",
 CellChangeTimes->{{3.641816572349929*^9, 3.641816573613901*^9}, {
  3.641899451979122*^9, 3.641899493695978*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Det", "[", "myMat1", "]"}]], "Input",
 CellChangeTimes->{{3.641899480633212*^9, 3.641899483881317*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "c"}], " ", "e", " ", "g"}], "+", 
  RowBox[{"b", " ", "f", " ", "g"}], "+", 
  RowBox[{"c", " ", "d", " ", "h"}], "-", 
  RowBox[{"a", " ", "f", " ", "h"}], "-", 
  RowBox[{"b", " ", "d", " ", "i"}], "+", 
  RowBox[{"a", " ", "e", " ", "i"}]}]], "Output",
 CellChangeTimes->{3.641899484322946*^9, 3.641914649361842*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Inverse", "[", "myMat1", "]"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.641899496336935*^9, 3.641899506409198*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"f", " ", "h"}], "-", 
       RowBox[{"e", " ", "i"}]}], 
      RowBox[{
       RowBox[{"c", " ", "e", " ", "g"}], "-", 
       RowBox[{"b", " ", "f", " ", "g"}], "-", 
       RowBox[{"c", " ", "d", " ", "h"}], "+", 
       RowBox[{"a", " ", "f", " ", "h"}], "+", 
       RowBox[{"b", " ", "d", " ", "i"}], "-", 
       RowBox[{"a", " ", "e", " ", "i"}]}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"c", " ", "h"}], "-", 
       RowBox[{"b", " ", "i"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "c"}], " ", "e", " ", "g"}], "+", 
       RowBox[{"b", " ", "f", " ", "g"}], "+", 
       RowBox[{"c", " ", "d", " ", "h"}], "-", 
       RowBox[{"a", " ", "f", " ", "h"}], "-", 
       RowBox[{"b", " ", "d", " ", "i"}], "+", 
       RowBox[{"a", " ", "e", " ", "i"}]}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"c", " ", "e"}], "-", 
       RowBox[{"b", " ", "f"}]}], 
      RowBox[{
       RowBox[{"c", " ", "e", " ", "g"}], "-", 
       RowBox[{"b", " ", "f", " ", "g"}], "-", 
       RowBox[{"c", " ", "d", " ", "h"}], "+", 
       RowBox[{"a", " ", "f", " ", "h"}], "+", 
       RowBox[{"b", " ", "d", " ", "i"}], "-", 
       RowBox[{"a", " ", "e", " ", "i"}]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"f", " ", "g"}], "-", 
       RowBox[{"d", " ", "i"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "c"}], " ", "e", " ", "g"}], "+", 
       RowBox[{"b", " ", "f", " ", "g"}], "+", 
       RowBox[{"c", " ", "d", " ", "h"}], "-", 
       RowBox[{"a", " ", "f", " ", "h"}], "-", 
       RowBox[{"b", " ", "d", " ", "i"}], "+", 
       RowBox[{"a", " ", "e", " ", "i"}]}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"c", " ", "g"}], "-", 
       RowBox[{"a", " ", "i"}]}], 
      RowBox[{
       RowBox[{"c", " ", "e", " ", "g"}], "-", 
       RowBox[{"b", " ", "f", " ", "g"}], "-", 
       RowBox[{"c", " ", "d", " ", "h"}], "+", 
       RowBox[{"a", " ", "f", " ", "h"}], "+", 
       RowBox[{"b", " ", "d", " ", "i"}], "-", 
       RowBox[{"a", " ", "e", " ", "i"}]}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"c", " ", "d"}], "-", 
       RowBox[{"a", " ", "f"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "c"}], " ", "e", " ", "g"}], "+", 
       RowBox[{"b", " ", "f", " ", "g"}], "+", 
       RowBox[{"c", " ", "d", " ", "h"}], "-", 
       RowBox[{"a", " ", "f", " ", "h"}], "-", 
       RowBox[{"b", " ", "d", " ", "i"}], "+", 
       RowBox[{"a", " ", "e", " ", "i"}]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"e", " ", "g"}], "-", 
       RowBox[{"d", " ", "h"}]}], 
      RowBox[{
       RowBox[{"c", " ", "e", " ", "g"}], "-", 
       RowBox[{"b", " ", "f", " ", "g"}], "-", 
       RowBox[{"c", " ", "d", " ", "h"}], "+", 
       RowBox[{"a", " ", "f", " ", "h"}], "+", 
       RowBox[{"b", " ", "d", " ", "i"}], "-", 
       RowBox[{"a", " ", "e", " ", "i"}]}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"b", " ", "g"}], "-", 
       RowBox[{"a", " ", "h"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "c"}], " ", "e", " ", "g"}], "+", 
       RowBox[{"b", " ", "f", " ", "g"}], "+", 
       RowBox[{"c", " ", "d", " ", "h"}], "-", 
       RowBox[{"a", " ", "f", " ", "h"}], "-", 
       RowBox[{"b", " ", "d", " ", "i"}], "+", 
       RowBox[{"a", " ", "e", " ", "i"}]}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"b", " ", "d"}], "-", 
       RowBox[{"a", " ", "e"}]}], 
      RowBox[{
       RowBox[{"c", " ", "e", " ", "g"}], "-", 
       RowBox[{"b", " ", "f", " ", "g"}], "-", 
       RowBox[{"c", " ", "d", " ", "h"}], "+", 
       RowBox[{"a", " ", "f", " ", "h"}], "+", 
       RowBox[{"b", " ", "d", " ", "i"}], "-", 
       RowBox[{"a", " ", "e", " ", "i"}]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.641899499793386*^9, 3.641899506738902*^9}, 
   3.6419146527780933`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Transpose", "[", "myMat1", "]"}]], "Input",
 CellChangeTimes->{{3.64189951001858*^9, 3.641899514080805*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "d", ",", "g"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "e", ",", "h"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", "f", ",", "i"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.641899514530527*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tr", "[", "myMat1", "]"}]], "Input",
 CellChangeTimes->{{3.641899519094322*^9, 3.641899521936816*^9}}],

Cell[BoxData[
 RowBox[{"a", "+", "e", "+", "i"}]], "Output",
 CellChangeTimes->{3.641899522365409*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Eigenvalues and eigenvectors", "Subsection",
 CellChangeTimes->{{3.641899534449938*^9, 3.641899545159157*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigenvalues", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"c", ",", "d"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.6418995470722647`*^9, 3.64189958315236*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"a", "+", "d", "-", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["a", "2"], "+", 
        RowBox[{"4", " ", "b", " ", "c"}], "-", 
        RowBox[{"2", " ", "a", " ", "d"}], "+", 
        SuperscriptBox["d", "2"]}]]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"a", "+", "d", "+", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["a", "2"], "+", 
        RowBox[{"4", " ", "b", " ", "c"}], "-", 
        RowBox[{"2", " ", "a", " ", "d"}], "+", 
        SuperscriptBox["d", "2"]}]]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6418995515931597`*^9, 3.641899583830598*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigenvectors", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"c", ",", "d"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.6418995874317923`*^9, 3.6418996014345284`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "a"}], "+", "d", "+", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          RowBox[{"4", " ", "b", " ", "c"}], "-", 
          RowBox[{"2", " ", "a", " ", "d"}], "+", 
          SuperscriptBox["d", "2"]}]]}], 
       RowBox[{"2", " ", "c"}]]}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "a"}], "+", "d", "-", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          RowBox[{"4", " ", "b", " ", "c"}], "-", 
          RowBox[{"2", " ", "a", " ", "d"}], "+", 
          SuperscriptBox["d", "2"]}]]}], 
       RowBox[{"2", " ", "c"}]]}], ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.641899601885663*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example: Analysis of a simple non-linear SI model", "Section",
 CellChangeTimes->{{3.641815999209346*^9, 3.641816015249156*^9}}],

Cell[TextData[{
 "Let us consider a simple model of disease with two categories of host \
individuals: infected ones and those susceptible to the disease. Let the \
number of infected and susceptible individuals at time ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]]],
 " be ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Y", "(", "t", ")"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"S", "(", "t", ")"}], TraditionalForm]]],
 ", respectively. We assume that the population of susceptible hosts is \
replenished by immigration at a total rate \[Theta], and that recovered \
individuals immediately become susceptible again, i.e. there is no class of \
immune or resistant hosts. Further, denote the transition rate of the disease \
by \[Beta]. Recall that under the mass-action principle the transition rate \
is given by the product of the rate of contact, ",
 Cell[BoxData[
  FormBox["c", TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", between susceptible and infected hosts times the probability of \
transmission conditional on a contact, ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", i.e. ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Beta]", "=", 
    RowBox[{"c", " ", "a"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". Last, let ",
 Cell[BoxData[
  FormBox["d", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " be the per capita background mortality rate of the host, ",
 Cell[BoxData[
  FormBox["\[Nu]", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " the additional mortality caused by infection, and ",
 Cell[BoxData[
  FormBox["\[Gamma]", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " the rate of clearance of the disease through defense mechanisms of the \
host."
}], "Text",
 CellChangeTimes->{{3.6418160182492113`*^9, 3.6418161073126802`*^9}, 
   3.641816464761944*^9, {3.642421224298235*^9, 3.6424212288981*^9}, {
   3.642421282179263*^9, 3.6424214190646257`*^9}, {3.642421455112274*^9, 
   3.6424217058705797`*^9}, {3.642422481821913*^9, 3.642422481821952*^9}}],

Cell[CellGroupData[{

Cell["Writing the differential equations", "Subsection",
 CellChangeTimes->{{3.641816593535152*^9, 3.641816626357131*^9}, {
  3.642421860590612*^9, 3.642421869409833*^9}}],

Cell["\<\
The model can then be described in continuous time by the following pair of \
differential equations :\
\>", "Text",
 CellChangeTimes->{{3.642421714430984*^9, 3.6424217470532923`*^9}, {
  3.642421860595797*^9, 3.642421869410346*^9}, {3.642421903581764*^9, 
  3.6424219050275908`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"\t", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"\[DifferentialD]", "S"}], 
      RowBox[{"\[DifferentialD]", "t"}]], "=", 
     RowBox[{"\[Theta]", "-", 
      RowBox[{"d", " ", "S"}], "-", 
      RowBox[{"\[Beta]", " ", "S", " ", "Y"}], "+", 
      RowBox[{"\[Gamma]", " ", "Y"}]}]}], ",", "\[IndentingNewLine]", "\t", 
    RowBox[{
     FractionBox[
      RowBox[{"\[DifferentialD]", "Y"}], 
      RowBox[{"\[DifferentialD]", "t"}]], "=", 
     RowBox[{
      RowBox[{"\[Beta]", " ", "S", " ", "Y"}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"d", "+", "\[Nu]", "+", "\[Gamma]"}], ")"}], 
       RowBox[{"Y", "."}]}]}]}]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.642421759171811*^9, 3.642421854967814*^9}, {
  3.642422491703821*^9, 3.6424225017837954`*^9}, {3.642422578782805*^9, 
  3.642422579022265*^9}}],

Cell[TextData[{
 "Implementing these equations in ",
 StyleBox["Mathematica ",
  FontSlant->"Italic"],
 "(choosing to call the differential of variable ",
 Cell[BoxData[
  FormBox["X", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " \[OpenCurlyDoubleQuote]XDot\[CloseCurlyDoubleQuote]):"
}], "Text",
 CellChangeTimes->{{3.642422328760515*^9, 3.642422397174938*^9}}],

Cell[BoxData[{
 RowBox[{"SDot", ":=", 
  RowBox[{"\[Theta]", "-", 
   RowBox[{"d", " ", "S"}], "-", 
   RowBox[{"\[Beta]", " ", "S", " ", "Y"}], "-", 
   RowBox[{"\[Beta]", " ", "S", " ", "Y"}], " ", "+", " ", 
   RowBox[{"\[Gamma]", " ", "Y"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"YDot", ":=", 
  RowBox[{
   RowBox[{"\[Beta]", " ", "S", " ", "Y"}], "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"d", "+", "\[Nu]", "+", "\[Gamma]"}], ")"}], "Y"}]}]}]}], "Input",\

 CellChangeTimes->{{3.642422343368782*^9, 3.6424223451845293`*^9}, {
  3.6424223996484327`*^9, 3.642422468799728*^9}, {3.642422541504588*^9, 
  3.642422595302454*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Finding the equilibria", "Subsection",
 CellChangeTimes->{{3.641816581957612*^9, 3.6418165850377007`*^9}}],

Cell[TextData[{
 "To identify the equilibria ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     StyleBox[
      OverscriptBox["S", "^"],
      FontSlant->"Italic"], ",", " ", 
     StyleBox[
      OverscriptBox["Y", "^"],
      FontSlant->"Italic"]}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " of the model, we set ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"\[DifferentialD]", "S"}], "/", 
     RowBox[{"\[DifferentialD]", "t"}]}], "=", "0"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"\[DifferentialD]", "Y"}], "/", 
     RowBox[{"\[DifferentialD]", "t"}]}], "=", "0"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". This yields the two equilibrium conditions that must be jointly satisfied:"
}], "Text",
 CellChangeTimes->{{3.642421927773085*^9, 3.6424220402984133`*^9}, {
  3.6424225074186707`*^9, 3.6424225137625303`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"\t", 
   RowBox[{
    RowBox[{"0", "=", 
     RowBox[{"\[Theta]", "-", 
      RowBox[{"d", " ", 
       StyleBox[
        OverscriptBox["S", "^"],
        FontSlant->"Italic"]}], "-", 
      RowBox[{"\[Beta]", " ", 
       StyleBox[
        OverscriptBox["S", "^"],
        FontSlant->"Italic"], 
       StyleBox[" ",
        FontSlant->"Italic"], 
       StyleBox[
        OverscriptBox["Y", "^"],
        FontSlant->"Italic"]}], "+", 
      RowBox[{"\[Gamma]", " ", 
       StyleBox[
        OverscriptBox["Y", "^"],
        FontSlant->"Italic"]}]}]}], ",", "\[IndentingNewLine]", "\t", 
    RowBox[{"0", "=", 
     RowBox[{
      RowBox[{"\[Beta]", "  ", 
       StyleBox[
        RowBox[{
         OverscriptBox["S", "^"], " ", 
         OverscriptBox["Y", "^"]}],
        FontSlant->"Italic"]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"d", "+", "\[Nu]", "+", "\[Gamma]"}], ")"}], 
       RowBox[{
        StyleBox[
         OverscriptBox["Y", "^"],
         FontSlant->"Italic"], "."}]}]}]}]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.642421759171811*^9, 3.642421854967814*^9}, {
  3.642422062151713*^9, 3.6424221224213333`*^9}, {3.642422522575206*^9, 
  3.642422534239263*^9}}],

Cell["\<\
In contrast to linear multivariable models, there can now be multiple \
equilibria for non-linear models. We wish to identify all of them. In \
practice, this can be a challenging, sometimes impossible talk, as not all \
solutions to Eq. (2) might be found explicitly. In the case of our example, \
the solutions can be found by hand by factoring the equations in (2) and \
looking for values of the variables that make any of the factors equal to 0.\
\>", "Text",
 CellChangeTimes->{{3.642422134169284*^9, 3.642422201576989*^9}, {
  3.64242224679251*^9, 3.6424223017359657`*^9}}],

Cell[TextData[{
 "Here, we will use ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to find the solutions and simplify these:"
}], "Text",
 CellChangeTimes->{{3.642422305319577*^9, 3.642422316335596*^9}, {
  3.6424226946379538`*^9, 3.6424226983561363`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solEq1", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"SDot", "\[Equal]", "0"}], ",", 
       RowBox[{"YDot", "\[Equal]", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"S", ",", "Y"}], "}"}]}], "]"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.642422320272702*^9, 3.642422321109951*^9}, {
  3.642422601319697*^9, 3.642422702077211*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"S", "\[Rule]", 
      FractionBox[
       RowBox[{"d", "+", "\[Gamma]", "+", "\[Nu]"}], "\[Beta]"]}], ",", 
     RowBox[{"Y", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"\[Beta]", " ", "\[Theta]"}], "-", 
        RowBox[{"d", " ", 
         RowBox[{"(", 
          RowBox[{"d", "+", "\[Gamma]", "+", "\[Nu]"}], ")"}]}]}], 
       RowBox[{"\[Beta]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "d"}], "+", "\[Gamma]", "+", 
          RowBox[{"2", " ", "\[Nu]"}]}], ")"}]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"S", "\[Rule]", 
      FractionBox["\[Theta]", "d"]}], ",", 
     RowBox[{"Y", "\[Rule]", "0"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.642422610890937*^9, 3.642422632504216*^9}, {
  3.642422670436783*^9, 3.6424227024640217`*^9}}]
}, Open  ]],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " returns the solutions in the form of \[OpenCurlyDoubleQuote]rules\
\[CloseCurlyDoubleQuote]. The second solution ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      OverscriptBox["S", "^"], "=", 
      RowBox[{"\[Theta]", "/", "d"}]}], ",", " ", 
     RowBox[{
      OverscriptBox["Y", "^"], "=", "0"}]}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " corresponds to the case where the disease is absent. The first solution \
represents the so-called \[OpenCurlyDoubleQuote]endemic equilibrium\
\[CloseCurlyDoubleQuote] where the disease is present."
}], "Text",
 CellChangeTimes->{{3.642422730172852*^9, 3.642422851362606*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Assessing stability", "Subsection",
 CellChangeTimes->{{3.641816602958983*^9, 3.6418166079173307`*^9}}],

Cell["\<\
TODO: Proceed on p. 299 of the book (starting with the box in the margin).\
\>", "Text",
 CellChangeTimes->{{3.642422900619588*^9, 3.64242292141006*^9}}]
}, Open  ]],

Cell["", "Subsection"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1250, 1254},
WindowMargins->{{546, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 4, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info3641792850-4929365"->{
  Cell[7257, 195, 464, 11, 42, "Print",
   CellTags->"Info3641792850-4929365"]},
 "Info3641792854-4929365"->{
  Cell[8055, 222, 464, 11, 42, "Print",
   CellTags->"Info3641792854-4929365"],
  Cell[8522, 235, 519, 15, 22, "Print",
   CellTags->"Info3641792854-4929365"]},
 "Info3641793259-6651854"->{
  Cell[22992, 733, 828, 16, 112, "Print",
   CellTags->"Info3641793259-6651854"]},
 "Info3641793242-6379980"->{
  Cell[24747, 783, 1374, 23, 172, "Print",
   CellTags->"Info3641793242-6379980"]},
 "Info3642395495-6639012"->{
  Cell[115691, 3532, 126, 2, 40, "Print",
   CellTags->"Info3642395495-6639012"],
  Cell[115820, 3536, 893, 25, 30, "Print",
   CellTags->"Info3642395495-6639012"]},
 "Info3642395777-6639012"->{
  Cell[387402, 8789, 907, 17, 58, "Print",
   CellTags->"Info3642395777-6639012"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info3641792850-4929365", 440217, 10486},
 {"Info3641792854-4929365", 440327, 10489},
 {"Info3641793259-6651854", 440517, 10494},
 {"Info3641793242-6379980", 440629, 10497},
 {"Info3642395495-6639012", 440742, 10500},
 {"Info3642395777-6639012", 440937, 10505}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 171, 5, 92, "Title"],
Cell[754, 29, 507, 12, 49, "Text"],
Cell[CellGroupData[{
Cell[1286, 45, 96, 1, 64, "Section"],
Cell[1385, 48, 530, 14, 136, "Text"],
Cell[1918, 64, 320, 6, 98, "Text"],
Cell[2241, 72, 239, 5, 60, "Text"],
Cell[2483, 79, 586, 9, 136, "Text"],
Cell[3072, 90, 691, 20, 101, "Text"],
Cell[3766, 112, 351, 6, 136, "Text"],
Cell[4120, 120, 900, 14, 212, "Text"],
Cell[5023, 136, 776, 15, 212, "Text"],
Cell[5802, 153, 466, 8, 98, "Text"],
Cell[6271, 163, 246, 4, 98, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[6554, 172, 91, 1, 50, "Section"],
Cell[CellGroupData[{
Cell[6670, 177, 101, 1, 44, "Subsection"],
Cell[6774, 180, 342, 7, 30, "Text"],
Cell[CellGroupData[{
Cell[7141, 191, 113, 2, 28, "Input"],
Cell[7257, 195, 464, 11, 42, "Print",
 CellTags->"Info3641792850-4929365"]
}, Open  ]],
Cell[7736, 209, 156, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[7917, 216, 113, 2, 28, "Input"],
Cell[CellGroupData[{
Cell[8055, 222, 464, 11, 42, "Print",
 CellTags->"Info3641792854-4929365"],
Cell[8522, 235, 519, 15, 22, "Print",
 CellTags->"Info3641792854-4929365"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[9102, 257, 115, 1, 44, "Subsection"],
Cell[9220, 260, 342, 6, 136, "Text"],
Cell[9565, 268, 673, 13, 174, "Text"],
Cell[10241, 283, 210, 3, 60, "Text"],
Cell[CellGroupData[{
Cell[10476, 290, 313, 7, 90, "Input"],
Cell[10792, 299, 70, 1, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10899, 305, 373, 9, 90, "Input"],
Cell[11275, 316, 72, 1, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11384, 322, 276, 7, 90, "Input"],
Cell[11663, 331, 73, 1, 56, "Output"]
}, Open  ]],
Cell[11751, 335, 206, 4, 56, "Input"],
Cell[CellGroupData[{
Cell[11982, 343, 68, 1, 56, "Input"],
Cell[12053, 346, 69, 1, 56, "Output"]
}, Open  ]],
Cell[12137, 350, 209, 3, 60, "Text"],
Cell[CellGroupData[{
Cell[12371, 357, 313, 7, 90, "Input"],
Cell[12687, 366, 92, 1, 56, "Output"]
}, Open  ]],
Cell[12794, 370, 513, 12, 90, "Input"],
Cell[CellGroupData[{
Cell[13332, 386, 276, 7, 90, "Input"],
Cell[13611, 395, 120, 2, 56, "Output"]
}, Open  ]],
Cell[13746, 400, 541, 12, 90, "Input"],
Cell[CellGroupData[{
Cell[14312, 416, 90, 1, 56, "Input"],
Cell[14405, 419, 92, 1, 56, "Output"]
}, Open  ]],
Cell[14512, 423, 223, 4, 60, "Text"],
Cell[CellGroupData[{
Cell[14760, 431, 71, 1, 56, "Input"],
Cell[14834, 434, 73, 1, 136, "Output"]
}, Open  ]],
Cell[14922, 438, 159, 3, 56, "Input"],
Cell[CellGroupData[{
Cell[15106, 445, 93, 1, 56, "Input"],
Cell[15202, 448, 70, 1, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15309, 454, 69, 1, 56, "Input"],
Cell[15381, 457, 70, 1, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15488, 463, 69, 1, 56, "Input"],
Cell[15560, 466, 70, 1, 56, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[15679, 473, 106, 1, 36, "Subsection"],
Cell[15788, 476, 201, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[16014, 484, 114, 2, 28, "Input"],
Cell[16131, 488, 116, 2, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16284, 495, 115, 2, 28, "Input"],
Cell[16402, 499, 120, 2, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16559, 506, 119, 2, 28, "Input"],
Cell[16681, 510, 97, 1, 28, "Output"]
}, Open  ]],
Cell[16793, 514, 530, 12, 50, "Text"],
Cell[17326, 528, 119, 2, 28, "Input"],
Cell[CellGroupData[{
Cell[17470, 534, 114, 2, 28, "Input"],
Cell[17587, 538, 92, 2, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17716, 545, 115, 2, 28, "Input"],
Cell[17834, 549, 118, 2, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17989, 556, 171, 4, 28, "Input"],
Cell[18163, 562, 113, 3, 45, "Output"]
}, Open  ]],
Cell[18291, 568, 91, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[18407, 573, 115, 2, 28, "Input"],
Cell[18525, 577, 93, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18655, 584, 115, 2, 32, "Input"],
Cell[18773, 588, 93, 2, 32, "Output"]
}, Open  ]],
Cell[18881, 593, 88, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[18994, 598, 123, 2, 28, "Input"],
Cell[19120, 602, 69, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19226, 608, 136, 3, 41, "Input"],
Cell[19365, 613, 121, 2, 28, "Output"]
}, Open  ]],
Cell[19501, 618, 93, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[19619, 623, 124, 2, 28, "Input"],
Cell[19746, 627, 107, 2, 31, "Output"]
}, Open  ]],
Cell[19868, 632, 110, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[20003, 637, 198, 5, 32, "Input"],
Cell[20204, 644, 154, 4, 32, "Output"]
}, Open  ]],
Cell[20373, 651, 942, 15, 69, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21352, 671, 116, 1, 44, "Subsection"],
Cell[21471, 674, 104, 1, 60, "Text"],
Cell[CellGroupData[{
Cell[21600, 679, 288, 9, 56, "Input"],
Cell[21891, 690, 206, 6, 56, "Output"]
}, Open  ]],
Cell[22112, 699, 209, 4, 60, "Text"],
Cell[CellGroupData[{
Cell[22346, 707, 284, 9, 56, "Input"],
Cell[22633, 718, 204, 6, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22874, 729, 115, 2, 56, "Input"],
Cell[22992, 733, 828, 16, 112, "Print",
 CellTags->"Info3641793259-6651854"]
}, Open  ]],
Cell[23835, 752, 108, 1, 60, "Text"],
Cell[CellGroupData[{
Cell[23968, 757, 352, 9, 66, "Input"],
Cell[24323, 768, 267, 6, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24627, 779, 117, 2, 56, "Input"],
Cell[24747, 783, 1374, 23, 172, "Print",
 CellTags->"Info3641793242-6379980"]
}, Open  ]],
Cell[26136, 809, 154, 2, 60, "Text"],
Cell[CellGroupData[{
Cell[26315, 815, 259, 7, 61, "Input"],
Cell[26577, 824, 250, 7, 139, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26864, 836, 130, 2, 56, "Input"],
Cell[26997, 840, 233, 7, 88, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27267, 852, 135, 2, 56, "Input"],
Cell[27405, 856, 194, 6, 83, "Output"]
}, Open  ]],
Cell[27614, 865, 234, 3, 60, "Text"],
Cell[CellGroupData[{
Cell[27873, 872, 129, 2, 56, "Input"],
Cell[28005, 876, 233, 7, 88, "Output"]
}, Open  ]],
Cell[28253, 886, 341, 6, 60, "Text"],
Cell[CellGroupData[{
Cell[28619, 896, 426, 12, 56, "Input"],
Cell[29048, 910, 301, 9, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29386, 924, 203, 4, 56, "Input"],
Cell[29592, 930, 306, 9, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29935, 944, 153, 3, 56, "Input"],
Cell[30091, 949, 282, 8, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30410, 962, 206, 5, 56, "Input"],
Cell[30619, 969, 256, 8, 56, "Output"]
}, Open  ]],
Cell[30890, 980, 155, 3, 60, "Text"],
Cell[CellGroupData[{
Cell[31070, 987, 96, 1, 56, "Input"],
Cell[31169, 990, 227, 6, 83, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31433, 1001, 202, 4, 56, "Input"],
Cell[31638, 1007, 92, 1, 56, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[31779, 1014, 103, 1, 36, "Subsection"],
Cell[31885, 1017, 291, 5, 49, "Text"],
Cell[CellGroupData[{
Cell[32201, 1026, 307, 7, 28, "Input"],
Cell[32511, 1035, 252, 6, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32800, 1046, 278, 8, 28, "Input"],
Cell[33081, 1056, 237, 7, 28, "Output"]
}, Open  ]],
Cell[33333, 1066, 209, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[33567, 1074, 217, 5, 28, "Input"],
Cell[33787, 1081, 225, 5, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34049, 1091, 292, 7, 35, "Input"],
Cell[34344, 1100, 445, 12, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34826, 1117, 556, 15, 28, "Input"],
Cell[35385, 1134, 1940, 65, 46, "Output"]
}, Open  ]],
Cell[37340, 1202, 266, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[37631, 1211, 136, 2, 28, "Input"],
Cell[37770, 1215, 12599, 371, 177, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50406, 1591, 141, 2, 28, "Input"],
Cell[50550, 1595, 15778, 421, 187, "Output"]
}, Open  ]],
Cell[66343, 2019, 110, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[66478, 2024, 151, 3, 28, "Input"],
Cell[66632, 2029, 94, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66763, 2035, 151, 3, 28, "Input"],
Cell[66917, 2040, 205, 5, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67159, 2050, 173, 4, 28, "Input"],
Cell[67335, 2056, 137, 3, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67509, 2064, 210, 5, 28, "Input"],
Cell[67722, 2071, 125, 3, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67884, 2079, 159, 3, 28, "Input"],
Cell[68046, 2084, 141, 3, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68224, 2092, 232, 5, 28, "Input"],
Cell[68459, 2099, 72, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68568, 2105, 155, 3, 28, "Input"],
Cell[68726, 2110, 390, 13, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69153, 2128, 227, 5, 28, "Input"],
Cell[69383, 2135, 137, 3, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69557, 2143, 231, 5, 28, "Input"],
Cell[69791, 2150, 439, 14, 28, "Output"]
}, Open  ]],
Cell[70245, 2167, 106, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[70376, 2172, 172, 4, 28, "Input"],
Cell[70551, 2178, 70, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70658, 2184, 216, 6, 28, "Input"],
Cell[70877, 2192, 149, 3, 28, "Output"]
}, Open  ]],
Cell[71041, 2198, 129, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[71195, 2203, 156, 3, 28, "Input"],
Cell[71354, 2208, 138, 3, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71529, 2216, 215, 5, 28, "Input"],
Cell[71747, 2223, 141, 4, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71925, 2232, 280, 7, 46, "Input"],
Cell[72208, 2241, 117, 3, 28, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[72374, 2250, 161, 2, 44, "Subsection"],
Cell[CellGroupData[{
Cell[72560, 2256, 107, 1, 28, "Input"],
Cell[72670, 2259, 215, 7, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72922, 2271, 140, 2, 28, "Input"],
Cell[73065, 2275, 137, 3, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73239, 2283, 105, 1, 28, "Input"],
Cell[73347, 2286, 1867, 63, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75251, 2354, 138, 2, 28, "Input"],
Cell[75392, 2358, 622, 10, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76051, 2373, 101, 1, 28, "Input"],
Cell[76155, 2376, 203, 5, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76395, 2386, 257, 6, 28, "Input"],
Cell[76655, 2394, 224, 5, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76916, 2404, 160, 3, 28, "Input"],
Cell[77079, 2409, 306, 6, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77422, 2420, 237, 6, 28, "Input"],
Cell[77662, 2428, 282, 6, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77981, 2439, 157, 3, 28, "Input"],
Cell[78141, 2444, 393, 13, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78571, 2462, 223, 5, 28, "Input"],
Cell[78797, 2469, 712, 23, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79546, 2497, 216, 5, 28, "Input"],
Cell[79765, 2504, 182, 4, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79984, 2513, 129, 2, 28, "Input"],
Cell[80116, 2517, 160, 4, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80313, 2526, 132, 2, 28, "Input"],
Cell[80448, 2530, 436, 13, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80921, 2548, 130, 2, 28, "Input"],
Cell[81054, 2552, 301, 9, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81392, 2566, 161, 3, 28, "Input"],
Cell[81556, 2571, 292, 9, 28, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[81897, 2586, 115, 1, 44, "Subsection"],
Cell[82015, 2589, 360, 6, 49, "Text"],
Cell[82378, 2597, 169, 2, 30, "Text"],
Cell[82550, 2601, 150, 3, 28, "Input"],
Cell[CellGroupData[{
Cell[82725, 2608, 114, 2, 28, "Input"],
Cell[82842, 2612, 91, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82970, 2618, 69, 1, 28, "Input"],
Cell[83042, 2621, 94, 1, 28, "Output"]
}, Open  ]],
Cell[83151, 2625, 158, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[83334, 2631, 121, 2, 28, "Input"],
Cell[83458, 2635, 70, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83565, 2641, 124, 2, 28, "Input"],
Cell[83692, 2645, 99, 2, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83828, 2652, 223, 6, 28, "Input"],
Cell[84054, 2660, 72, 1, 28, "Output"]
}, Open  ]],
Cell[84141, 2664, 209, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[84375, 2672, 159, 3, 28, "Input"],
Cell[84537, 2677, 92, 1, 28, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[84678, 2684, 121, 1, 44, "Subsection"],
Cell[84802, 2687, 454, 7, 49, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[85305, 2700, 94, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[85424, 2705, 110, 1, 44, "Subsection"],
Cell[85537, 2708, 163, 3, 30, "Text"],
Cell[85703, 2713, 261, 7, 28, "Input",
 InitializationCell->True],
Cell[85967, 2722, 806, 17, 50, "Text"],
Cell[86776, 2741, 123, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[86924, 2746, 159, 3, 28, "Input"],
Cell[87086, 2751, 92, 2, 47, "Output"]
}, Open  ]],
Cell[87193, 2756, 98, 1, 30, "Text"],
Cell[87294, 2759, 309, 8, 32, "Input",
 InitializationCell->True],
Cell[87606, 2769, 417, 11, 32, "Text"],
Cell[CellGroupData[{
Cell[88048, 2784, 125, 2, 28, "Input"],
Cell[88176, 2788, 193, 5, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88406, 2798, 324, 8, 28, "Input"],
Cell[88733, 2808, 149, 4, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[88931, 2818, 100, 1, 44, "Subsection"],
Cell[89034, 2821, 1291, 32, 72, "Text"],
Cell[90328, 2855, 211, 4, 30, "Text"],
Cell[90542, 2861, 1319, 33, 139, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[91886, 2898, 364, 6, 28, "Input"],
Cell[92253, 2906, 232, 3, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92522, 2914, 120, 2, 28, "Input"],
Cell[92645, 2918, 245, 3, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92927, 2926, 317, 5, 28, "Input"],
Cell[93247, 2933, 467, 6, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93751, 2944, 224, 4, 28, "Input"],
Cell[93978, 2950, 651, 18, 50, "Output"]
}, Open  ]],
Cell[94644, 2971, 549, 12, 50, "Text"],
Cell[CellGroupData[{
Cell[95218, 2987, 350, 8, 28, "Input"],
Cell[95571, 2997, 209, 3, 28, "Output"]
}, Open  ]],
Cell[95795, 3003, 181, 4, 30, "Text"],
Cell[95979, 3009, 1936, 63, 157, "Input"],
Cell[CellGroupData[{
Cell[97940, 3076, 171, 3, 28, "Input"],
Cell[98114, 3081, 185, 2, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98336, 3088, 123, 2, 28, "Input"],
Cell[98462, 3092, 164, 2, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98663, 3099, 121, 2, 28, "Input"],
Cell[98787, 3103, 140, 2, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98964, 3110, 125, 2, 28, "Input"],
Cell[99092, 3114, 142, 2, 28, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[99283, 3122, 134, 1, 44, "Subsection"],
Cell[99420, 3125, 139, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[99584, 3130, 176, 3, 28, "Input"],
Cell[99763, 3135, 240, 6, 32, "Output"]
}, Open  ]],
Cell[100018, 3144, 270, 8, 31, "Text"],
Cell[CellGroupData[{
Cell[100313, 3156, 241, 6, 28, "Input"],
Cell[100557, 3164, 473, 13, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101067, 3182, 280, 8, 28, "Input"],
Cell[101350, 3192, 128, 3, 28, "Output"]
}, Open  ]],
Cell[101493, 3198, 414, 13, 31, "Text"],
Cell[CellGroupData[{
Cell[101932, 3215, 379, 11, 35, "Input"],
Cell[102314, 3228, 434, 12, 32, "Output"]
}, Open  ]],
Cell[102763, 3243, 200, 7, 31, "Text"],
Cell[CellGroupData[{
Cell[102988, 3254, 379, 11, 35, "Input"],
Cell[103370, 3267, 634, 20, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104041, 3292, 382, 11, 35, "Input"],
Cell[104426, 3305, 493, 15, 32, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[104980, 3327, 93, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[105098, 3332, 118, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[105241, 3337, 324, 8, 28, "Input"],
Cell[105568, 3347, 9945, 174, 229, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[115550, 3526, 116, 2, 62, "Input"],
Cell[CellGroupData[{
Cell[115691, 3532, 126, 2, 40, "Print",
 CellTags->"Info3642395495-6639012"],
Cell[115820, 3536, 893, 25, 30, "Print",
 CellTags->"Info3642395495-6639012"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[116762, 3567, 276, 7, 28, "Input"],
Cell[117041, 3576, 3767, 72, 246, "Output"]
}, Open  ]],
Cell[120823, 3651, 101, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[120949, 3656, 503, 12, 63, "Input"],
Cell[121455, 3670, 10079, 178, 238, "Output"]
}, Open  ]],
Cell[131549, 3851, 124, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[131698, 3856, 657, 16, 80, "Input"],
Cell[132358, 3874, 10043, 177, 236, "Output"]
}, Open  ]],
Cell[142416, 4054, 166, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[142607, 4060, 866, 22, 97, "Input"],
Cell[143476, 4084, 10068, 177, 236, "Output"]
}, Open  ]],
Cell[153559, 4264, 114, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[153698, 4269, 1114, 28, 97, "Input"],
Cell[154815, 4299, 18362, 314, 227, "Output"]
}, Open  ]],
Cell[173192, 4616, 174, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[173391, 4622, 1200, 35, 114, "Input"],
Cell[174594, 4659, 6366, 115, 278, "Output"]
}, Open  ]],
Cell[180975, 4777, 126, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[181126, 4782, 1322, 37, 131, "Input"],
Cell[182451, 4821, 6427, 117, 283, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[188927, 4944, 112, 1, 44, "Subsection"],
Cell[189042, 4947, 173, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[189240, 4955, 375, 10, 28, "Input"],
Cell[189618, 4967, 4121, 107, 97, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[193776, 5079, 139, 2, 28, "Input"],
Cell[193918, 5083, 1627, 37, 239, "Output"]
}, Open  ]],
Cell[195560, 5123, 176, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[195761, 5129, 1014, 23, 114, "Input"],
Cell[196778, 5154, 2100, 49, 246, "Output"]
}, Open  ]],
Cell[198893, 5206, 416, 9, 31, "Text"],
Cell[CellGroupData[{
Cell[199334, 5219, 1242, 29, 131, "Input"],
Cell[200579, 5250, 2102, 47, 241, "Output"]
}, Open  ]],
Cell[202696, 5300, 178, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[202899, 5306, 263, 6, 46, "Input"],
Cell[203165, 5314, 2854, 62, 241, "Output"]
}, Open  ]],
Cell[206034, 5379, 445, 7, 30, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[206516, 5391, 101, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[206642, 5396, 423, 12, 76, "Input"],
Cell[207068, 5410, 70534, 1200, 376, "Output"]
}, Open  ]],
Cell[277617, 6613, 101, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[277743, 6618, 1302, 34, 163, "Input"],
Cell[279048, 6654, 93729, 1704, 397, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[372826, 8364, 132, 2, 44, "Subsection"],
Cell[372961, 8368, 284, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[373270, 8377, 1680, 43, 222, "Input"],
Cell[374953, 8422, 2166, 43, 486, "Output"]
}, Open  ]],
Cell[377134, 8468, 228, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[377387, 8475, 420, 10, 80, "Input"],
Cell[377810, 8487, 1625, 33, 120, "Output"]
}, Open  ]],
Cell[379450, 8523, 472, 11, 49, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[379971, 8540, 96, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[380092, 8545, 135, 1, 44, "Subsection"],
Cell[380230, 8548, 562, 12, 31, "Text"],
Cell[CellGroupData[{
Cell[380817, 8564, 171, 4, 28, "Input"],
Cell[380991, 8570, 172, 4, 28, "Output"]
}, Open  ]],
Cell[381178, 8577, 228, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[381431, 8585, 270, 6, 28, "Input"],
Cell[381704, 8593, 168, 4, 28, "Output"]
}, Open  ]],
Cell[381887, 8600, 204, 5, 28, "Input"],
Cell[CellGroupData[{
Cell[382116, 8609, 99, 1, 28, "Input"],
Cell[382218, 8612, 168, 4, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[382423, 8621, 102, 1, 28, "Input"],
Cell[382528, 8624, 170, 4, 28, "Output"]
}, Open  ]],
Cell[382713, 8631, 268, 7, 31, "Text"],
Cell[CellGroupData[{
Cell[383006, 8642, 234, 7, 28, "Input"],
Cell[383243, 8651, 216, 6, 47, "Output"]
}, Open  ]],
Cell[383474, 8660, 237, 6, 30, "Text"],
Cell[383714, 8668, 151, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[383890, 8675, 154, 3, 28, "Input"],
Cell[384047, 8680, 215, 6, 48, "Output"]
}, Open  ]],
Cell[384277, 8689, 273, 7, 30, "Text"],
Cell[CellGroupData[{
Cell[384575, 8700, 395, 11, 35, "Input"],
Cell[384973, 8713, 369, 11, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[385379, 8729, 315, 8, 35, "Input"],
Cell[385697, 8739, 283, 8, 48, "Output"]
}, Open  ]],
Cell[385995, 8750, 369, 7, 30, "Text"],
Cell[CellGroupData[{
Cell[386389, 8761, 468, 10, 35, "Input"],
Cell[386860, 8773, 385, 7, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[387282, 8785, 117, 2, 28, "Input"],
Cell[387402, 8789, 907, 17, 58, "Print",
 CellTags->"Info3642395777-6639012"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[388358, 8812, 144, 2, 44, "Subsection"],
Cell[388505, 8816, 136, 1, 30, "Text"],
Cell[388644, 8819, 445, 12, 46, "Input"],
Cell[CellGroupData[{
Cell[389114, 8835, 355, 9, 28, "Input"],
Cell[389472, 8846, 504, 15, 48, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[390025, 8867, 104, 1, 44, "Subsection"],
Cell[390132, 8870, 397, 10, 49, "Text"],
Cell[CellGroupData[{
Cell[390554, 8884, 149, 3, 35, "Input"],
Cell[390706, 8889, 107, 3, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[390850, 8897, 299, 8, 35, "Input"],
Cell[391152, 8907, 96, 1, 28, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[391297, 8914, 115, 1, 36, "Subsection"],
Cell[391415, 8917, 293, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[391733, 8925, 269, 7, 28, "Input"],
Cell[392005, 8934, 102, 2, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[392144, 8941, 251, 7, 28, "Input"],
Cell[392398, 8950, 74, 1, 28, "Output"]
}, Open  ]],
Cell[392487, 8954, 235, 6, 30, "Text"],
Cell[CellGroupData[{
Cell[392747, 8964, 297, 10, 35, "Input"],
Cell[393047, 8976, 10569, 298, 500, "Output"]
}, Open  ]],
Cell[403631, 9277, 229, 6, 30, "Text"],
Cell[CellGroupData[{
Cell[403885, 9287, 633, 18, 35, "Input"],
Cell[404521, 9307, 692, 24, 57, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[405274, 9338, 93, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[405392, 9343, 101, 1, 44, "Subsection"],
Cell[405496, 9346, 230, 4, 30, "Text"],
Cell[405729, 9352, 277, 7, 32, "Input"],
Cell[CellGroupData[{
Cell[406031, 9363, 191, 4, 28, "Input"],
Cell[406225, 9369, 194, 5, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[406456, 9379, 225, 5, 28, "Input"],
Cell[406684, 9386, 194, 5, 28, "Output"]
}, Open  ]],
Cell[406893, 9394, 113, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[407031, 9399, 192, 4, 28, "Input"],
Cell[407226, 9405, 169, 4, 28, "Output"]
}, Open  ]],
Cell[407410, 9412, 87, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[407522, 9417, 272, 7, 28, "Input"],
Cell[407797, 9426, 173, 4, 28, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[408019, 9436, 97, 1, 44, "Subsection"],
Cell[408119, 9439, 122, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[408266, 9444, 229, 6, 28, "Input"],
Cell[408498, 9452, 168, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[408703, 9461, 188, 4, 28, "Input"],
Cell[408894, 9467, 289, 9, 50, "Output"]
}, Open  ]],
Cell[409198, 9479, 165, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[409388, 9486, 343, 9, 28, "Input"],
Cell[409734, 9497, 144, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[409915, 9505, 318, 8, 28, "Input"],
Cell[410236, 9515, 217, 6, 47, "Output"]
}, Open  ]],
Cell[410468, 9524, 178, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[410671, 9530, 274, 7, 28, "Input"],
Cell[410948, 9539, 88, 1, 28, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[411097, 9547, 101, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[411223, 9552, 120, 1, 44, "Subsection"],
Cell[411346, 9555, 399, 8, 49, "Text"],
Cell[411748, 9565, 126, 2, 28, "Input"],
Cell[411877, 9569, 185, 4, 28, "Input"],
Cell[412065, 9575, 684, 21, 46, "Input"],
Cell[CellGroupData[{
Cell[412774, 9600, 99, 1, 28, "Input"],
Cell[412876, 9603, 150, 3, 28, "Output"]
}, Open  ]],
Cell[413041, 9609, 286, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[413352, 9618, 130, 2, 28, "Input"],
Cell[413485, 9622, 709, 21, 63, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[414231, 9648, 132, 2, 28, "Input"],
Cell[414366, 9652, 708, 20, 63, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[415111, 9677, 131, 2, 28, "Input"],
Cell[415245, 9681, 632, 18, 74, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[415926, 9705, 105, 1, 44, "Subsection"],
Cell[416034, 9708, 168, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[416227, 9714, 125, 2, 28, "Input"],
Cell[416355, 9718, 976, 33, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[417368, 9756, 125, 2, 28, "Input"],
Cell[417496, 9760, 1370, 43, 63, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[418903, 9808, 125, 2, 28, "Input"],
Cell[419031, 9812, 461, 15, 28, "Output"]
}, Open  ]],
Cell[419507, 9830, 370, 9, 31, "Text"],
Cell[CellGroupData[{
Cell[419902, 9843, 122, 2, 28, "Input"],
Cell[420027, 9847, 536, 18, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[420600, 9870, 127, 2, 28, "Input"],
Cell[420730, 9874, 434, 15, 28, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[421213, 9895, 175, 2, 44, "Subsection"],
Cell[CellGroupData[{
Cell[421413, 9901, 127, 2, 28, "Input"],
Cell[421543, 9905, 371, 9, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[421951, 9919, 162, 3, 28, "Input"],
Cell[422116, 9924, 4068, 113, 132, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[426221, 10042, 132, 2, 28, "Input"],
Cell[426356, 10046, 302, 9, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[426695, 10060, 126, 2, 28, "Input"],
Cell[426824, 10064, 102, 2, 28, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[426975, 10072, 116, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[427116, 10077, 280, 8, 28, "Input"],
Cell[427399, 10087, 761, 23, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[428197, 10115, 284, 8, 28, "Input"],
Cell[428484, 10125, 913, 29, 58, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[429458, 10161, 134, 1, 64, "Section"],
Cell[429595, 10164, 2093, 52, 129, "Text"],
Cell[CellGroupData[{
Cell[431713, 10220, 171, 2, 44, "Subsection"],
Cell[431887, 10224, 294, 6, 30, "Text"],
Cell[432184, 10232, 908, 25, 91, "DisplayFormulaNumbered"],
Cell[433095, 10259, 373, 10, 31, "Text"],
Cell[433471, 10271, 638, 16, 46, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[434146, 10292, 112, 1, 44, "Subsection"],
Cell[434261, 10295, 983, 32, 42, "Text"],
Cell[435247, 10329, 1269, 41, 55, "DisplayFormulaNumbered"],
Cell[436519, 10372, 590, 9, 68, "Text"],
Cell[437112, 10383, 264, 7, 30, "Text"],
Cell[CellGroupData[{
Cell[437401, 10394, 448, 13, 28, "Input"],
Cell[437852, 10409, 910, 26, 50, "Output"]
}, Open  ]],
Cell[438777, 10438, 740, 19, 61, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[439554, 10462, 109, 1, 44, "Subsection"],
Cell[439666, 10465, 163, 3, 30, "Text"]
}, Open  ]],
Cell[439844, 10471, 22, 0, 44, "Subsection"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
